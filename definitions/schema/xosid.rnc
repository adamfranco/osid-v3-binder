#
# X-OSID Schema for OSID Version 3.0.0
#
#    Copyright (C) 2002-2007 Massachusetts Institute of Technology. All
#    Rights Reserved.
#
#    This Work is being provided by the copyright holder(s) subject to the
#    following license. By obtaining, using and/or copying this Work, you
#    agree that you have read, understand, and will comply with the following
#    terms and conditions.
#
#    This Work and the information contained herein is provided on an "AS IS"
#    basis. The Massachusetts Institute of Technology, the Open Knowledge
#    Initiative, and THE AUTHORS DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
#    INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR
#    A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
#    OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
#    FROM, OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER DEALINGS
#    IN THE WORK.
#
#    Permission to use, copy and distribute unmodified versions of this Work,
#    for any purpose, without fee or royalty is hereby granted, provided that
#    you include the above copyright notice and the terms of this license on
#    ALL copies of the Work or portions thereof. 
#
#    You may nodify or create Derivatives of this Work only for your internal
#    purposes. You shall not distribute or transfer any such Derivative or
#    this Work to any location or to any third party. For the purposes of
#    this license, Derivative shall mean any derivative of the Work as
#    defined in the United States Copyright Act of 1976, such as a
#    translation or modification.
#
#    The export of software employing encryption technology may require a
#    specific license from the United States Government. It is the
#    responsibility of any person or organization comtemplating export to
#    obtain such a license before exporting this Work.
#
# $Id: $
#

namespace xosid = "urn:inet:osid.org:schemas/osid/3"

grammar {
	start = osid

	osid = element xosid:osid {
		attribute xosid:name { text },
		attribute xosid:version { text },
		element xosid:title { text },
		element xosid:copyright { osidText },
		element xosid:license { osidText },
		element xosid:description { osidText },
		(osidInterface+ & osidEnumeration*)
	}

	osidEnumeration = element xosid:enumeration {
		attribute xosid:name { text },
		element xosid:description { osidText },
		osidEnumItem+
	}

	osidEnumItem = element xosid:item {
		attribute xosid:name { text },
		element xosid:description { osidText }
	}

	osidInterface = element xosid:interface {
		attribute xosid:name { text },
		osidImplements*,
		element xosid:description { osidText },
		osidMethod*
	}

	osidImplements = element xosid:implements {
		attribute xosid:interface { text }
	}

	osidMethod = element xosid:method {
		attribute xosid:name { text },
		element xosid:description { osidText },
		osidParameter*,
		osidReturn?,
		osidError*,
		osidCompliance,
		element xosid:implNotes { osidText }?
	}

	osidParameter = element xosid:parameter {
		attribute xosid:name { text },
		(osidInterfaceType | osidPrimitiveType),
		element xosid:description { osidText }
	}

	osidReturn = element xosid:return {
		(osidInterfaceType | osidPrimitiveType),
		element xosid:description { osidText }
	}

	osidInterfaceType = element xosid:interfaceType {
		attribute xosid:type { text },
		attribute xosid:array { xsd:boolean }?
	}

	osidPrimitiveType = element xosid:primitiveType {
		attribute xosid:type { "boolean" |
				 "byte" |
				 "cardinal" |
				 "float" |
				 "integer" |
				 "object" |
				 "string" |
				 "timestamp"
		},
		attribute xosid:array { xsd:boolean }?
	}

	osidError = element xosid:error {
		attribute xosid:type { text },
		attribute xosid:category { "User" | "Operational" | 
				           "Integration" | "Programming" },
		element xosid:description { osidText }
	}

	osidCompliance = element xosid:compliance {
		attribute xosid:type { "mandatory" | "optional" },
		element xosid:description { osidText }
	}

	osidText = mixed {
		osidOutline* & 
		element xosid:code { text }* &
		element xosid:token { text }* &
		element xosid:pbreak { empty }* &
		element xosid:copyrightSymbol { empty }*
	}

	osidOutline = element xosid:outline {
		element xosid:element { osidText }+
	}
}
