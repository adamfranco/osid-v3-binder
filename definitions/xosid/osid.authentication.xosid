<?xml version="1.0" encoding="iso-8859-1" standalone="no"?>

<!--
    XOSID for osid.authentication generated at 10/14/2008 9:39:51 AM 

    Copyright (C) 2002-2008 Massachusetts Institute of Technology. All
    Rights Reserved.

    This Work is being provided by the copyright holder(s) subject to the
    following license. By obtaining, using and/or copying this Work, you
    agree that you have read, understand, and will comply with the following
    terms and conditions.

    This Work and the information contained herein is provided on an "AS IS"
    basis. The Massachusetts Institute of Technology, the Open Knowledge
    Initiative, and THE AUTHORS DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
    INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR
    A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
    OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER DEALINGS
    IN THE WORK.

    Permission to use, copy and distribute unmodified versions of this Work,
    for any purpose, without fee or royalty is hereby granted, provided that
    you include the above copyright notice and the terms of this license on
    ALL copies of the Work or portions thereof. 

    You may nodify or create Derivatives of this Work only for your internal
    purposes. You shall not distribute or transfer any such Derivative of
    this Work to any location or to any third party. For the purposes of
    this license, Derivative shall mean any derivative of the Work as
    defined in the United States Copyright Act of 1976, such as a
    translation or modification.

    The export of software employing encryption technology may require a
    specific license from the United States Government. It is the
    responsibility of any person or organization comtemplating export to
    obtain such a license before exporting this Work.
-->

<xosid:osid xmlns:xosid="urn:inet:osid.org:schemas/osid/3" xosid:name="osid.authentication" xosid:version="3.0.0">

    <xosid:title>
        Authentication Open Service Interface Definitions
    </xosid:title>

    <xosid:copyright>
        Copyright <xosid:copyrightSymbol/>2002-2008 Massachusetts
        Institute of Technology. All Rights Reserved.
    </xosid:copyright>

    <xosid:license>
        This Work is being provided by the copyright holder(s) subject
        to the following license. By obtaining, using and/or copying
        this Work, you agree that you have read, understand, and will
        comply with the following terms and conditions.

        <xosid:pbreak/>

        This Work and the information contained herein is provided on
        an "AS IS" basis. The Massachusetts Institute of Technology,
        the Open Knowledge Initiative, and THE AUTHORS DISCLAIM ALL
        WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
        WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
        AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
        HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
        WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
        FROM, OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER
        DEALINGS IN THE WORK.

        <xosid:pbreak/>

        Permission to use, copy and distribute unmodified versions of
        this Work, for any purpose, without fee or royalty is hereby
        granted, provided that you include the above copyright notice
        and the terms of this license on ALL copies of the Work or
        portions thereof. 

        <xosid:pbreak/>

        You may nodify or create Derivatives of this Work only for your
        internal purposes. You shall not distribute or transfer any
        such Derivative of this Work to any location or to any third
        party. For the purposes of this license, Derivative shall mean
        any derivative of the Work as defined in the United States
        Copyright Act of 1976, such as a translation or modification.

        <xosid:pbreak/>

        The export of software employing encryption technology may
        require a specific license from the United States Government.
        It is the responsibility of any person or organization
        comtemplating export to obtain such a license before exporting
        this Work.
    </xosid:license>

    <xosid:description>
        The Authentication OSID helps a consumer acquire and validate
        authentication credentials without having to manage the details
        of a particular authentication environment. Authentication is
        generally a two step process. A user wishing to authenticate
        acquires a set of credentials and transports those credentials
        to a remote peer. The remote peer then validates those
        credentials and determines the identity of the user
        represented. This process is reflected in the Authentication
        OSID with the definition of two OSID sessions:

        <xosid:pbreak/>

        <xosid:outline>
             <xosid:element>

                                <xosid:token>AuthenticationAcquisitionSession:</xosid:token>
                session to acquire credentials from a user and
                serialize them for transport to a remote peer for authentication
            </xosid:element>
             <xosid:element>

                                <xosid:token>AuthenticationValidationSession:</xosid:token>
                session to receive and validate authentication
                credentials from a remote peer wishing to authenticate
            </xosid:element>
        </xosid:outline>
         
        The transport of authentication credentials is the
        responsibility of the consumer of the Authentication OSID as
        authentication generally supports an existing application
        protocol enviornment. A means exists to extract and supply
        credentials at each end. An Authentication provider may support
        either or both sessions, and one or more credential formats.
        Methods also exist to support a challenge-response type system.
        The Authentication OSID defines an
        <xosid:token>Agent</xosid:token> to represent the identity of
        the authenticated entity. An Agent may map to a specific
        authentication principal or some providers may hide multiple
        authentication principals behind a single <xosid:token>Agent
        </xosid:token>identity. Because principal identities tend not
        to be durable and persistent, consumers should always persist
        the <xosid:token>Id.</xosid:token> Relationships to other OSIDs
        such as Resource are made using the
        <xosid:token>Id</xosid:token> as the key. The Authentication
        service links to an Authorization service via the
        <xosid:token>Agent Id.</xosid:token> An Authorization service
        describes what actions the <xosid:token>Agent</xosid:token> is
        authorized to perform.
        An <xosid:token>Agent</xosid:token> may map to a
        <xosid:token>Resource. M</xosid:token>ultiple
        <xosid:token>Agents</xosid:token> may map to a single
        <xosid:token>Resource</xosid:token> for the purpose of
        defining distinct security levels of assurance (although the
        paranoid may opt for defining a pseudo-resource for each
        <xosid:token>Agent</xosid:token>). These security levels of
        assurance can be identified through the
        <xosid:token>Agent</xosid:token>
        <xosid:token>Type</xosid:token> for the purposes of mapping a
        <xosid:token>Resource</xosid:token> back to one or more
        approporiate <xosid:token>Agents</xosid:token> to facilitate
        authorization maintenance. The <xosid:token>Agent</xosid:token>
        <xosid:token>Type</xosid:token> is an indicator of the
        strength of the authentication and although it may correlate to
        a specific authentication technology, coupling it too tightly
        to a particular technology may limit flexibility.

        <xosid:pbreak/>

        The Authentication OSID can also manage
        <xosid:token>Agents</xosid:token> and associated keys. Key
        management sessions are defined to extract, modify and delete keys.

        <xosid:pbreak/>

        Example client side authentication:
        
        <xosid:code>
<![CDATA[
if (manager.supportsAuthenticationAcquisition() &&
    manager.supportsAcquisitionInputType(krb5ServiceType) &&
    manager.supportsCredentialType(serialKRB5Type)) {
    AuthenticationAcquisitionSession aas = manager.getAuthenticationAcquisitionSession();

    // specify input parameters (interface extension)
    KRB5Service kService = new KRB5Service();
    kService.setName("host");
    kService.setInstance("server.osid.org");
    kService.setRealm("OSID.ORG");

    // get Credential (interface type) 
    Authentication auth = aas.getAuthentication(kService, krb5ServiceType);
    SerializedKRB5Ticket ticket = (SerializedKRB5Ticket)        auth.getCredential(serialKRB5Type);
    send_data_to_peer(ticket); // app specific protocol
}]]>
        </xosid:code>
         
         

        <xosid:pbreak/>

        Example server side authentication:
        
        <xosid:code>
<![CDATA[
if (manager.supportsAuthenticationValidation() &&
    manager.supportsCredentialType(serialSAML2Type)) {
    AuthenticationValidationSession avs = manager.getAuthenticationValidationSession();

    Authentication auth = authenticate(SAML2Token, serialSAML2Type);

    if (auth.isValid()) {
        Agent agent = auth.getAgent(); // identity established
    }
}]]>
        </xosid:code>
         
        Certain consumers may wish to be notified of changes within the
        service. Authentication supports notifications via an
        <xosid:token>AgentNotificationSession.</xosid:token> 

        <xosid:pbreak/>

<xosid:code>
<![CDATA[
if (manager.supportsAgentNotification()) {
    AgentNotificationSession ans = manager.getAgentNotificationSession(receiver);
    ans.registerForNewAgents();
    hangAround();
}

AgentReceiver receiver {
    newAgent(Id agentId) { print("new agent"); }
    changedAgent(Id agentId) { print("updated agent"); }
    deletedAgent(Id agentId) { print("deleted agent"); }
}]]>
        </xosid:code>
         
    </xosid:description>


    <xosid:interface xosid:name="osid.authentication.AuthenticationProfile"> 
        <xosid:implements xosid:interface="osid.OsidProfile"/>
        <xosid:description>
            The <xosid:token>AuthenticationProfile</xosid:token>
            describes the interoperability among authentication
            services.
        </xosid:description>


        <xosid:method xosid:name="supportsAuthenticationAcquisition">
            <xosid:description>
                Tests is authentication acquisition is supported.
                Authentication acquisition is responsible for acquiring
                client side authentication credentials.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if authentication
                    acquisiiton is
                    supported<xosid:token>,</xosid:token>
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsAuthenticationValidation">
            <xosid:description>
                Tests if authentication validation is supported.
                Authentication validation verifies given authentication
                credentials and maps to an agent identity.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if authentication
                    validation is supported,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsAgentLookup">
            <xosid:description>
                Tests if an agent lookup service is supported. An agent
                lookup service defines methods to access agents.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if agent lookup is
                    supported, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsAgentSearch">
            <xosid:description>
                Tests if an agent search service is supported.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if agent search is
                    supported, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsAgentAdmin">
            <xosid:description>
                Tests if an agent administrative service is supported.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if agent admin is
                    supported, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsAgentNotification">
            <xosid:description>
                Tests if agent notification is supported. Messages may
                be sent when agents are created, modified, or deleted.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if agent
                    notification is
                    supported<xosid:token>,</xosid:token>
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsKeyLookup">
            <xosid:description>
                Tests if a key lookup service is supported. A key
                lookup service defines methods to access keys.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if key lookup is
                    supported, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsKeyAdmin">
            <xosid:description>
                Tests if a key administrative service is supported.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if key admin is
                    supported, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsChallenge">
            <xosid:description>
                Tests if this authentication service supports a
                challenge-response mechanism where credential
                validation service must implement a means to generate
                challenge data.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if this is a
                    challenge-response system,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getChallengeTypes">
            <xosid:description>
                Gets the supported challenge types.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    a list containing the supported challenge types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsChallengeType">
            <xosid:description>
                Tests if the given challenge data type is supported.
            </xosid:description>
            <xosid:parameter xosid:name="peerChallengeType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a <xosid:token>Type</xosid:token> indicating a
                    challenge data format
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given Type
                    is supported, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsCredentialExport">
            <xosid:description>
                Tests if <xosid:token>Authentication</xosid:token>
                objects can export serialzied credentials for
                transport.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given
                    credentials export is supported,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCredentialTypes">
            <xosid:description>
                Gets the supported credential types.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    a list containing the supported credential types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsCredentialType">
            <xosid:description>
                Tests if the given credential type is supported.
            </xosid:description>
            <xosid:parameter xosid:name="credentialType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a <xosid:token>Type</xosid:token> indicating an
                    credential type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given Type
                    is supported, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentRecordTypes">
            <xosid:description>
                Gets the supported <xosid:token>Agent</xosid:token>
                record types.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    a list containing the supported
                    <xosid:token>Agent</xosid:token> record types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsAgentRecordType">
            <xosid:description>
                Tests if the given <xosid:token>Agent</xosid:token>
                record type is supported.
            </xosid:description>
            <xosid:parameter xosid:name="agentRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a <xosid:token>Type</xosid:token> indicating an
                    <xosid:token>Agent</xosid:token> record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given record
                    Type is supported, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentSearchRecordTypes">
            <xosid:description>
                Gets the supported <xosid:token>Agent</xosid:token>
                search record types.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    a list containing the supported
                    <xosid:token>Agent</xosid:token> search record
                    types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsAgentSearchRecordType">
            <xosid:description>
                Tests if the given <xosid:token>Agent</xosid:token>
                search record type is supported.
            </xosid:description>
            <xosid:parameter xosid:name="agentSearchRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a <xosid:token>Type</xosid:token> indicating an
                    <xosid:token>Agent</xosid:token> search record
                    type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given Type
                    is supported, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeyRecordTypes">
            <xosid:description>
                Gets the supported <xosid:token>Key</xosid:token>
                record types.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    a list containing the supported
                    <xosid:token>Key</xosid:token> record types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsKeyRecordType">
            <xosid:description>
                Tests if the given <xosid:token>Key</xosid:token>
                record type is supported.
            </xosid:description>
            <xosid:parameter xosid:name="keyRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a <xosid:token>Type</xosid:token> indicating a
                    <xosid:token>Key</xosid:token> type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given key
                    record <xosid:token>Type</xosid:token> is
                    supported, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeySearchRecordTypes">
            <xosid:description>
                Gets the supported key search record types.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    a list containing the supported
                    <xosid:token>Key</xosid:token> search record types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsKeySearchRecordType">
            <xosid:description>
                Tests if the given key search record type is supported.
            </xosid:description>
            <xosid:parameter xosid:name="keySearchRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a <xosid:token>Type</xosid:token> indicating a
                    <xosid:token>Key</xosid:token> search record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given search
                    record <xosid:token>Type</xosid:token> is
                    supported, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AuthenticationManager"> 
        <xosid:implements xosid:interface="osid.OsidManager"/>
        <xosid:implements xosid:interface="osid.authentication.AuthenticationProfile"/>
        <xosid:description>
            The authentication manager provides access to
            authentication sessions and provides interoperability tests
            for various aspects of this service. The sessions included
            in this manager are:

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>

                                        <xosid:token>AuthenticationAcquisitionSession:</xosid:token>
                    a session to acquire credentials from a user and
                    serialize them for transport to a remote peer for authentication
                </xosid:element>
                 <xosid:element>
                    <xosid:token>AuthenticationValidationSession:
                    a</xosid:token> session to receive and validate
                    authentication credentials from a remote peer
                    wishing to authenticate
                </xosid:element>
                 <xosid:element>
                    <xosid:token>AgentLookupSession:</xosid:token> a
                    session to look up <xosid:token>Agents</xosid:token>
                </xosid:element>
                 <xosid:element>
                    <xosid:token>AgentSearchSession: </xosid:token>a
                    session to search<xosid:token> Agents</xosid:token>
                </xosid:element>
                 <xosid:element>
                    <xosid:token>AgentAdminSession:</xosid:token> a
                    session to create, modify and delete
                    <xosid:token>Agents</xosid:token>
                </xosid:element>
                 <xosid:element>
                    <xosid:token>AgentNotificationSession: a
                    </xosid:token>session to receive messages
                    pertaining to <xosid:token>Agent </xosid:token>changes
                </xosid:element>
                 <xosid:element>
                    <xosid:token>KeyLookupSession:</xosid:token> a
                    session to access the keys of <xosid:token>Agents</xosid:token>
                </xosid:element>
                 <xosid:element>
                    <xosid:token>KeyAdminSession:</xosid:token> a
                    session to update the keys of <xosid:token>Agents</xosid:token>
                </xosid:element>
            </xosid:outline>
            The authentication manager provides a profile for
            determining authentication process compatibility with
            regard to requiring data from a challenge response
            mechanism to generate the credential with
            <xosid:token>supportsChallenge().</xosid:token>
            The authentication profile also tests for supported Types.
            <xosid:token>supportsChallengeType()</xosid:token> and
            <xosid:token>supportsAgentType(),</xosid:token>
            <xosid:token>supportsKeyType()</xosid:token> are methods
            that can be used to determine is the desired
            <xosid:token>Types</xosid:token> are supported.

            <xosid:pbreak/>

            Notifications for adds and changes to
            <xosid:token>Agents</xosid:token> is available via the
            <xosid:token>getAgentNotificationSession()</xosid:token>
            method.
        </xosid:description>


        <xosid:method xosid:name="getAuthenticationAcquisitionSession">
            <xosid:description>
                Gets an <xosid:token>AuthenticationAcquisitionSession
                </xosid:token>which is responsible for acquiring
                authentication credentials on behalf of a service
                client.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AuthenticationAcquisitionSession"/>
                <xosid:description>
                    an acquisition session for this service
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsAuthenticationAcquisition()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsAcquisition()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAuthenticationValidationSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the
                <xosid:token>AuthenticationValidation</xosid:token>
                service.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AuthenticationValidationSession"/>
                <xosid:description>
                    an
                    <xosid:token>AuthenticationValidationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsAuthenticationValidation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsValidation()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentLookupSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the agent lookup service.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentLookupSession"/>
                <xosid:description>
                    an <xosid:token>AgentLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsAgentLookup()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsAgentLookup()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentSearchSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the agent search service.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentSearchSession"/>
                <xosid:description>
                    an <xosid:token>AgentSearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsAgentSearch()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsAgentSearch()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentAdminSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the agent administration service.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentAdminSession"/>
                <xosid:description>
                    an <xosid:token>AgentAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsAgentAdmin()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsAgentAdmin()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentNotificationSession">
            <xosid:description>
                Gets the notification session for notifications
                pertaining to service changes.
            </xosid:description>
            <xosid:parameter xosid:name="receiver">
                <xosid:interfaceType xosid:type="osid.authentication.AgentReceiver"/>
                <xosid:description>
                    the agent receiver interface
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentNotificationSession"/>
                <xosid:description>
                    an
                    <xosid:token>AgentNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>receiver</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsAgentNotification()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsAgentNotification()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeyLookupSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the key lookup service.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeyLookupSession"/>
                <xosid:description>
                    the new <xosid:token>KeyLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsKeyLookup()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsKeyLookup()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeyAdminSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the key administration service.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentAdminSession"/>
                <xosid:description>
                    an <xosid:token>KeyAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsKeyAdmin()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsKeyAdmin()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AuthenticationProxyManager"> 
        <xosid:implements xosid:interface="osid.OsidProxyManager"/>
        <xosid:implements xosid:interface="osid.authentication.AuthenticationProfile"/>
        <xosid:description>
            The authentication proxy manager provides access to
            authentication sessions and provides interoperability tests
            for various aspects of this service. Methods in this
            manager support the passing of an
            <xosid:token>Authentication</xosid:token> object for the
            purposes of proxy authentication. The sessions included in
            this manager are:

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>

                                        <xosid:token>AuthenticationAcquisitionSession:</xosid:token>
                    session to acquire credentials from a user and
                    serialize them for transport to a remote peer for authentication
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>AuthenticationValidationSession:</xosid:token>
                    session to receive and validate authentication
                    credentials from a remote peer wishing to authenticate
                </xosid:element>
                 <xosid:element>
                    <xosid:token>AgentLookupSession:</xosid:token>
                    session to look up <xosid:token>Agents</xosid:token>
                </xosid:element>
                 <xosid:element>
                    <xosid:token>AgentSearchSession:
                    </xosid:token>session to search<xosid:token> Agents</xosid:token>
                </xosid:element>
                 <xosid:element>
                    <xosid:token>AgentAdminSession:</xosid:token>
                    session to create, modify and delete
                    <xosid:token>Agents</xosid:token>
                </xosid:element>
                 <xosid:element>

                                        Agent<xosid:token>NotificationSession:</xosid:token>
                    session to receive messages pertaining to
                    <xosid:token>Agent </xosid:token>changes
                </xosid:element>
                 <xosid:element>
                    <xosid:token>KeyLookupSession:</xosid:token> a
                    session to lookup <xosid:token>Agent</xosid:token> keys
                </xosid:element>
                 <xosid:element>
                    <xosid:token>KeyAdminSession:</xosid:token> a
                    session to modify and delete
                    <xosid:token>Agent</xosid:token> keys
                </xosid:element>
            </xosid:outline>
             
            The authentication manager provides a profile for
            determining authentication process compatibility with
            regard to requiring data from a challenge response
            mechanism to generate the credential with
            <xosid:token>supportsChallenge().</xosid:token>

            <xosid:pbreak/>

            The authentication profile also tests for interoperability
            tests for supported Types.
            <xosid:token>supportsAgentType(),</xosid:token>
            <xosid:token>supportsChallengeType()</xosid:token> and
            <xosid:token>supportsKeyType()</xosid:token> are methods
            that can be used to determine is the desired
            <xosid:token>Types</xosid:token> are supported.

            <xosid:pbreak/>

            Notifications for adds and changes to
            <xosid:token>Agents</xosid:token> is available via the
            <xosid:token>getAgentNotificationSession()</xosid:token>
            method.
        </xosid:description>


        <xosid:method xosid:name="getAuthenticationAcquisitionSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the
                <xosid:token>AuthenticationAcquisitionSession</xosid:token>
                using the supplied
                <xosid:token>Authentication.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AuthenticationAcquisitionSession"/>
                <xosid:description>
                    an
                    <xosid:token>AuthenticationAcquisitionSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsAuthenticationAcquisition()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsAcquisition()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAuthenticationValidationSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the
                <xosid:token>AuthenticationValidation</xosid:token>
                service using the supplied
                <xosid:token>Authentication.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AuthenticationValidationSession"/>
                <xosid:description>
                    an
                    <xosid:token>AuthenticationValidationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is null
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsAuthenticationValidation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsValidation()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentLookupSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the agent lookup service.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentLookupSession"/>
                <xosid:description>
                    an <xosid:token>AgentLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is null
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsAgentLookup()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsAgentLookup()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentSearchSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the agent search service.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentSearchSession"/>
                <xosid:description>
                    an <xosid:token>AgentSearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is null
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsAgentSearch()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsAgentSearch()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentAdminSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the agent administration service.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentAdminSession"/>
                <xosid:description>
                    an <xosid:token>AgentAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is null
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsAgentAdmin()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsAgentAdmin()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentNotificationSession">
            <xosid:description>
                Gets the messaging receiver session for notifications
                pertaining to agent changes.
            </xosid:description>
            <xosid:parameter xosid:name="receiver">
                <xosid:interfaceType xosid:type="osid.authentication.AgentReceiver"/>
                <xosid:description>
                    the agent receiver
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentNotificationSession"/>
                <xosid:description>
                    an
                    <xosid:token>AgentNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> or
                    <xosid:token>receiver</xosid:token> is null
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsAgentNotification()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsAgentNotification()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeyLookupSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the key lookup service.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeyLookupSession"/>
                <xosid:description>
                    a<xosid:token> KeyLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is null
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsKeyLookup()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsKeyLookup()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeyAdminSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the key administration service.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeyAdminSession"/>
                <xosid:description>
                    a<xosid:token> KeyAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is null
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsKeyAdmin()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsKeyAdmin()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AuthenticationAcquisitionSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session acquires authentication credentials. The basic
            method, <xosid:token>getAuthentication(),</xosid:token>
            gets authentication credentials for use with authenticating
            to a remote peer. These credentials may be generated from
            direct user input or retrieved via a file, for example.
        </xosid:description>


        <xosid:method xosid:name="getAuthentication">
            <xosid:description>
                Gets the authentication credential for the current
                user. The input data may represent the identity of the
                remote peer or data from a challenge-response
                transaction necessary for generating the credantial.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    the acquired authentication credential
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AuthenticationValidationSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session is the remote end of a transport link from the
            acquisition session and validates authentication
            credentials sent to it. The basic method,
            <xosid:token>authenticate()</xosid:token> accepts a
            credential, validates it and returns an Authentication
            object containing the identity of the authenticated user.
            The credential is indicated by a
            <xosid:token>Type.</xosid:token>
            <xosid:token>AuthenticationManager.getCredentialTypes()</xosid:token>
            lists all the credential types supported.

            <xosid:pbreak/>

            This OSID does not define any root interface for
            credentials and challenge data. The object representing
            these are completely defined within their
            <xosid:token>Type, </xosid:token>providing flexibility in
            adapting to a variety of application environments.
        </xosid:description>


        <xosid:method xosid:name="authenticate">
            <xosid:description>
                Validates and returns the authentication credential
                from the given data.
            </xosid:description>
            <xosid:parameter xosid:name="credential">
                <xosid:primitiveType xosid:type="object"/>
                <xosid:description>
                    contains an authentication credential to be
                    validated
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="credentialType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    specifies the credential interface
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    the acquired authentication credential
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>credential</xosid:token> is not of
                    <xosid:token>credentialType</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>credentialType
                   </xosid:token>or <xosid:token> credential
                   </xosid:token>is <xosid:token> null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>credentialType</xosid:token> not
                    supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getChallengeData">
            <xosid:description>
                Gets data that can be used for a challenge to the peer
                attempting authentication.
            </xosid:description>
            <xosid:parameter xosid:name="challengeType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    specifies the format of the data challenge
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="object"/>
                <xosid:description>
                    the acquired challenge data
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>challengeType
                   </xosid:token>is <xosid:token> null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    challenge response not available
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>challengeType</xosid:token> not
                    supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>AuthenticationManager.supportsChallenge()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AgentLookupSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods for retrieving
            <xosid:token>Agent</xosid:token> objects. The
            <xosid:token>Agent </xosid:token>represents the
            authenticated entity. Agents generally map to resources
            although this isn't always the case. 

            <xosid:pbreak/>

            This session defines two views which offer differing
            behaviors when retrieving multiple objects.

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    comparative view: elements may be silently omitted
                    or re-ordered 
                </xosid:element>
                 <xosid:element>
                    plenary view: provides a complete and ordered
                    result set or is an error condition
                </xosid:element>
            </xosid:outline>
            Generally, the comparative view should be used for most
            applications as it permits operation even if there a
            particular element is inaccessible. For example, a
            hierarchy output can be plugged into a lookup method to
            retrieve all objects known to a hierarchy, but it may not
            be necessary to break execution if a node from the
            hierarchy no longer exists. However, some administrative
            applications may need to know whether it had retrieved an
            entire set of objects and may sacrifice some
            interoperability for the sake of precision.
            Agents may have an additional records indicated by their
            respective record types. The record may not be accessed
            through a cast of the <xosid:token>Agent.</xosid:token>
        </xosid:description>


        <xosid:method xosid:name="canLookupAgents">
            <xosid:description>
                Tests if this user can perform
                <xosid:token>Agent</xosid:token> lookups. A return of
                true does not guarantee successful authorization. A
                return of false indicates that it is known all methods
                in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer lookup operations.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if lookup methods
                    are not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useComparativeAgentView">
            <xosid:description>
                The returns from the lookup methods may omit or
                translate elements based on this session, such as
                authorization, and not result in an error. This view is
                used when greater interoperability is desired at the
                expense of precision.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="usePlenaryAgentView">
            <xosid:description>
                A complete view of the <xosid:token>Agent</xosid:token>
                returns is desired. Methods will return what is
                requested or result in an error. This view is used when
                greater precision is desired at the expense of
                interoperability.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgent">
            <xosid:description>
                Gets the <xosid:token>Agent</xosid:token> specified by
                its <xosid:token>Id. </xosid:token>In plenary mode, the
                exact <xosid:token>Id</xosid:token> is found or a
                <xosid:token>NOT_FOUND</xosid:token> results.
                Otherwise, the returned
                <xosid:token>Agent</xosid:token> may have a different
                <xosid:token>Id</xosid:token> than requested, such as
                the case where a duplicate
                <xosid:token>Id</xosid:token> was assigned to an
                <xosid:token>Agent</xosid:token> and retained for
                compatibility.
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Agent</xosid:token> to rerieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.Agent"/>
                <xosid:description>
                    the returned <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    no <xosid:token>Agent</xosid:token> found with the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentsByIds">
            <xosid:description>
                Gets an <xosid:token>AgentList</xosid:token>
                corresponding to the given <xosid:token>IdList.
                </xosid:token>In plenary mode, the returned list
                contains all of the agents specified in the
                <xosid:token>Id</xosid:token> list, in the order of
                the list, including duplicates, or an error results if
                an <xosid:token>Id</xosid:token> in the supplied list
                is not found or inaccessible. Otherwise, inaccessible
                <xosid:token>Agents</xosid:token> may be omitted from
                the list and may present the elements in any order
                including returning a unique set.
            </xosid:description>
            <xosid:parameter xosid:name="agentIdList">
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    the list of <xosid:token>Ids</xosid:token> to
                    rerieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentList"/>
                <xosid:description>
                    the returned <xosid:token>Agent list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    an <xosid:token>Id was</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentIdList</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentsByGenusType">
            <xosid:description>
                Gets an <xosid:token>AgentList</xosid:token>
                corresponding to the given agent genus
                <xosid:token>Type </xosid:token>which does not include
                agents of genus types derived from the specified
                <xosid:token>Type. </xosid:token>In plenary mode, the
                returned list contains all known agents or an error
                results. Otherwise, the returned list may contain only
                those agents that are accessible through this session.
                In both cases, the order of the set is not specified.
            </xosid:description>
            <xosid:parameter xosid:name="agentGenusType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    an agent genus type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentList"/>
                <xosid:description>
                    the returned <xosid:token>Agent list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentGenusType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentsByParentGenusType">
            <xosid:description>
                Gets an <xosid:token>AgentList</xosid:token>
                corresponding to the given agent genus
                <xosid:token>Type </xosid:token>and include any
                additional agents with genus types derived from the
                specified <xosid:token>Type. </xosid:token>In plenary
                mode, the returned list contains all known agents or an
                error results. Otherwise, the returned list may contain
                only those agents that are accessible through this
                session. In both cases, the order of the set is not
                specified.
            </xosid:description>
            <xosid:parameter xosid:name="agentGenusType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    an agent genus type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentList"/>
                <xosid:description>
                    the returned <xosid:token>Agent list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentGenusType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentsByRecordType">
            <xosid:description>
                Gets an <xosid:token>AgentList</xosid:token> containing
                the given repository record
                <xosid:token>Type.</xosid:token>In plenary mode, the
                returned list contains all known agents or an error
                results. Otherwise, the returned list may contain only
                those agents that are accessible through this session.
                In both cases, the order of the set is not specified.
            </xosid:description>
            <xosid:parameter xosid:name="agentRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    an agent record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentList"/>
                <xosid:description>
                    the returned <xosid:token>Agent list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgents">
            <xosid:description>
                Gets all <xosid:token>Agents.</xosid:token> In plenary
                mode, the returned list contains all known agents or an
                error results. Otherwise, the returned list may contain
                only those agents that are accessible through this
                session. In both cases, the order of the set is not
                specified.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentList"/>
                <xosid:description>
                    a list of <xosid:token>Agents</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AgentSearchSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods for searching
            <xosid:token>Agent</xosid:token> objects. The search query
            is constructed using the
            <xosid:token>AgentQuery</xosid:token> interface. Multiple
            <xosid:token>AgentQuery</xosid:token> interfaces may be
            submitted into a search to perform a boolean OR. If more
            than one search element is specified within a single
            <xosid:token>AgentQuery</xosid:token> these elements form
            a boolean AND. The agent interface
            <xosid:token>Type</xosid:token> also specifies the
            interface for the agent query. 

            <xosid:pbreak/>

            <xosid:token>getAgentsByQuery()</xosid:token> is the basic
            search method and returns a list of
            <xosid:token>Agents.</xosid:token> A more advanced search
            may be performed with <xosid:token>getAgentsBySearch().
            </xosid:token>It accepts an
            <xosid:token>AgentSearch</xosid:token> interface in
            addition to the query interface for the purpose of
            specifying additional options affecting the entire search,
            such as ordering.
            <xosid:token>getAgentsBySearch()</xosid:token> returns an
            <xosid:token>AgentSearchResults</xosid:token> interface
            that can be used to access the resulting
            <xosid:token>AgentList</xosid:token> or be used to perform
            a search within the result set through
            <xosid:token>AgentSearch.</xosid:token>
            Agents may have a record query interface indicated by their
            respective record types. The record query interface is
            accessed via the <xosid:token>AgentQuery.</xosid:token>
        </xosid:description>


        <xosid:method xosid:name="canSearchAgents">
            <xosid:description>
                Tests if this user can perform
                <xosid:token>Agent</xosid:token> searches. A return of
                true does not guarantee successful authorization. A
                return of false indicates that it is known all methods
                in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer search operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if search methods
                    are not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentQuery">
            <xosid:description>
                Gets an agent query interface.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentQuery"/>
                <xosid:description>
                    the agent query
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentsByQuery">
            <xosid:description>
                Gets a list of <xosid:token>Agents</xosid:token>
                matching the given query interface. Each element in the
                array is OR'd.
            </xosid:description>
            <xosid:parameter xosid:name="agentQueries">
                <xosid:interfaceType xosid:type="osid.authentication.AgentQuery" xosid:array="true"/>
                <xosid:description>
                    the search query array
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentList"/>
                <xosid:description>
                    the returned <xosid:token>AgentList</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentQueries</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    an <xosid:token>AgentQuery</xosid:token> is not of
                    this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentSearch">
            <xosid:description>
                Gets an agent search interface.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentSearch"/>
                <xosid:description>
                    the agent search interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentSearchOrder">
            <xosid:description>
                Gets an agent search order interface. The
                <xosid:token>AgentSearchOrder</xosid:token> is
                supplied to an <xosid:token>AgentSearch</xosid:token>
                to specify the ordering of results.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentSearchOrder"/>
                <xosid:description>
                    the agent search order interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentsBySearch">
            <xosid:description>
                Gets the search results matching the given search query
                using the given search. Each element in the query array
                is OR'd.
            </xosid:description>
            <xosid:parameter xosid:name="agentQueries">
                <xosid:interfaceType xosid:type="osid.authentication.AgentQuery" xosid:array="true"/>
                <xosid:description>
                    the search query array
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="agentSearch">
                <xosid:interfaceType xosid:type="osid.authentication.AgentSearch"/>
                <xosid:description>
                    the search interface
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentSearchResults"/>
                <xosid:description>
                    the returned search results
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentQueries
                   </xosid:token>or <xosid:token>
                    agentSearch</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>agentSearch</xosid:token> or a query
                    is not of this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AgentAdminSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods to create, delete and modify
            <xosid:token>Agent</xosid:token> objects. The data for
            create and update is provided by the consumer via the form
            object.
        </xosid:description>


        <xosid:method xosid:name="canCreateAgents">
            <xosid:description>
                Tests if this user can create
                <xosid:token>Agents.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known creating an
                <xosid:token>Agent</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer create operations to an unauthorized user.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Agent</xosid:token> creation is not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canCreateAgentWithRecordTypes">
            <xosid:description>
                Tests if this user can create a single
                <xosid:token>Agent </xosid:token>using the desired
                record interface types. While
                <xosid:token>AuthenticationManager.getAgentRecordTypes()</xosid:token>
                can be used to examine which record interfaces are
                supported, this method tests which record(s) are
                required for creating a specific
                <xosid:token>Agent.</xosid:token> Providing an empty
                array tests if an <xosid:token>Agent</xosid:token> can
                be created with no records.
            </xosid:description>
            <xosid:parameter xosid:name="agentRecordTypes">
                <xosid:interfaceType xosid:type="osid.type.Type" xosid:array="true"/>
                <xosid:description>
                    array of types
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if
                    <xosid:token>Agent</xosid:token> creation using
                    the specified record
                    <xosid:token>Types</xosid:token> is supported,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentRecordTypes</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentFormForCreate">
            <xosid:description>
                Gets the agent form for creating new agents. A new form
                should be requested for each create transaction.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentForm"/>
                <xosid:description>
                    the agent form
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="createAgent">
            <xosid:description>
                Creates a new <xosid:token>Agent.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="agentForm">
                <xosid:interfaceType xosid:type="osid.authentication.AgentForm"/>
                <xosid:description>
                    the forms for this <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.Agent"/>
                <xosid:description>
                    the new <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ALREADY_EXISTS" xosid:category="User">
                <xosid:description>
                    attempt at duplicating a property the underlying
                    system is enforcing to be unique
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    one or more of the form elements is invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentForm</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>agentForm</xosid:token> is not of this
                    service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canUpdateAgents">
            <xosid:description>
                Tests if this user can update
                <xosid:token>Agents.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known updating an
                <xosid:token>Agent</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer update operations to an unauthorized user.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if agent
                    modification is not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canUpdateAgent">
            <xosid:description>
                Tests if this user can update a specified agent. A
                return of true does not guarantee successful
                authorization. A return of false indicates that it is
                known updating the agent will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer an update operation to an unauthorized user
                for this agent.
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if agent
                    modification is not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                If the <xosid:token>agentId</xosid:token> is not found,
                then it is acceptable to return false to indicate the
                lack of an update available.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="getAgentFormForUpdate">
            <xosid:description>
                Gets the agent form for updating an existing agent. A
                new agent form should be requested for each update
                transaction.
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentForm"/>
                <xosid:description>
                    the agent form
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="updateAgent">
            <xosid:description>
                Updates an existing agent.
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="agentForm">
                <xosid:interfaceType xosid:type="osid.authentication.AgentForm"/>
                <xosid:description>
                    the form containing the elements to be updated
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    the form contains an invalid value
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentId
                   </xosid:token>or <xosid:token>
                    agentForm</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>agentForm</xosid:token> is not
                    supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canDeleteAgents">
            <xosid:description>
                Tests if this user can delete
                <xosid:token>Agents.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known deleting an
                <xosid:token>Agent</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer delete operations to an unauthorized user.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Agent</xosid:token> deletion is not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canDeleteAgent">
            <xosid:description>
                Tests if this user can delete a specified
                <xosid:token>Agent.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known deleting the
                <xosid:token>Agent</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer an delete operation to an unauthorized user
                for this agent.
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Agent</xosid:token> deletion is not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                If the <xosid:token>agentId</xosid:token> is not found,
                then it is acceptable to return false to indicate the
                lack of an delete available.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="deleteAgent">
            <xosid:description>
                Deletes the <xosid:token>Agent </xosid:token>identified
                by the given <xosid:token>Id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Agent</xosid:token> to delete
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    an <xosid:token>Agent</xosid:token> was not found
                    identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="addIdToAgent">
            <xosid:description>
                Adds an <xosid:token>Id</xosid:token> to an
                <xosid:token>Agent</xosid:token> for the purpose of
                creating compatibility. The primary
                <xosid:token>Id</xosid:token> of the
                <xosid:token>Agent</xosid:token> is determined by the
                provider. The new <xosid:token>Id</xosid:token>
                performs as an alias to the primary
                <xosid:token>Id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of an
                    <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="aliasId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the alias <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="ALREADY_EXISTS" xosid:category="User">
                <xosid:description>
                    <xosid:token>aliasId</xosid:token> is already
                    assigned
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> or
                    <xosid:token>aliasId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AgentNotificationSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session defines methods to receive asynchronous
            notifications on adds/changes to
            <xosid:token>Agent</xosid:token> objects. This session is
            intended for consumers needing to synchronize their state
            with this service without the use of polling. Notifications
            are cancelled when this session is closed.
        </xosid:description>


        <xosid:method xosid:name="canRegisterForAgentNotifications">
            <xosid:description>
                Tests if this user can register for
                <xosid:token>Agent</xosid:token> notifications. A
                return of true does not guarantee successful
                authorization. A return of false indicates that it is
                known all methods in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer notification operations.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if notification
                    methods are not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForNewAgents">
            <xosid:description>
                Register for notifications of new agents.
                <xosid:token>AgentReceiver.newAgent()</xosid:token> is
                invoked when a new <xosid:token>Agent</xosid:token> is
                created.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForChangedAgents">
            <xosid:description>
                Registers for notification of updated agents.
               
                <xosid:token>AgentReceiver.changedAgent()</xosid:token>
                is invoked when an agent is changed.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForChangedAgent">
            <xosid:description>
                Registers for notification of an updated agent.
               
                <xosid:token>AgentReceiver.changedAgent()</xosid:token>
                is invoked when the specified agent is changed.
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Agent</xosid:token> to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    an <xosid:token>Agent</xosid:token> was not found
                    identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedAgents">
            <xosid:description>
                Registers for notification of deleted agents.
               
                <xosid:token>AgentReceiver.deletedAgent()</xosid:token>
                is invoked when an agent is deleted.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedAgent">
            <xosid:description>
                Registers for notification of a deleted agent.
               
                <xosid:token>AgentReceiver.changedAgent()</xosid:token>
                is invoked when the specified agent is changed.
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Agent</xosid:token> to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    an <xosid:token>Agent</xosid:token> was not found
                    identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.KeyLookupSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods for retrieving
            <xosid:token>Key</xosid:token> objects. The
            <xosid:token>Key </xosid:token>is associated with an
            <xosid:token>Agent</xosid:token> and identified by the
            <xosid:token>Agent</xosid:token> Id. 

            <xosid:pbreak/>

            This session defines two views which offer differing
            behaviors when retrieving multiple objects.

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    comparative view: elements may be silently omitted
                    or re-ordered 
                </xosid:element>
                 <xosid:element>
                    plenary view: provides a complete and ordered
                    result set or is an error condition
                </xosid:element>
            </xosid:outline>
            Generally, the comparative view should be used for most
            applications as it permits operation even if there is data
            out of sync. For example, a hierarchy output can be plugged
            into a lookup method to retrieve all objects known to a
            hierarchy, but it may not be necessary to break execution
            if a node from the hierarchy no longer exists. However,
            some administrative applications may need to know whether
            it had retrieved an entire set of objects and may sacrifice
            some interoperability for the sake of precision.
            Keys may have an additional records indicated by their
            respective record types. The record may not be accessed
            through a cast of the <xosid:token>Key.</xosid:token>
        </xosid:description>


        <xosid:method xosid:name="canLookupKeys">
            <xosid:description>
                Tests if this user can lookup
                <xosid:token>Keys.</xosid:token> A return of true does
                not guarantee successful authorization. A return of
                false indicates that it is known getting a
                <xosid:token>Key</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt to
                offer key management functions to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if key management
                    is not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useComparativeKeyView">
            <xosid:description>
                The returns from the lookup methods may omit or
                translate elements based on this session, such as
                authorization, and not result in an error. This view is
                used when greater interoperability is desired at the
                expense of precision.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="usePlenaryKeyView">
            <xosid:description>
                A complete view of the <xosid:token>Key</xosid:token>
                returns is desired. Methods will return what is
                requested or result in an error. This view is used when
                greater precision is desired at the expense of
                interoperability.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="hasKey">
            <xosid:description>
                Tests if an agent has an associated key.
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the agent has a
                    key, <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKey">
            <xosid:description>
                Gets the agent key. In plenary mode, the exact Id is
                found or a NOT_FOUND results. Otherwise, the returned
                <xosid:token>Agent</xosid:token> via the
                <xosid:token>Key</xosid:token> may have a different Id
                than requested, such as the case where a duplicate
                <xosid:token>Id</xosid:token> was assigned to an Agent
                and retained for compatibility.
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.Key"/>
                <xosid:description>
                    the key of the agent
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is not found or
                    no key exists
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeysByIds">
            <xosid:description>
                Gets a <xosid:token>KeyList</xosid:token> corresponding
                to the given agent <xosid:token>IdList.</xosid:token>
                In plenary mode, the returned list contains all of the
                keys for agents specified in the
                <xosid:token>Id</xosid:token> list, in the order of the
                list, including duplicates, or an error results if an
                <xosid:token>Id</xosid:token> in the supplied list is
                not found or inaccessible. Otherwise, inaccessible
                <xosid:token>Keys</xosid:token> may be omitted from
                the list and may present the elements in any order
                including returning a unique set.
            </xosid:description>
            <xosid:parameter xosid:name="agentIdList">
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    the list of <xosid:token>Ids</xosid:token> to
                    rerieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeyList"/>
                <xosid:description>
                    the returned <xosid:token>Key list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    an <xosid:token>Id was</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentIdList</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeysByRecordType">
            <xosid:description>
                Gets a list of keys corresponding to the given key
                record <xosid:token>Type.</xosid:token> The set of keys
                implementing the given record type is returned. In
                plenary mode, the returned list contains all known keys
                or an error results. Otherwise, the returned list may
                contain only those keys that are accessible through
                this session. In both cases, the order of the set is
                not specified.
            </xosid:description>
            <xosid:parameter xosid:name="keyRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a key record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeyList"/>
                <xosid:description>
                    the returned <xosid:token>Key list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>keyRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeys">
            <xosid:description>
                Gets all <xosid:token>Keys.</xosid:token> In plenary
                mode, the returned list contains all known keys or an
                error results. Otherwise, the returned list may contain
                only those keys that are accessible through this
                session. In both cases, the order of the set is not
                specified.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeyList"/>
                <xosid:description>
                    a list of <xosid:token>Keys</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.KeySearchSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods for searching
            <xosid:token>Key</xosid:token> objects. The search query
            is constructed using the
            <xosid:token>KeyQuery</xosid:token> interface. Multiple
            <xosid:token>KeyQuery</xosid:token> interfaces may be
            submitted into a search to perform a boolean OR. If more
            than one search element is specified within a single
            <xosid:token>KeyQuery</xosid:token> these elements form a
            boolean AND. The key <xosid:token>Type</xosid:token> also
            specifies the interface for the key query. 

            <xosid:pbreak/>

            <xosid:token>getKeysByQuery()</xosid:token> is the basic
            search method and returns a list of
            <xosid:token>Keys.</xosid:token> A more advanced search may
            be performed with <xosid:token>getKeysBySearch().
            </xosid:token>It accepts an
            <xosid:token>KeySearch</xosid:token> interface in addition
            to the query interface for the purpose of specifying
            additional options affecting the entire search, such as
            ordering. <xosid:token>getKeysBySearch()</xosid:token>
            returns a <xosid:token>KeySearchResult</xosid:token>
            interface that can be used to access the resulting
            <xosid:token>KeyList</xosid:token> or be used to perform a
            search within the result set through
            <xosid:token>KeySearch.</xosid:token>
            Keys may have a record query interface indicated by their
            respective record types. The record query interface is
            accessed via the KeyQuery.
        </xosid:description>


        <xosid:method xosid:name="canSearchKeys">
            <xosid:description>
                Tests if this user can perform
                <xosid:token>Key</xosid:token> searches. A return of
                true does not guarantee successful authorization. A
                return of false indicates that it is known all methods
                in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer search operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if search methods
                    are not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeyQuery">
            <xosid:description>
                Gets a key query interface.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeyQuery"/>
                <xosid:description>
                    the key query
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeysByQuery">
            <xosid:description>
                Gets a list of <xosid:token>Keys</xosid:token> matching
                the given search interface. Each element in the array
                is OR'd.
            </xosid:description>
            <xosid:parameter xosid:name="keyQueries">
                <xosid:interfaceType xosid:type="osid.authentication.KeyQuery" xosid:array="true"/>
                <xosid:description>
                    the search query array
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeyList"/>
                <xosid:description>
                    the returned <xosid:token>KeyList</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>keyQueries</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>keyQueries</xosid:token> is not of
                    this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeySearch">
            <xosid:description>
                Gets a key query interface. The returned query only
                makes available the core
                <xosid:token>KeyQuery</xosid:token> interface and does
                not support additional interface types.
               
                <xosid:token>getKeyQueryForInterfaceType()</xosid:token>
                should be used if additional interface types are
                required.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeySearch"/>
                <xosid:description>
                    the key search interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeySearchOrder">
            <xosid:description>
                Gets a key search order interface. The
                <xosid:token>KeySearchOrder</xosid:token> is supplied
                to a <xosid:token>KeySearch</xosid:token> to specify
                the ordering of results.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeySearchOrder"/>
                <xosid:description>
                    the key search order interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeysBySearch">
            <xosid:description>
                Gets a list of <xosid:token>Keys</xosid:token> matching
                the given search interface. Each element in the array
                is OR'd.
            </xosid:description>
            <xosid:parameter xosid:name="keyQueries">
                <xosid:interfaceType xosid:type="osid.authentication.KeyQuery" xosid:array="true"/>
                <xosid:description>
                    the search query array
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="keySearch">
                <xosid:interfaceType xosid:type="osid.authentication.KeySearch"/>
                <xosid:description>
                    the search interface
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeySearchResults"/>
                <xosid:description>
                    the returned search results
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>keyQueries
                   </xosid:token>or <xosid:token>
                    keySearch</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>keySearch</xosid:token> or a
                    <xosid:token>keyQuery</xosid:token> is not of this
                    service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.KeyAdminSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods to creating, updating and
            deleting <xosid:token>Key</xosid:token> objects. Keys are
            managed separately from the
            <xosid:token>Agent.</xosid:token> Each
            <xosid:token>Agent</xosid:token> maps to a zero or one
            <xosid:token>Key</xosid:token> and every
            <xosid:token>Key</xosid:token> maps to one
            <xosid:token>Agent.</xosid:token>
            <xosid:token>Keys</xosid:token> are identified from their
            counterpart <xosid:token>Agent</xosid:token>
            <xosid:token>Id.</xosid:token>
        </xosid:description>


        <xosid:method xosid:name="canCreateKeys">
            <xosid:description>
                Tests if this user can create
                <xosid:token>Keys.</xosid:token> A return of true does
                not guarantee successful authorization. A return of
                false indicates that it is known creating a
                <xosid:token>Key</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer create operations to an unauthorized user.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Key</xosid:token> creation is not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canCreateKeyWithRecordTypes">
            <xosid:description>
                Tests if this user can create a single
                <xosid:token>Key </xosid:token>using the desired
                record interface types. While
                <xosid:token>AuthenticationManager.getKeyRecordTypes()</xosid:token>
                can be used to examine which record interfaces are
                supported, this method tests which record(s) are
                required for creating a specific
                <xosid:token>Key.</xosid:token> Providing an empty
                array tests if a <xosid:token>Key</xosid:token> can be
                created with no records.
            </xosid:description>
            <xosid:parameter xosid:name="keyRecordTypes">
                <xosid:interfaceType xosid:type="osid.type.Type" xosid:array="true"/>
                <xosid:description>
                    array of types
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if
                    <xosid:token>Key</xosid:token> creation using the
                    specified record <xosid:token>Types</xosid:token>
                    is supported, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>keyRecordTypes</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeyFormForCreate">
            <xosid:description>
                Gets the key form for creating and updating new keys. A
                new form should be requested for each create
                transaction.
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeyForm"/>
                <xosid:description>
                    the key form
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="createKey">
            <xosid:description>
                Creates a new <xosid:token>Key.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="keyForm">
                <xosid:interfaceType xosid:type="osid.authentication.KeyForm"/>
                <xosid:description>
                    the form for this <xosid:token>Key</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.Key"/>
                <xosid:description>
                    the new <xosid:token>Key</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ALREADY_EXISTS" xosid:category="User">
                <xosid:description>
                    agent already has a key
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    one or more of the form elements is invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentId
                   </xosid:token>or <xosid:token>
                    keyForm</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    a<xosid:token> keyForm</xosid:token> is not of this
                    service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canUpdateKeys">
            <xosid:description>
                Tests if this user can update
                <xosid:token>Keys.</xosid:token> A return of true does
                not guarantee successful authorization. A return of
                false indicates that it is known updating a Key will
                result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer update operations to an unauthorized user.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if key
                    modification is not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canUpdateKey">
            <xosid:description>
                Tests if this user can update a specified key. A return
                of true does not guarantee successful authorization. A
                return of false indicates that it is known updating the
                key will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer an update operation to an unauthorized user
                for this agent.
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if agent
                    modification is not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                If the <xosid:token>agentId</xosid:token> is not found,
                then it is acceptable to return false to indicate the
                lack of an update available.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="getKeyFormForUpdate">
            <xosid:description>
                Gets the key form for updating an existing key.
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeyForm"/>
                <xosid:description>
                    the key form
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="updateKey">
            <xosid:description>
                Updates a key for an agent.
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="keyForm">
                <xosid:interfaceType xosid:type="osid.authentication.KeyForm"/>
                <xosid:description>
                    the form containing the elements to be updated
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    the form contains an invalid value
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentId
                   </xosid:token>or <xosid:token>
                    keyForm</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>keyForm</xosid:token> is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canDeleteKeys">
            <xosid:description>
                Tests if this user can delete
                <xosid:token>Keys.</xosid:token> A return of true does
                not guarantee successful authorization. A return of
                false indicates that it is known deleting a
                <xosid:token>Key</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer delete operations to an unauthorized user.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Key</xosid:token> deletion is not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canDeleteKey">
            <xosid:description>
                Tests if this user can delete a specified
                <xosid:token>Key.</xosid:token> A return of true does
                not guarantee successful authorization. A return of
                false indicates that it is known deleting the
                <xosid:token>Key</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer an delete operation to an unauthorized user
                for this agent.
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Key</xosid:token> deletion is not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                If the <xosid:token>agentId</xosid:token> is not found,
                then it is acceptable to return false to indicate the
                lack of an delete available.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="deleteKey">
            <xosid:description>
                Deletes the <xosid:token>Key </xosid:token>associated
                with the given agent <xosid:token>Id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Agent</xosid:token> whose key to
                    delete
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    an <xosid:token>Agent</xosid:token> was not found
                    identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.Authentication"> 
        <xosid:implements xosid:interface=""/>
        <xosid:description>
            <xosid:token>Authentication</xosid:token> represents an
            authentication credential which contains set of
            <xosid:token>bytes</xosid:token> and a format Type. Once
            an <xosid:token>Authentication</xosid:token> object is
            created from the
            <xosid:token>AuthenticationValidationSession,</xosid:token>
            the credential data can be extracted and sent to the remote
            peer for validation. The remote peer gets another
            <xosid:token>Authentication</xosid:token> object as a
            result of validating the serialized credential data.

            <xosid:pbreak/>

            An <xosid:token>Authentication</xosid:token> may or may not
            be valid. <xosid:token>isValid()</xosid:token> should be
            checked before acting upon the
            <xosid:token>Agent</xosid:token> identity to which the
            credential is mapped.
        </xosid:description>


        <xosid:method xosid:name="getAgentId">
            <xosid:description>
                Gets the <xosid:token>Id</xosid:token> of the
                <xosid:token>Agent</xosid:token> identified in this
                authentication credential.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Agent Id</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                The Agent should be determined at the time this
                credential is created.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="getAgent">
            <xosid:description>
                Gets the <xosid:token>Agent</xosid:token> identified in
                this authentication credential.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.Agent"/>
                <xosid:description>
                    the <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="isValid">
            <xosid:description>
                Tests whether or not the credential represented by this
                <xosid:token>Authentication</xosid:token> is currently
                valid. A credential may be invalid because it has been
                destroyed, expired, or is somehow no longer able to be
                used.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if this
                    authentication credential is valid,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                Any problem in determining the validity of this
                credential should result in
                <xosid:token>false.</xosid:token>
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="getExpiration">
            <xosid:description>
                Gets the expiration date associated with this
                authentication credential. Consumers should check for
                the existence of a an expiration mechanism via
                <xosid:token>hasExpiration().</xosid:token>
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="timestamp"/>
                <xosid:description>
                    the expiration date of this authentication
                    credential
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>AuthenticationManager.supportsExpiration()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCredential">
            <xosid:description>
                Gets the credential represented by the given
                <xosid:token>Type</xosid:token> for transport to a
                remote service.
            </xosid:description>
            <xosid:parameter xosid:name="credentialType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the credential format
                    <xosid:token>Type</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="object"/>
                <xosid:description>
                    the credential
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>credentialType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    this provider does not support exporting
                    credentials
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the given <xosid:token>credentialType</xosid:token>
                    is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>AuthenticationManager.supportsCredentialExport()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                A provider may support multiple credential formats for
                a variety of applications.
            </xosid:implNotes>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.Agent"> 
        <xosid:implements xosid:interface="osid.OsidObject"/>
        <xosid:description>
            An <xosid:token>Agent</xosid:token> represents an
            authenticatable identity. Like all OSID objects, an
            <xosid:token>Agent</xosid:token> is identified by its
            <xosid:token>Id</xosid:token> and any persisted references
            should use the <xosid:token>Id.</xosid:token>
        </xosid:description>


        <xosid:method xosid:name="getAgentRecord">
            <xosid:description>
                Gets the record corresponding to the given
                <xosid:token>Agent</xosid:token> record
                <xosid:token>Type. </xosid:token>This method must be
                used to retrieve an object implementing the requested
                record interface along with all of its ancestor
                interfaces. The
                <xosid:token>subjectRecordType</xosid:token> may be the
                <xosid:token>Type</xosid:token> returned in
                <xosid:token>getRecordTypes()</xosid:token> or any of
                its parents in a <xosid:token>Type</xosid:token>
                hierarchy where
                <xosid:token>hasRecordType(agentRecordType)</xosid:token>
                is <xosid:token>true</xosid:token>.
            </xosid:description>
            <xosid:parameter xosid:name="agentRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type of the record to retrieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentRecord"/>
                <xosid:description>
                    the agent record
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>hasRecordType(agentRecordType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AgentRecord"> 
        <xosid:implements xosid:interface="osid.OsidRecord"/>
        <xosid:description>
            A record for an <xosid:token>Agent.</xosid:token> The
            methods specified by the record type are available through
            the underlying object.
        </xosid:description>


        <xosid:method xosid:name="getAgent">
            <xosid:description>
                Gets the <xosid:token>Agent</xosid:token> from which
                this record originated.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.Agent"/>
                <xosid:description>
                    the agent
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AgentQuery"> 
        <xosid:implements xosid:interface="osid.OsidQuery"/>
        <xosid:description>
            This is the query interface for searching agents. Each
            method match request produces an
            <xosid:token>AND</xosid:token> term while multiple
            invocations of a method produces a nested
            <xosid:token>OR,</xosid:token> except for accessing the
            <xosid:token>AgentQuery</xosid:token> record. 

            <xosid:pbreak/>

            The following example returns agents whose display name
            begins with "Tom" and whose "login name" is "tom" or
            "tjcoppet" in an interface specified by
            <xosid:token>companyAgentType.</xosid:token>
            
            <xosid:code>
<![CDATA[
AgentQuery queries[1];
queries[0] = session.getAgentQueryRecord(companyAgentType);

queries[0].matchDisplayName("Tom*", wildcardStringMatchType, false);

companyAgentQuery = queries[0].getAgentQueryInterface();
companyAgentQuery.matchLoginName("tom");
companyAgentQuery = queries[0].getAgentQueryInterface();
companyAgentQuery.matchLoginName("tjcoppet");

AgentList agentList = session.getAgentsByQuery(queries);]]>
            </xosid:code>
             
        </xosid:description>


        <xosid:method xosid:name="supportsKeyQuery">
            <xosid:description>
                Tests if an <xosid:token>KeyQuery</xosid:token> is
                available.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a key query
                    interface is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeyQuery">
            <xosid:description>
                Includes an agent query for making relations with
                <xosid:token>Keys. </xosid:token>Multiple rerievals
                return separate query terms nested inside this query
                term, each which are treated as a boolean
                <xosid:token>OR. </xosid:token>For example,
                <xosid:token>AgentQuery1 OR (AgentQuery2.description
                AND (AgentQuery2.KeyQuery1.name OR
                AgentQuery2.KeyQuery2.name))</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the key query is
                    a positive match, <xosid:token>false</xosid:token>
                    for negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeyQuery"/>
                <xosid:description>
                    the query extension
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsKeyQuery()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentQueryRecord">
            <xosid:description>
                Gets the record query interface corresponding to the
                given <xosid:token>Agent</xosid:token> record
                <xosid:token>Type. </xosid:token>Multiple record
                retrievals of the same type may return the same
                underlying object and do not result in adding terms to
                the query. Multiple record retrievals of different
                types add <xosid:token>AND</xosid:token> terms to the
                other elements set in this query.
            </xosid:description>
            <xosid:parameter xosid:name="agentRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    an agent record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentQueryRecord"/>
                <xosid:description>
                    the agent query record
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>hasRecordType(agentRecordType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AgentQueryRecord"> 
        <xosid:implements xosid:interface="osid.OsidRecord"/>
        <xosid:description>
            A record for a <xosid:token>AgentQuery.</xosid:token> The
            methods specified by the record type are available through
            the underlying object.
        </xosid:description>


        <xosid:method xosid:name="getAgentQuery">
            <xosid:description>
                Gets the <xosid:token>AgentQuery</xosid:token> from
                which this record originated.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentQuery"/>
                <xosid:description>
                    the agent query
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AgentForm"> 
        <xosid:implements xosid:interface="osid.OsidForm"/>
        <xosid:description>
            This is the form for creating and updating
            <xosid:token>Agents. </xosid:token>Like all
            <xosid:token>OsidForm</xosid:token> objects, various data
            elements may be set here for use in the create and update
            methods in the
            <xosid:token>AgentAdminSession.</xosid:token> For each data
            element that may be set, metadata may be examined to
            provide display hints or data constraints.
        </xosid:description>


        <xosid:method xosid:name="getAgentFormRecord">
            <xosid:description>
                Gets the <xosid:token>AgentFormRecord</xosid:token>
                interface corresponding to the given agent record
                interface <xosid:token>Type.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="agentRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the agent record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentFormRecord"/>
                <xosid:description>
                    the record
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>hasRecordType(agentRecordType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AgentFormRecord"> 
        <xosid:implements xosid:interface="osid.OsidRecord"/>
        <xosid:description>
            A record for a <xosid:token>AgentForm.</xosid:token> The
            methods specified by the record type are available through
            the underlying object.
        </xosid:description>


        <xosid:method xosid:name="getAgentForm">
            <xosid:description>
                Gets the <xosid:token>AgentForm</xosid:token> from
                which this record originated.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentForm"/>
                <xosid:description>
                    the agent form
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AgentSearchOrder"> 
        <xosid:implements xosid:interface="osid.OsidSearchOrder"/>
        <xosid:description>
            An interface for specifying the ordering of search results.
        </xosid:description>


        <xosid:method xosid:name="getAgentSearchOrderRecord">
            <xosid:description>
                Gets the agent search order record corresponding to the
                given agent record <xosid:token>Type.
                </xosid:token>Multiple retrievals return the same
                underlying object.
            </xosid:description>
            <xosid:parameter xosid:name="agentRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    an agent record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentSearchOrderRecord"/>
                <xosid:description>
                    the agent search order record interface
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>hasRecordType(agentRecordType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AgentSearchOrderRecord"> 
        <xosid:implements xosid:interface="osid.OsidRecord"/>
        <xosid:description>
            A record for a <xosid:token>AgentSearchOrder.</xosid:token>
            The methods specified by the record type are available
            through the underlying object.
        </xosid:description>


        <xosid:method xosid:name="getAgentSearchOrder">
            <xosid:description>
                Gets the <xosid:token>AgentSearchOrder</xosid:token>
                from which this record originated.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentSearchOrder"/>
                <xosid:description>
                    the agent search order
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AgentSearch"> 
        <xosid:implements xosid:interface="osid.OsidSearch"/>
        <xosid:description>
            AgentSearch defines the interface for specifying agent
            search options. This eample gets a limited set of
            squid-like agents.<xosid:token></xosid:token>

            <xosid:pbreak/>

            <xosid:code>
<![CDATA[
AgentSearch as = session.getAgentSearch();
as.limitResultSet(25, 50);

AgentQuery queries[1];
queries[0] = session.getAgentQuery();
String kword = "squid";
queries[0].matchKeywords(kword, true);

AgentSearchResults results = session.getAgentsBySearch(queries, as);
AgentList list = results.getAgents();
]]>
            </xosid:code>
             
        </xosid:description>


        <xosid:method xosid:name="searchWithinAgentResults">
            <xosid:description>
                Execute this search using a previous search result.
            </xosid:description>
            <xosid:parameter xosid:name="results">
                <xosid:interfaceType xosid:type="osid.authentication.AgentSearchResults"/>
                <xosid:description>
                    results from a query
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>results</xosid:token> is not valid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>results</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="searchAmongAgents">
            <xosid:description>
                Execute this search among the given list of agents.
            </xosid:description>
            <xosid:parameter xosid:name="agentIds">
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    list of agents
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentIds</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="orderAgentResults">
            <xosid:description>
                Specify an ordering to the search results.
            </xosid:description>
            <xosid:parameter xosid:name="agentSearchOrder">
                <xosid:interfaceType xosid:type="osid.authentication.AgentSearchOrder"/>
                <xosid:description>
                    agent search order
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentSearchOrder</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>agentSearchOrder</xosid:token> is not
                    of this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentSearchRecord">
            <xosid:description>
                Gets the record corresponding to the given agent search
                record <xosid:token>Type. </xosid:token>This method
                must be used to retrieve an object implementing the
                requested record interface along with all of its
                ancestor interfaces.
            </xosid:description>
            <xosid:parameter xosid:name="agentSearchRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    an agent search record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentSearchRecord"/>
                <xosid:description>
                    the agent search interface
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentSearchRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>hasSearchRecordType(agentSearchRecordType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AgentSearchRecord"> 
        <xosid:implements xosid:interface="osid.OsidSearchRecord"/>
        <xosid:description>
            A record for a <xosid:token>AgentSearch.</xosid:token> The
            methods specified by the record type are available through
            the underlying object.
        </xosid:description>


        <xosid:method xosid:name="getAgentSearch">
            <xosid:description>
                Gets the <xosid:token>AgentSearch</xosid:token> from
                which this record originated.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentSearch"/>
                <xosid:description>
                    the agent search
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AgentSearchResults"> 
        <xosid:implements xosid:interface="osid.OsidSearchResults"/>
        <xosid:description>
            This interface provides a means to capture results of a
            search and is used as a vehicle to perform a aserach within
            a search.
            
            <xosid:code>
<![CDATA[
AgentSearch as = session.getAgentSearch();
as.limitResultSet(25, 50);

AgentQuery queries[1];
queries[0] = session.getAgentQuery();
String kwords[1];
kwords[0] = "squid";
queries[0].matchKeywords(kwords);

AgentSearchResults results = session.getAgentsBySearch(queries, as);
AgentList list = results.getAgents();]]>
            </xosid:code>
             
        </xosid:description>


        <xosid:method xosid:name="getAgents">
            <xosid:description>
                Gets the agent list resulting from the search.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentList"/>
                <xosid:description>
                    the agent list
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentSearchResultsRecord">
            <xosid:description>
                Gets the record corresponding to the given agent search
                record <xosid:token>Type. </xosid:token>This method
                must be used to retrieve an object implementing the
                requested record interface along with all of its
                ancestor interfaces.
            </xosid:description>
            <xosid:parameter xosid:name="agentSearchRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    an agent search record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentSearchResultsRecord"/>
                <xosid:description>
                    the agent search interface
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentSearchRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>hasSearchRecordType(agentSearchRecordType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AgentSearchResultsRecord"> 
        <xosid:implements xosid:interface="osid.OsidSearchRecord"/>
        <xosid:description>
            A record for a
            <xosid:token>AgentSearchResults.</xosid:token> The methods
            specified by the record type are available through the
            underlying object.
        </xosid:description>


        <xosid:method xosid:name="getAgentSearchResults">
            <xosid:description>
                Gets the <xosid:token>AgentSearchResults</xosid:token>
                from which this record originated.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentSearchResults"/>
                <xosid:description>
                    the agent search results
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AgentReceiver"> 
        <xosid:implements xosid:interface="osid.OsidReceiver"/>
        <xosid:description>
            The agent receiver is the consumer supplied interface for
            receiving notifications pertaining to new, updated or
            deleted <xosid:token>Agent</xosid:token> objects. A change
            to a key is a change to an Agent.
        </xosid:description>


        <xosid:method xosid:name="newAgent">
            <xosid:description>
                The callback for notifications of new agents.
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the new
                    <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="changedAgent">
            <xosid:description>
                The callback for notification of updated agents.
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the updated
                    <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="deletedAgent">
            <xosid:description>
                the callback for notification of deleted agents.
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the deleted
                    <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.AgentList"> 
        <xosid:implements xosid:interface="osid.OsidList"/>
        <xosid:description>
            Like all <xosid:token>OsidLists,</xosid:token>
            <xosid:token>AgentList</xosid:token> provides a means for
            accessing <xosid:token>Agent</xosid:token> elements
            sequentially either one at a time or many at a time. Examples:

            <xosid:pbreak/>

<xosid:code>
<![CDATA[
while (al.hasNext()) {
     Agent agent = al.getNextAgent();
}

]]>
            </xosid:code>
            or
            <xosid:code>
<![CDATA[


while (al.hasNext()) {
     Agent[] agent = al.getNextAgents(al.available());
}]]>
            </xosid:code>
             
        </xosid:description>


        <xosid:method xosid:name="getNextAgent">
            <xosid:description>
                Gets the next <xosid:token>Agent</xosid:token> in this
                list.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.Agent"/>
                <xosid:description>
                    the next <xosid:token>Agent</xosid:token> in this
                    list. The <xosid:token>hasNext()</xosid:token>
                    method should be used to test that a next
                    <xosid:token>Agent</xosid:token> is available
                    before calling this method.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getNextAgents">
            <xosid:description>
                Gets the next set of <xosid:token>Agent</xosid:token>
                elements in this list which must be less than or equal
                to the number returned from
                <xosid:token>available().</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="n">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the number of <xosid:token>Agent
                    </xosid:token>elements requested which should be
                    less than or equal to
                    <xosid:token>available()</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.Agent" xosid:array="true"/>
                <xosid:description>
                    an array of <xosid:token>Agent
                   </xosid:token>elements. <xosid:token>
                    </xosid:token>The length of the array is less than
                    or equal to the number specified.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.Key"> 
        <xosid:implements xosid:interface=""/>
        <xosid:description>
            The key represents cryptographic data managed by the
            authentication service. An <xosid:token>Agent</xosid:token>
            maps to a <xosid:token>Key</xosid:token> and there is only
            one <xosid:token>Key</xosid:token> per <xosid:token>Agent.</xosid:token>

            <xosid:pbreak/>

            <xosid:token>getKeyInterface()</xosid:token> should be used
            to retrieve the interface corresponding to this Type. The
            existence of the interface must not be assumed until
            requested at which point it is safe to cast into the
            interface indicated by the type.
        </xosid:description>


        <xosid:method xosid:name="getAgent">
            <xosid:description>
                Gets the <xosid:token>Agent</xosid:token> corresponding
                to this key.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.Agent"/>
                <xosid:description>
                    <xosid:token>the agent</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRecordTypeType">
            <xosid:description>
                Gets the type of this key. The
                <xosid:token>Type</xosid:token> explicitly indicates
                the specification of the extension interface and
                implicitly may define an object family.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="hasRecordType">
            <xosid:description>
                Tests if this key supports the given record
                <xosid:token>Type.</xosid:token> The given type may be
                supported by the key type through inheritence.
            </xosid:description>
            <xosid:parameter xosid:name="keyRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a key record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if this key
                    supports the given record
                    <xosid:token>Type,</xosid:token>
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>keyRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeyReceord">
            <xosid:description>
                Gets the record corresponding to the given
                <xosid:token>Key</xosid:token> record
                <xosid:token>Type. </xosid:token>This method must be
                used to retrieve an object implementing the requested
                record interface along with all of its ancestor
                interfaces. The
                <xosid:token>keyRecordType</xosid:token> may be the
                <xosid:token>Type</xosid:token> returned in
                <xosid:token>getRecordTypes()</xosid:token> or any of
                its parents in a <xosid:token>Type</xosid:token>
                hierarchy where
                <xosid:token>hasRecordType(keyRecordType)</xosid:token>
                is <xosid:token>true</xosid:token>.
            </xosid:description>
            <xosid:parameter xosid:name="keyRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a key record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeyRecord"/>
                <xosid:description>
                    the key record
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>repositoryRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>hasRecordType(keyRecordType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.KeyRecord"> 
        <xosid:implements xosid:interface="osid.OsidRecord"/>
        <xosid:description>
            A record for a <xosid:token>Key.</xosid:token> The methods
            specified by the record type are available through the
            underlying object.
        </xosid:description>


        <xosid:method xosid:name="getKey">
            <xosid:description>
                Gets the <xosid:token>Key</xosid:token> from which this
                record originated.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.Key"/>
                <xosid:description>
                    the key
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.KeyQuery"> 
        <xosid:implements xosid:interface=""/>
        <xosid:description>
            This is the query interface for searching keys. Each method
            match request is produces an <xosid:token>AND</xosid:token>
            term while multiple invocations of a method produces a
            nested <xosid:token>OR,</xosid:token> except for accessing
            the <xosid:token>KeyQuery</xosid:token> record.
        </xosid:description>


        <xosid:method xosid:name="getStringMatchTypes">
            <xosid:description>
                Gets the supported string match types.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    a list containing the supported string match types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsStringMatchType">
            <xosid:description>
                Tests if the given string matching type is supported.
            </xosid:description>
            <xosid:parameter xosid:name="searchType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a <xosid:token>Type</xosid:token> indicating a
                    string match type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given Type
                    is supported, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="matchRecordType">
            <xosid:description>
                Sets a <xosid:token>Type</xosid:token> for querying
                keys of a given record type.
            </xosid:description>
            <xosid:parameter xosid:name="recodrType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a key record type
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the record type
                    query is a positive match,
                    <xosid:token>false</xosid:token> for negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>recordType
                   </xosid:token>is <xosid:token> null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsAgentQuery">
            <xosid:description>
                Tests if an <xosid:token>AgentQuery</xosid:token> is
                available.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if an agent query
                    interface is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentQuery">
            <xosid:description>
                Includes an agent query for making relations with
                <xosid:token>Agents. </xosid:token>Multiple rerievals
                return separate query terms nested inside this query
                term, each which are treated as a
               boolean <xosid:token> OR.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the key query is
                    a positive match, <xosid:token>false</xosid:token>
                    for negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentQuery"/>
                <xosid:description>
                    the query extension
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsAgentQuery()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="hasRecordType">
            <xosid:description>
                Tests if this query supports the given record
                <xosid:token>Type.</xosid:token> The given record type
                may be supported by the object through interface/type
                inheritence. This method should be checked before
                retrieving the record interface.
            </xosid:description>
            <xosid:parameter xosid:name="keyRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a record query
                    of the given record <xosid:token>Type</xosid:token>
                    is available, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>keyRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeyQueryRecord">
            <xosid:description>
                Gets the record query interface corresponding to the
                given <xosid:token>Key</xosid:token> record
                <xosid:token>Type. </xosid:token>Multiple record
                retrievals of the same type may return the same
                underlying object and do not result in adding terms to
                the query. Multiple record retrievals of different
                types add <xosid:token>AND</xosid:token> terms to the
                other elements set in this query.
            </xosid:description>
            <xosid:parameter xosid:name="keyRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a key record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeyQueryRecord"/>
                <xosid:description>
                    the key query record
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>keyRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>hasRecordType(keyRecordType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.KeyQueryRecord"> 
        <xosid:implements xosid:interface="osid.OsidRecord"/>
        <xosid:description>
            A record for a <xosid:token>KeyQuery.</xosid:token> The
            methods specified by the record type are available through
            the underlying object.
        </xosid:description>


        <xosid:method xosid:name="getKeyQuery">
            <xosid:description>
                Gets the <xosid:token>KeyQuery</xosid:token> from which
                this record originated.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeyQuery"/>
                <xosid:description>
                    the key query
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.KeyForm"> 
        <xosid:implements xosid:interface=""/>
        <xosid:description>
            This is the form for creating and updating
            <xosid:token>Keys.</xosid:token> Various data elements may
            be set here for use in the create and update methods in the
            <xosid:token>KeyAdminSession.</xosid:token> For each data
            element that may be set, metadata may be examined to
            provide display hints or data constraints.
        </xosid:description>


        <xosid:method xosid:name="getCommentMetadata">
            <xosid:description>
                Gets the metadata for the comment corresponding to this
                form submission. The comment is used for describing the
                nature of the change to the corresponding object for
                the purposes of logging and auditing.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.Metadata"/>
                <xosid:description>
                    metadata for the comment
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="setComment">
            <xosid:description>
                Sets a comment.
            </xosid:description>
            <xosid:parameter xosid:name="comment">
                <xosid:primitiveType xosid:type="string"/>
                <xosid:description>
                    the new comment
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>comment</xosid:token> is invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NO_ACCESS" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>comment</xosid:token> cannot be
                    modified
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>comment</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="isValid">
            <xosid:description>
                Tests if ths form is in a valid state for submission. A
                form is valid if all required data has been supplied
                compliant with any constraints.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if there is a
                    known error in this form,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    attempt to perform validation failed
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="hasRecordType">
            <xosid:description>
                Tests if this form supports the given record
                <xosid:token>Type.</xosid:token> The given record type
                may be supported by the object through interface/type
                inheritence. This method should be checked before
                retrieving the record interface.
            </xosid:description>
            <xosid:parameter xosid:name="keyRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a record form of
                    the given record <xosid:token>Type</xosid:token> is
                    available, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>keyRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeyFormRecord">
            <xosid:description>
                Gets the <xosid:token>KeyFormRecord</xosid:token>
                interface corresponding to the given key record
                interface <xosid:token>Type.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="keyRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a key record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeyFormRecord"/>
                <xosid:description>
                    the key form record
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>keyRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>hasRecordType(keyRecordType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.KeyFormRecord"> 
        <xosid:implements xosid:interface="osid.OsidRecord"/>
        <xosid:description>
            A record for a <xosid:token>KeyForm.</xosid:token> The
            methods specified by the record type are available through
            the underlying object.
        </xosid:description>


        <xosid:method xosid:name="getKeyForm">
            <xosid:description>
                Gets the <xosid:token>KeyForm</xosid:token> from which
                this record originated.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeyForm"/>
                <xosid:description>
                    the key form
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.KeySearchOrder"> 
        <xosid:implements xosid:interface="osid.OsidSearchOrder"/>
        <xosid:description>
            An interface for specifying the ordering of search results.
        </xosid:description>


        <xosid:method xosid:name="getKeySearchOrderRecord">
            <xosid:description>
                Gets the key search order record corresponding to the
                given key record <xosid:token>Type.
                </xosid:token>Multiple retrievals return the same
                underlying object.
            </xosid:description>
            <xosid:parameter xosid:name="keyRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a key record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeySearchOrderRecord"/>
                <xosid:description>
                    the key search order record interface
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>keyRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>hasRecordType(keyRecordType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.KeySearchOrderRecord"> 
        <xosid:implements xosid:interface="osid.OsidRecord"/>
        <xosid:description>
            A record for a <xosid:token>KeySearchOrder.</xosid:token>
            The methods specified by the record type are available
            through the underlying object.
        </xosid:description>


        <xosid:method xosid:name="getKeySearchOrder">
            <xosid:description>
                Gets the <xosid:token>KeySearchOrder</xosid:token> from
                which this record originated.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeySearchOrder"/>
                <xosid:description>
                    the key search order
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.KeySearch"> 
        <xosid:implements xosid:interface="osid.OsidSearch"/>
        <xosid:description>
            <xosid:token>KeySearch</xosid:token> defines options for
            governing key searches.
        </xosid:description>


        <xosid:method xosid:name="searchWithinKeyResults">
            <xosid:description>
                Execute this search using a previous search result.
            </xosid:description>
            <xosid:parameter xosid:name="results">
                <xosid:interfaceType xosid:type="osid.authentication.KeySearchResults"/>
                <xosid:description>
                    results from a query
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>results</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>results</xosid:token> is not of this
                    service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="searchAmongKeys">
            <xosid:description>
                Execute this search among the given list of keys.
            </xosid:description>
            <xosid:parameter xosid:name="agentIds">
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    list of agents
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentIds</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="orderKeyResults">
            <xosid:description>
                Specify an ordering to the search results.
            </xosid:description>
            <xosid:parameter xosid:name="keySearchOrder">
                <xosid:interfaceType xosid:type="osid.authentication.KeySearchOrder"/>
                <xosid:description>
                    key search order
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>keySearchOrder</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>keySearchOrder</xosid:token> is not of
                    this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeySearchRecord">
            <xosid:description>
                Gets the record corresponding to the given key search
                record <xosid:token>Type. </xosid:token>This method
                must be used to retrieve an object implementing the
                requested record interface along with all of its
                ancestor interfaces.
            </xosid:description>
            <xosid:parameter xosid:name="keySearchRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a key search record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeySearchRecord"/>
                <xosid:description>
                    the key search interface
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>keySearchRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>hasSearchRecordType(keySearchRecordType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.KeySearchRecord"> 
        <xosid:implements xosid:interface="osid.OsidSearchRecord"/>
        <xosid:description>
            A record for a <xosid:token>KeySearch.</xosid:token> The
            methods specified by the record type are available through
            the underlying object.
        </xosid:description>


        <xosid:method xosid:name="getKeySearch">
            <xosid:description>
                Gets the <xosid:token>KeySearch</xosid:token> from
                which this record originated.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeySearch"/>
                <xosid:description>
                    the key search
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.KeySearchResults"> 
        <xosid:implements xosid:interface="osid.OsidSearchResults"/>
        <xosid:description>
            This interface provides a means to capture results of a
            search and is used as a vehicle to perform a search within
            a previous result set. This example fetches all keys and
            orders them by the agent display name.
            
            <xosid:code>
<![CDATA[
KeySearch ks = session.getKeySearch();
AgentSearch as = ks.getAgentSearch();
as.orderByDisplayName();

KeyQuery keyQueries[1];
keyQueries[0] = session.getKeyQuery();
AgentQuery agQueries[1];
qgQueries[1].matchDisplayName("*", true);
KeySearchResults results = session.getKeysBySearch(keyQueries, ks);

KeyList kl = results.getKeys();]]>
            </xosid:code>
             
        </xosid:description>


        <xosid:method xosid:name="getKeys">
            <xosid:description>
                Gets the key list resulting from the search.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeyList"/>
                <xosid:description>
                    the key list
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getKeySearchResultsRecord">
            <xosid:description>
                Gets the record corresponding to the given key search
                record <xosid:token>Type. </xosid:token>This method
                must be used to retrieve an object implementing the
                requested record interface along with all of its
                ancestor interfaces.
            </xosid:description>
            <xosid:parameter xosid:name="keySearchRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a key search record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeySearchResultsRecord"/>
                <xosid:description>
                    the key search interface
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>keySearchRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>hasSearchRecordType(keySearchRecordType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.KeySearchResultsRecord"> 
        <xosid:implements xosid:interface="osid.OsidSearchRecord"/>
        <xosid:description>
            A record for a <xosid:token>KeySearchResults.</xosid:token>
            The methods specified by the record type are available
            through the underlying object.
        </xosid:description>


        <xosid:method xosid:name="getKeySearchResults">
            <xosid:description>
                Gets the <xosid:token>KeySearchResults</xosid:token>
                from which this record originated.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.KeySearchResults"/>
                <xosid:description>
                    the key search results
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.authentication.KeyList"> 
        <xosid:implements xosid:interface="osid.OsidList"/>
        <xosid:description>
            Like all <xosid:token>OsidLists,</xosid:token>
            <xosid:token>KeyList</xosid:token> provides a means for
            accessing <xosid:token>Key</xosid:token> elements
            sequentially either one at a time or many at a time. Examples:

            <xosid:pbreak/>

<xosid:code>
<![CDATA[
while (kl.hasNext()) {
     Key key = kl.getNextKey();
}

]]>
            </xosid:code>
            or
            <xosid:code>
<![CDATA[


while (kl.hasNext()) {
     Key[] keys = kl.getNextKeys(kl.available());
}]]>
            </xosid:code>
             
        </xosid:description>


        <xosid:method xosid:name="getNextKey">
            <xosid:description>
                Gets the next <xosid:token>Key</xosid:token> in this
                list.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.Key"/>
                <xosid:description>
                    the next <xosid:token>Key</xosid:token> in this
                    list. The <xosid:token>hasNext()</xosid:token>
                    method should be used to test that a next
                    <xosid:token>Key</xosid:token> is available before
                    calling this method.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getNextKeys">
            <xosid:description>
                Gets the next set of <xosid:token>Key</xosid:token>
                elements in this list which must be less than or equal
                to the number returned from
                <xosid:token>available().</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="n">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the number of <xosid:token>Key
                    </xosid:token>elements requested which should be
                    less than or equal to
                    <xosid:token>available()</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.Key" xosid:array="true"/>
                <xosid:description>
                    an array of <xosid:token>Key
                   </xosid:token>elements. <xosid:token>
                    </xosid:token>The length of the array is less than
                    or equal to the number specified.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>

</xosid:osid>
