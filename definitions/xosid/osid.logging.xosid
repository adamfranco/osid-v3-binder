<?xml version="1.0" encoding="iso-8859-1" standalone="no"?>

<!--
    XOSID for osid.logging generated at 7/16/2008 11:51:03 AM 

    Copyright (C) 2008 Massachusetts Institute of Technology. All Rights
    Reserved.

    This Work is being provided by the copyright holder(s) subject to the
    following license. By obtaining, using and/or copying this Work, you
    agree that you have read, understand, and will comply with the following
    terms and conditions.

    This Work and the information contained herein is provided on an ""AS
    IS"" basis. The Massachusetts Institute of Technology, the Open
    Knowledge Initiative, and THE AUTHORS DISCLAIM ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
    OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
    ARISING FROM, OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER
    DEALINGS IN THE WORK.

    Permission to use, copy and distribute unmodified versions of this Work,
    for any purpose, without fee or royalty is hereby granted, provided that
    you include the above copyright notice and the terms of this license on
    ALL copies of the Work or portions thereof. 

    You may nodify or create Derivatives of this Work only for your internal
    purposes. You shall not distribute or transfer any such Derivative of
    this Work to any location or to any third party. For the purposes of
    this license, Derivative shall mean any derivative of the Work as
    defined in the United States Copyright Act of 1976, such as a
    translation or modification.

    The export of software employing encryption technology may require a
    specific license from the United States Government. It is the
    responsibility of any person or organization comtemplating export to
    obtain such a license before exporting this Work.
-->

<xosid:osid xmlns:xosid="urn:inet:osid.org:schemas/osid/3" xosid:name="osid.logging" xosid:version="3.0.0">

    <xosid:title>
        Logging Open Service Interface Definitions
    </xosid:title>

    <xosid:copyright>
        Copyright <xosid:copyrightSymbol/>2008 Massachusetts Institute
        of Technology. All Rights Reserved.
    </xosid:copyright>

    <xosid:license>
        This Work is being provided by the copyright holder(s) subject
        to the following license. By obtaining, using and/or copying
        this Work, you agree that you have read, understand, and will
        comply with the following terms and conditions.

        <xosid:pbreak/>

        This Work and the information contained herein is provided on
        an ""AS IS"" basis. The Massachusetts Institute of Technology,
        the Open Knowledge Initiative, and THE AUTHORS DISCLAIM ALL
        WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
        WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
        AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
        HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
        WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
        FROM, OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER
        DEALINGS IN THE WORK.

        <xosid:pbreak/>

        Permission to use, copy and distribute unmodified versions of
        this Work, for any purpose, without fee or royalty is hereby
        granted, provided that you include the above copyright notice
        and the terms of this license on ALL copies of the Work or
        portions thereof. 

        <xosid:pbreak/>

        You may nodify or create Derivatives of this Work only for your
        internal purposes. You shall not distribute or transfer any
        such Derivative of this Work to any location or to any third
        party. For the purposes of this license, Derivative shall mean
        any derivative of the Work as defined in the United States
        Copyright Act of 1976, such as a translation or modification.

        <xosid:pbreak/>

        The export of software employing encryption technology may
        require a specific license from the United States Government.
        It is the responsibility of any person or organization
        comtemplating export to obtain such a license before exporting
        this Work.
    </xosid:license>

    <xosid:description>
        The Logging OSID provides a means to read and wite to logs. A
        Log represents a collection of log entries. Each log entry is
        composed of a priority <xosid:token>Type,</xosid:token>
        timestamp, <xosid:token>Agent,</xosid:token> and typed content.

        <xosid:pbreak/>

        Logs can be organized into hierarchies for federation. A log
        that is a parent of another log makes visible the log entries
        of its children.

        <xosid:pbreak/>

         Example:
         
        <xosid:code>
LoggingSession out = manager.getLoggingSession();
out.log(warningLogEntryPriorityType, "hello world", stringLogEntryContentType);

LogReadingSession in = manager.getLogReadingSession();
LogEntryList entries = inn.getLogEntries();
while (entries.hasNext()) {
    LogEntry entry = entries.getNextLogEntry();
    if (entry.implementsContentType(stringLogEntryType)) {
        print (entry.getContent(stringLogEntryType));
    }
}
    
        </xosid:code>
         
    </xosid:description>


    <xosid:interface xosid:name="osid.logging.LoggingProfile"> 
        <xosid:implements xosid:interface="osid.OsidProfile"/>
        <xosid:description>
            The logging profile describes the interoperability among
            logging services.
        </xosid:description>


        <xosid:method xosid:name="supportsVisibleFederation">
            <xosid:description>
                Tests if visible federation is supported.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if visible
                    federation is supproted,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsLogging">
            <xosid:description>
                Tests if logging is supported.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if logging is
                    supported, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsLogReading">
            <xosid:description>
                Tests if reading logs is supported.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if reading logs is
                    supported, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsLogEntrySearch">
            <xosid:description>
                Tests if searching log entries is supported.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if searching log
                    entries is supported,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsLogEntryNotification">
            <xosid:description>
                Tests if log entry notification is supported,.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if log etry
                    notification is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsLogLookup">
            <xosid:description>
                Tests for the availability of a log lookup service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if log lookup is
                    available, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsLogSearch">
            <xosid:description>
                Tests if searching for logs is available.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if log search is
                    available, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsLogAdmin">
            <xosid:description>
                Tests for the availability of a log administrative
                service for creating and deleting logs.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if log
                    administration is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsLogNotification">
            <xosid:description>
                Tests for the availability of a log notification
                service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if log notification
                    is available, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented in all providers.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsLogHierarchy">
            <xosid:description>
                Tests for the availability of a log hierarchy traversal
                service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if log hierarchy
                    traversal is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsLogHierarchyDesign">
            <xosid:description>
                Tests for the availability of a log hierarchy design
                service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if log hierarchy
                    design is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented in all providers.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogInterfaceTypes">
            <xosid:description>
                Gets the supported <xosid:token>Log</xosid:token>
                interface types.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    a list containing the supported interface types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsLogInterfaceType">
            <xosid:description>
                Tests if the given <xosid:token>Log</xosid:token>
                interface type is supported.
            </xosid:description>
            <xosid:parameter xosid:name="logInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a <xosid:token>Type</xosid:token> indicating a
                    <xosid:token>Log</xosid:token> interface type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given
                    <xosid:token>Type</xosid:token> is supported,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogSearchInterfaceTypes">
            <xosid:description>
                Gets the supported log search interface types.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    a list containing the supported log search
                    interface types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsLogSearchInterfaceType">
            <xosid:description>
                Tests if the given log search interface type is
                supported.
            </xosid:description>
            <xosid:parameter xosid:name="logSearchInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a <xosid:token>Type</xosid:token> indicating a log
                    interface type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given
                    <xosid:token>Type</xosid:token> is supported,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getPriorityTypes">
            <xosid:description>
                Gets the priority types supported, in ascending order
                of the priority level.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    a list containing the supported priority types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsPriorityType">
            <xosid:description>
                Tests if the priority type is supported.
            </xosid:description>
            <xosid:parameter xosid:name="priorityType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a <xosid:token>Type</xosid:token> indicating a
                    priority type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given
                    <xosid:token>Type</xosid:token> is supported,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getContentTypes">
            <xosid:description>
                Gets the log entry content types supported.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    a list containing the supported log entry content
                    types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsContentType">
            <xosid:description>
                Tests if the log entry content type is supported.
            </xosid:description>
            <xosid:parameter xosid:name="contentType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a <xosid:token>Type</xosid:token> indicating a log
                    entry content type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given
                    <xosid:token>Type</xosid:token> is supported,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LoggingManager"> 
        <xosid:implements xosid:interface="osid.OsidManager"/>
        <xosid:implements xosid:interface="osid.logging.LoggingProfile"/>
        <xosid:description>
            The logging manager provides access to logging sessions and
            provides interoperability tests for various aspects of this
            service. The sessions included in this manager are:
            <xosid:outline>
                 <xosid:element>
                    <xosid:token>LoggingSession:</xosid:token> a
                    session to write to a log
                </xosid:element>
                 <xosid:element>
                    <xosid:token>LogReadingSession:</xosid:token> a
                    session to read a log
                </xosid:element>
                 <xosid:element>
                    <xosid:token>LogEntrySearchSession:</xosid:token> a
                    session to search a log
                </xosid:element>
                 <xosid:element>
                    <xosid:token>LogEntryAdminSession:</xosid:token> a
                    session to manage log entries in a log
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>LogEntryNotificationSession:</xosid:token>
                    a session to subscribe to notifications of new log entries
                </xosid:element>
                 <xosid:element>
                    <xosid:token>LogLookupSession:</xosid:token> a
                    session to retrieve log objects
                </xosid:element>
                 <xosid:element>
                    <xosid:token>LogSearchSession:</xosid:token> a
                    session to search for logs
                </xosid:element>
                 <xosid:element>
                    <xosid:token>LogAdminSession:</xosid:token> a
                    session to create, update and delete logs
                </xosid:element>
                 <xosid:element>
                    <xosid:token>LogNotificationSession:</xosid:token>
                    a session to receive notifications for changes in logs
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>LogHierarchyTraversalSession:</xosid:token>
                    a session to traverse hierarchies of logs
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>LogHierarchyDesignSession:</xosid:token>
                    a session to manage hierarchues of logs
                </xosid:element>
            </xosid:outline>
             
            The logging manager also provides a profile for determing
            the supported search types supported by this service.
        </xosid:description>


        <xosid:method xosid:name="getLoggingSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the logging service.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LoggingSession"/>
                <xosid:description>
                    a <xosid:token>LoggingSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogging()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogging()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLoggingSessionForLog">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the logging service for the given log.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LoggingSession"/>
                <xosid:description>
                    a <xosid:token>LoggingSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    no <xosid:token>Log</xosid:token> found by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogging()</xosid:token> or
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogging()
                   </xosid:token>and <xosid:token>
                    supportsVisibleFederation()
                   </xosid:token>are <xosid:token> true</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogReadingSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the logging reading service.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogReadingSession"/>
                <xosid:description>
                    a <xosid:token>LogReadingSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogReading()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogReading()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogReadingSessionForLog">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log reading service for the given
                log.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogReadingSession"/>
                <xosid:description>
                    a <xosid:token>LogReadingSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    no <xosid:token>Log</xosid:token> found by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogReading()</xosid:token> or
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogReading()
                   </xosid:token>and <xosid:token>
                    supportsVisibleFederation()
                   </xosid:token>are <xosid:token> true</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntrySearchSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the logging entry search service.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntrySearchSession"/>
                <xosid:description>
                    a <xosid:token>LogEntrySearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsLogEntrySearch()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsLogEntrySearch()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntrySearchSessionForLog">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log entry search service for the
                given log.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntrySearchSession"/>
                <xosid:description>
                    a <xosid:token>LogEntrySearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    no <xosid:token>Log</xosid:token> found by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsLogEntrySearch()</xosid:token>
                    or
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogEntrySearch()
                   </xosid:token>and <xosid:token>
                    supportsVisibleFederation()
                   </xosid:token>are <xosid:token> true</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntryAdminSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the logging entry administrative
                service.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntryAdminSession"/>
                <xosid:description>
                    a <xosid:token>LogEntryAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogEntryAdmin()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogEntryAdmin()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntryAdminSessionForLog">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log entry administrative service
                for the given log.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntryAdminSession"/>
                <xosid:description>
                    a <xosid:token>LogEntryAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    no <xosid:token>Log</xosid:token> found by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogEntryAdmin()</xosid:token>
                    or
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogEntryAdmin()
                   </xosid:token>and <xosid:token>
                    supportsVisibleFederation()
                   </xosid:token>are <xosid:token> true</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntryNotificationSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the logging entry notification service.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntryNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>LogEntryNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsLogEntryNotification()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsLogEntryNotification()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntryNotificationSessionForLog">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log entry notification service for
                the given log.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntryNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>LogEntryNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    no <xosid:token>Log</xosid:token> found by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsLogEntryNotification()</xosid:token>
                    or
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogEntryNotification()
                   </xosid:token>and <xosid:token>
                    supportsVisibleFederation()
                   </xosid:token>are <xosid:token> true</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogLookupSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log lookup service.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogLookupSession"/>
                <xosid:description>
                    a <xosid:token>LogLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogLookup()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogLookup()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogSearchSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log search service.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogSearchSession"/>
                <xosid:description>
                    a <xosid:token>LogSearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogSearch()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogSearch()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogAdminSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log administrative service.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogAdminSession"/>
                <xosid:description>
                    a <xosid:token>LogAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogAdmin()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogAdmin()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogNotificationSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log notification service.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogNotificationSession"/>
                <xosid:description>
                    a <xosid:token>LogNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsLogNotification()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsLogNotification()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogHierarchySession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log hierarchy service.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogHierarchySession"/>
                <xosid:description>
                    a <xosid:token>LogHierarchySession</xosid:token>
                    for logs
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogHierarchy()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogHierarchy()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogHierarchyDesignSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log hierarchy design service.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogHierarchyDesignSession"/>
                <xosid:description>
                    a <xosid:token>HierarchyDesignSession</xosid:token>
                    for logs
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsLogHierarchyDesign()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsLogHierarchyDesign()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LoggingProxyManager"> 
        <xosid:implements xosid:interface="osid.OsidProxyManager"/>
        <xosid:implements xosid:interface="osid.logging.LoggingProfile"/>
        <xosid:description>
            The logging manager provides access to logging sessions and
            provides interoperability tests for various aspects of this
            service. Methods in this manager support the passing of an
            <xosid:token>Authentication</xosid:token> object for the
            purposes of proxy authentication. The sessions included in
            this manager are:
            <xosid:outline>
                 <xosid:element>
                    <xosid:token>LoggingSession:</xosid:token> a
                    session to write to a log
                </xosid:element>
                 <xosid:element>
                    <xosid:token>LogReadingSession:</xosid:token> a
                    session to read a log
                </xosid:element>
                 <xosid:element>
                    <xosid:token>LogEntrySearchSession:</xosid:token> a
                    session to search a log
                </xosid:element>
                 <xosid:element>
                    <xosid:token>LogEntryAdminSession:</xosid:token> a
                    session to manage log entries in a log
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>LogEntryNotificationSession:</xosid:token>
                    a session to subscribe to notifications of new log entries
                </xosid:element>
                 <xosid:element>
                    <xosid:token>LogLookupSession:</xosid:token> a
                    session to retrieve log objects
                </xosid:element>
                 <xosid:element>
                    <xosid:token>LogSearchSession:</xosid:token> a
                    session to search for logs
                </xosid:element>
                 <xosid:element>
                    <xosid:token>LogAdminSession:</xosid:token> a
                    session to create, update and delete logs
                </xosid:element>
                 <xosid:element>
                    <xosid:token>LogNotificationSession:</xosid:token>
                    a session to receive notifications for changes in logs
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>LogHierarchyTraversalSession:</xosid:token>
                    a session to traverse hierarchies of logs
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>LogHierarchyDesignSession:</xosid:token>
                    a session to manage hierarchues of logs
                </xosid:element>
            </xosid:outline>
             
            The logging manager also provides a profile for determing
            the supported search types supported by this service.
        </xosid:description>


        <xosid:method xosid:name="getLoggingSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the logging service.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LoggingSession"/>
                <xosid:description>
                    a <xosid:token>LoggingSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogging()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogging()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLoggingSessionForLog">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the logging service for the given log.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LoggingSession"/>
                <xosid:description>
                    a <xosid:token>LoggingSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    no <xosid:token>Log</xosid:token> found by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> or
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogging()</xosid:token> or
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogging()
                   </xosid:token>and <xosid:token>
                    supportsVisibleFederation()
                   </xosid:token>are <xosid:token> true</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogReadingSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the logging reading service.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogReadingSession"/>
                <xosid:description>
                    a <xosid:token>LogReadingSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogReading()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogReading()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogReadingSessionForLog">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log reading service for the given
                log.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogReadingSession"/>
                <xosid:description>
                    a <xosid:token>LogReadingSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    no <xosid:token>Log</xosid:token> found by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> or
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogReading()</xosid:token> or
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogReading()
                   </xosid:token>and <xosid:token>
                    supportsVisibleFederation()
                   </xosid:token>are <xosid:token> true</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntrySearchSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the logging entry search service.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntrySearchSession"/>
                <xosid:description>
                    a <xosid:token>LogEntrySearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsLogEntrySearch()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsLogEntrySearch()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntrySearchSessionForLog">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log entry search service for the
                given log.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntrySearchSession"/>
                <xosid:description>
                    a <xosid:token>LogEntrySearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    no <xosid:token>Log</xosid:token> found by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> or
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsLogEntrySearch()</xosid:token>
                    or
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogEntrySearch()
                   </xosid:token>and <xosid:token>
                    supportsVisibleFederation()
                   </xosid:token>are <xosid:token> true</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntryAdminSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the logging entry administrative
                service.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntryAdminSession"/>
                <xosid:description>
                    a <xosid:token>LogEntryAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogEntryAdmin()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogEntryAdmin()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntryAdminSessionForLog">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log entry administrative service
                for the given log.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntryAdminSession"/>
                <xosid:description>
                    a <xosid:token>LogEntryAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    no <xosid:token>Log</xosid:token> found by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> or
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogEntryAdmin()</xosid:token>
                    or
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogEntryAdmin()
                   </xosid:token>and <xosid:token>
                    supportsVisibleFederation()
                   </xosid:token>are <xosid:token> true</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntryNotificationSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the logging entry notification service.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntryNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>LogEntryNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsLogEntryNotification()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsLogEntryNotification()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntryNotificationSessionForLog">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log entry notification service for
                the given log.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntryNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>LogEntryNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    no <xosid:token>Log</xosid:token> found by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> or
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsLogEntryNotification()</xosid:token>
                    or
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogEntryNotification()
                   </xosid:token>and <xosid:token>
                    supportsVisibleFederation()
                   </xosid:token>are <xosid:token> true</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogLookupSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log lookup service.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogLookupSession"/>
                <xosid:description>
                    a <xosid:token>LogLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogLookup()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogLookup()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogSearchSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log search service.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogSearchSession"/>
                <xosid:description>
                    a <xosid:token>LogSearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogSearch()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogSearch()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogAdminSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log administrative service.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogAdminSession"/>
                <xosid:description>
                    a <xosid:token>LogAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogAdmin()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogAdmin()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogNotificationSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log notification service.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogNotificationSession"/>
                <xosid:description>
                    a <xosid:token>LogNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsLogNotification()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsLogNotification()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogHierarchySession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log hierarchy service.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogHierarchySession"/>
                <xosid:description>
                    a <xosid:token>LogHierarchySession</xosid:token>
                    for logs
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogHierarchy()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogHierarchy()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogHierarchyDesignSession">
            <xosid:description>
                Gets the <xosid:token>OsidSession</xosid:token>
                associated with the log hierarchy design service.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogHierarchyDesignSession"/>
                <xosid:description>
                    a <xosid:token>HierarchyDesignSession</xosid:token>
                    for logs
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsLogHierarchyDesign()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsLogHierarchyDesign()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LoggingSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session is used to log entries to a log.
        </xosid:description>


        <xosid:method xosid:name="getLogId">
            <xosid:description>
                Gets the <xosid:token>Log</xosid:token>
                <xosid:token>Id</xosid:token> associated with this
                session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Log Id</xosid:token> associated
                    with this session
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLog">
            <xosid:description>
                Gets the <xosid:token>Log</xosid:token> associated with
                this session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.Log"/>
                <xosid:description>
                    the log
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canLog">
            <xosid:description>
                Tests if this user can log. A return of true does not
                guarantee successful authorization. A return of false
                indicates that it is known all methods in this session
                will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer logging operations.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if logging methods
                    are not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="log">
            <xosid:description>
                Logs an item.
            </xosid:description>
            <xosid:parameter xosid:name="content">
                <xosid:primitiveType xosid:type="object"/>
                <xosid:description>
                    the entry to log
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="contentType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type of this entry which must be one of the
                    types returned by
                    <xosid:token>LoggingManager.getContentTypes()</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>content</xosid:token> is not
                   of <xosid:token> contentType</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>content</xosid:token> or
                    <xosid:token>contentType</xosid:token> argument
                    provided
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>LoggingManager.supportsContentType(contentType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="logAtPriority">
            <xosid:description>
                Logs an item at a given priority level.
            </xosid:description>
            <xosid:parameter xosid:name="priority">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the priority of this item
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="content">
                <xosid:primitiveType xosid:type="object"/>
                <xosid:description>
                    the entry to log
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="contentType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type of this entry which must be one of the
                    types returned by
                    <xosid:token>LoggingManager.getContentTypes()</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>content</xosid:token> is not
                   of <xosid:token> contentType</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>content</xosid:token> or
                    <xosid:token>contentType</xosid:token> argument
                    provided
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>LoggingManager.supportsContentType(contentType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogReadingSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
             
        </xosid:description>


        <xosid:method xosid:name="getLogId">
            <xosid:description>
                Gets the <xosid:token>Log</xosid:token>
                <xosid:token>Id</xosid:token> associated with this
                session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Log Id</xosid:token> associated
                    with this session
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLog">
            <xosid:description>
                Gets the <xosid:token>Log</xosid:token> associated with
                this session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.Log"/>
                <xosid:description>
                    the log
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canReadLog">
            <xosid:description>
                Tests if this user can read the log. A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known all methods in this
                session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer reading operations.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if reading methods
                    are not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useComparativeLogEntryView">
            <xosid:description>
                The returns from the lookup methods may omit or
                translate elements based on this session, such as
                authorization, and not result in an error. This view is
                used when greater interoperability is desired at the
                expense of precision.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="usePlenaryLogEntryView">
            <xosid:description>
                A complete view of the
                <xosid:token>LogEntry</xosid:token> returns is desired.
                Methods will return what is requested or result in an
                error. This view is used when greater precision is
                desired at the expense of interoperability.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useFederatedLogView">
            <xosid:description>
                Federates the view for methods in this session. A
                federated view will include entries in logs which are
                children of this log in the log hierarchy.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useIsolatedLogView">
            <xosid:description>
                Isolates the view for methods in this session. An
                isolated view restricts retrievals to this log only.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntry">
            <xosid:description>
                Gets the <xosid:token>LogEntry</xosid:token> specified
                by its <xosid:token>Id. </xosid:token>In plenary mode,
                the exact <xosid:token>Id</xosid:token> is found or a
                <xosid:token>NOT_FOUND</xosid:token> results.
                Otherwise, the returned
                <xosid:token>LogEntry</xosid:token> may have a
                different <xosid:token>Id</xosid:token> than requested,
                such as the case where a duplicate
                <xosid:token>Id</xosid:token> was assigned to a
                <xosid:token>LogEntry</xosid:token> and retained for
                compatibility.
            </xosid:description>
            <xosid:parameter xosid:name="logEntryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>LogEntry</xosid:token> to rerieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntry"/>
                <xosid:description>
                    the returned <xosid:token>LogEntry</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    no <xosid:token>LogEntry</xosid:token> found with
                    the given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logEntryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntriesByIds">
            <xosid:description>
                Gets a <xosid:token>LogEntryList</xosid:token>
                corresponding to the given <xosid:token>IdList.
                </xosid:token>In plenary mode, the returned list
                contains all of the entries specified in the
                <xosid:token>Id</xosid:token> list, in the order of
                the list, including duplicates, or an error results if
                an <xosid:token>Id</xosid:token> in the supplied list
                is not found or inaccessible. Otherwise, inaccessible
                logentries may be omitted from the list and may present
                the elements in any order including returning a unique
                set.
            </xosid:description>
            <xosid:parameter xosid:name="logEntryIdLIst">
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    the list of <xosid:token>Ids</xosid:token> to
                    rerieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntryList"/>
                <xosid:description>
                    the returned <xosid:token>LogEntry
                    list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    an <xosid:token>Id was</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logEntryIdList</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntriesByContentType">
            <xosid:description>
                Gets a <xosid:token>LogEntryList</xosid:token>
                corresponding to the given content <xosid:token>Type.
                </xosid:token>In plenary mode, the returned list
                contains all known entries or an error results.
                Otherwise, the returned list may contain only those
                entries that are accessible through this session. In
                both cases, the order of the set is not specified.
            </xosid:description>
            <xosid:parameter xosid:name="contentType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a log entry content type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntryList"/>
                <xosid:description>
                    the returned <xosid:token>LogEntry
                    list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>contentType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntriesByPriorityType">
            <xosid:description>
                Gets a <xosid:token>LogEntryList</xosid:token>
                corresponding to the given priority
                <xosid:token>Type. </xosid:token>In plenary mode, the
                returned list contains all known entries or an error
                results. Otherwise, the returned list may contain only
                those entries that are accessible through this session.
                In both cases, the order of the set is not specified.
            </xosid:description>
            <xosid:parameter xosid:name="priorityType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a log entry priority type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntryList"/>
                <xosid:description>
                    the returned <xosid:token>LogEntry
                    list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>contentType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntriesByTime">
            <xosid:description>
                Gets a <xosid:token>LogEntryList</xosid:token>
                corresponding to the given time
               interval. <xosid:token> </xosid:token>In plenary mode,
                the returned list contains all known entries or an
                error results. Otherwise, the returned list may contain
                only those entries that are accessible through this
                session. In both cases, the order of the set is not
                specified.
            </xosid:description>
            <xosid:parameter xosid:name="start">
                <xosid:interfaceType xosid:type="osid.DateTime"/>
                <xosid:description>
                    a starting time
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="end">
                <xosid:interfaceType xosid:type="osid.DateTime"/>
                <xosid:description>
                    a starting time
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntryList"/>
                <xosid:description>
                    the returned <xosid:token>LogEntry
                    list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>start</xosid:token> is greater than
                    <xosid:token>end</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntries">
            <xosid:description>
                Gets all log entries. In plenary mode, the returned
                list contains all known entries or an error results.
                Otherwise, the returned list may contain only those
                entries that are accessible through this session. In
                both cases, the order of the set is not specified.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntryList"/>
                <xosid:description>
                    a list of log emntries
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogEntrySearchSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods for searching among log
            entries. The search query is constructed using the
            <xosid:token>LogEntryQuery</xosid:token> interface.
            Multiple <xosid:token>LogEntryQuery</xosid:token>
            interfaces may be submitted into a search to perform a
            boolean <xosid:token>OR.</xosid:token> If more than one
            search element is specified within a single
            <xosid:token>LogEntryQuery,</xosid:token> these elements
            form a boolean AND.
            <xosid:token>getLogEntriesByQuery()</xosid:token> is the
            basic search method and returns a list of log entries. A
            more advanced search may be performed with
            <xosid:token>getLogEntriesBySearch(). </xosid:token>It
            accepts a <xosid:token>LogEntrySearch</xosid:token>
            interface in addition to the query interface for the
            purpose of specifying additional options affecting the
            entire search, such as ordering.
            <xosid:token>getLogEntriesBySearch()</xosid:token> returns
            a <xosid:token>LogEntrySearchResults</xosid:token>
            interface that can be used to access the resulting
            <xosid:token>LogEntryList</xosid:token> or be used to
            perform a search within the result set through
            <xosid:token>LogEntrySearch.</xosid:token>

            <xosid:pbreak/>

            This session defines views that offer differing behaviors
            for searching.

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    federated log view: searches include entries in
                    repositories of which this log is an ancestor in
                    the log hierarchy
                </xosid:element>
                 <xosid:element>
                    isolated log view: searches are restricted to
                    entries in this log only
                </xosid:element>
            </xosid:outline>
             
        </xosid:description>


        <xosid:method xosid:name="getLogId">
            <xosid:description>
                Gets the <xosid:token>Log</xosid:token>
                <xosid:token>Id</xosid:token> associated with this
                session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Log Id</xosid:token> associated
                    with this session
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLog">
            <xosid:description>
                Gets the <xosid:token>Log</xosid:token> associated with
                this session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.Log"/>
                <xosid:description>
                    the <xosid:token>Log</xosid:token> associated with
                    this session
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canSearchLogEntries">
            <xosid:description>
                Tests if this user can perform
                <xosid:token>LogEntry</xosid:token> searches. A return
                of true does not guarantee successful authorization. A
                return of false indicates that it is known all methods
                in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer search operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if search methods
                    are not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useFederatedLogView">
            <xosid:description>
                Federates the view for methods in this session. A
                federated view will include entries in logs which are
                children of this log in the log hierarchy.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useIsolatedLogView">
            <xosid:description>
                Isolates the view for methods in this session. An
                isolated view restricts lookups to this log only.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntryQuery">
            <xosid:description>
                Gets a log entry query interface. The returned query
                will not have a query for the content type.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntryQuery"/>
                <xosid:description>
                    the log entry query
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntryQueryForContentType">
            <xosid:description>
                Gets a log entry query interface of the specified
                interface type. The returned query contains the method
                to access the query interface corresponding to the
                specified <xosid:token>Type </xosid:token>but must not
                be cast directly from this method return.
            </xosid:description>
            <xosid:parameter xosid:name="contentType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type of content query to retrieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntryQuery"/>
                <xosid:description>
                    the entry query interface
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>contentType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>LoggingManager.supportsContentType(contentType)</xosid:token>
                   is <xosid:token> false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntriesByQuery">
            <xosid:description>
                Gets a list of log entries matching the given search
                interface. Each element in the array is OR'd.
            </xosid:description>
            <xosid:parameter xosid:name="logEntryQueries">
                <xosid:interfaceType xosid:type="osid.logging.LogEntryQuery" xosid:array="true"/>
                <xosid:description>
                    the search query array
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntryList"/>
                <xosid:description>
                    the returned
                    <xosid:token>LogEntryList</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logEntryQueries</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    a <xosid:token>logEntryQuery</xosid:token> is not
                    of this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntrySearch">
            <xosid:description>
                Gets a log entry search interface. The returned query
                only makes available the core
                <xosid:token>LogEntry</xosid:token> interface and does
                not support additional search interface types.
               
                <xosid:token>getLogEntrySearchForInterfaceType()</xosid:token>
                should be used if additional interface types are
                required.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntrySearch"/>
                <xosid:description>
                    the log entry search interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntrySearchForInterfaceType">
            <xosid:description>
                Gets a log entry search interface of the specified
                type. The returned search interface provides access to
                the search interface corresponding to the specified
                <xosid:token>Type </xosid:token>but may not be cast
                directly from this method return.
            </xosid:description>
            <xosid:parameter xosid:name="logEntrySearchInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type of search interface to retrieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntrySearch"/>
                <xosid:description>
                    the log entry search interface
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>

                                        <xosid:token>logEntrySearchInterfaceType</xosid:token>
                    is <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>RLoggingManager.supportsLogEntrySearchInterfaceType(logEntrySearchInterfaceType)</xosid:token>
                   is <xosid:token> false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntriesBySearch">
            <xosid:description>
                Gets the search results matching the given search query
                using the given search. Each element in the query array
                is OR'd.
            </xosid:description>
            <xosid:parameter xosid:name="logEntryQueries">
                <xosid:interfaceType xosid:type="osid.logging.LogEntryQuery" xosid:array="true"/>
                <xosid:description>
                    the search query array
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="logEntrySearch">
                <xosid:interfaceType xosid:type="osid.logging.LogEntrySearch"/>
                <xosid:description>
                    the search interface
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntrySearchResults"/>
                <xosid:description>
                    the returned search results
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logEntryQueries
                   </xosid:token>or <xosid:token>
                    logEntrySearch</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    a <xosid:token>logEntryQuery
                   </xosid:token>or <xosid:token>
                    logEntrySearch</xosid:token> is not of this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogEntryAdminSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session removes log entries. The data for create and
            update is provided by the consumer via the form object.
        </xosid:description>


        <xosid:method xosid:name="getLogId">
            <xosid:description>
                Gets the <xosid:token>Log</xosid:token>
                <xosid:token>Id</xosid:token> associated with this
                session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Log Id</xosid:token> associated
                    with this session
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLog">
            <xosid:description>
                Gets the <xosid:token>Log</xosid:token> associated with
                this session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.Log"/>
                <xosid:description>
                    the <xosid:token>Log</xosid:token> associated with
                    this session
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canDeleteLogEntries">
            <xosid:description>
                Tests if this user can delete log entries. A return of
                true does not guarantee successful authorization. A
                return of false indicates that it is known deleting a
                <xosid:token>LogEntry</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may not wish
                to offer delete operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>LogEntry</xosid:token> deletion is
                    not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canDeleteLogEntry">
            <xosid:description>
                Tests if this user can delete a specified
                <xosid:token>LogEntry.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known deleting the
                <xosid:token>LogEntry</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may not wish
                to offer delete operations to unauthorized users.
            </xosid:description>
            <xosid:parameter xosid:name="logEntryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>LogEntry</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if deletion of
                    this <xosid:token>LogEntry</xosid:token> is not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logEntryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                If the <xosid:token>logEntryId</xosid:token> is not
                found, then it is acceptable to return false to
                indicate the lack of an delete available.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="deleteLogEntry">
            <xosid:description>
                Deletes a <xosid:token>LogEntry.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="logEntryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>logEntryId</xosid:token> to remove
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>logEntryId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logEntryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="deleteLogEntriesByPriorityType">
            <xosid:description>
                Removes log entries based on the priority type. All
                entries with priorities equal to or less than the
                supplied priority are deleted.
            </xosid:description>
            <xosid:parameter xosid:name="priorityType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the logging priority
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>priorityType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="deleteLogEntriesByTimestamp">
            <xosid:description>
                Removes log entries between the supplied dates.
            </xosid:description>
            <xosid:parameter xosid:name="start">
                <xosid:primitiveType xosid:type="timestamp"/>
                <xosid:description>
                    the start time
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="end">
                <xosid:primitiveType xosid:type="timestamp"/>
                <xosid:description>
                    the end time
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>start</xosid:token> is
                   greate <xosid:token>r than end</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="addIdToLogEntry">
            <xosid:description>
                Adds an <xosid:token>Id</xosid:token> to a
                <xosid:token>LogEntry</xosid:token> for the purpose of
                creating compatibility. The primary
                <xosid:token>Id</xosid:token> of the
                <xosid:token>LogEntry</xosid:token> is determined by
                the provider. The new <xosid:token>Id</xosid:token>
                performs as an alias to the primary
                <xosid:token>Id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="logEntryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of a
                    <xosid:token>LogEntry</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="aliasId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the alias <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="ALREADY_EXISTS" xosid:category="User">
                <xosid:description>
                    <xosid:token>aliasId</xosid:token> is already
                    assigned
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>logEntryId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logEntryId</xosid:token> or
                    <xosid:token>aliasId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogEntryNotificationSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session defines methods to receive notifications on
            new or deleted log entries. This session is intended for
            consumers needing to synchronize their state with this
            service without the use of polling. Notifications are
            cancelled when this session is closed.

            <xosid:pbreak/>

            Notifications are triggered with changes to assignments of
            <xosid:token>Ids</xosid:token> to this log. For
            notifications of changes to the
            <xosid:token>Log</xosid:token> object use
            <xosid:token>LogNotificationSession.</xosid:token>
        </xosid:description>


        <xosid:method xosid:name="getLogId">
            <xosid:description>
                Gets the <xosid:token>Log</xosid:token>
                <xosid:token>Id</xosid:token> associated with this
                session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Log Id</xosid:token> associated
                    with this session
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLog">
            <xosid:description>
                Gets the <xosid:token>Log</xosid:token> associated with
                this session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.Log"/>
                <xosid:description>
                    the <xosid:token>Log</xosid:token> associated with
                    this session
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canRegisterForLogEntryNotifications">
            <xosid:description>
                Tests if this user can register for
                <xosid:token>Log</xosid:token> entry notifications. A
                return of true does not guarantee successful
                authorization. A return of false indicates that it is
                known all methods in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer notification operations.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if notification
                    methods are not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useFederatedLogView">
            <xosid:description>
                Federates the view for methods in this session. A
                federated view will include entries from parent logs in
                the log hierarchy.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useIsolatedLogView">
            <xosid:description>
                Isolates the view for methods in this session. An
                isolated view restricts notifications for entries to
                this log only.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForNewLogEntries">
            <xosid:description>
                Register for notifications of new log entries.
               
                <xosid:token>LogEntryReceiver.newLogEntry()</xosid:token>
                is invoked when a new
                <xosid:token>LogEntry</xosid:token> is created.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedLogEntries">
            <xosid:description>
                Registers for notification of deleted log entries.
               
                <xosid:token>LogEntryReceiver.deletedLogEntry()</xosid:token>
                is invoked when a log entry is deleted.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogLookupSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods for retrieving
            <xosid:token>Log</xosid:token> objects. The
            <xosid:token>Log </xosid:token>represents a collection of
            OSID <xosid:token>Ids.</xosid:token>

            <xosid:pbreak/>

            This session defines views that offer differing behaviors
            when retrieving multiple objects.

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    comparative view: elements may be silently omitted
                    or re-ordered 
                </xosid:element>
                 <xosid:element>
                    plenary view: provides a complete set or is an
                    error condition
                </xosid:element>
            </xosid:outline>
            Generally, the comparative view should be used for most
            applications as it permits operation even if there is data
            that cannot be accessed.. For example, a browsing
            application may only need to examine the
            <xosid:token>Logs</xosid:token> it can access, without
            breaking execution. However, an assessment may only be
            useful if all <xosid:token>Logs</xosid:token> referenced by
            it are available, and a test-taking applicationmay
            sacrifice some interoperability for the sake of precision.
        </xosid:description>


        <xosid:method xosid:name="canLookupLogs">
            <xosid:description>
                Tests if this user can perform
                <xosid:token>Log</xosid:token> lookups. A return of
                true does not guarantee successful authorization. A
                return of false indicates that it is known all methods
                in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer lookup operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if lookup methods
                    are not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useComparativeLogView">
            <xosid:description>
                The returns from the lookup methods may omit or
                translate elements based on this session, such as
                authorization, and not result in an error. This view is
                used when greater interoperability is desired at the
                expense of precision.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="usePlenaryLogView">
            <xosid:description>
                A complete view of the <xosid:token>Log</xosid:token>
                returns is desired. Methods will return what is
                requested or result in an error. This view is used when
                greater precision is desired at the expense of
                interoperability.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLog">
            <xosid:description>
                Gets the <xosid:token>Log</xosid:token> specified by
                its <xosid:token>Id. </xosid:token>In plenary mode, the
                exact <xosid:token>Id</xosid:token> is found or a
                <xosid:token>NOT_FOUND</xosid:token> results.
                Otherwise, the returned <xosid:token>Log</xosid:token>
                may have a different <xosid:token>Id</xosid:token> than
                requested, such as the case where a duplicate
                <xosid:token>Id</xosid:token> was assigned to a
                <xosid:token>Log</xosid:token> and retained for
                compatibility.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    <xosid:token>Id</xosid:token> of
                   the <xosid:token> Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.Log"/>
                <xosid:description>
                    the log
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>logId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId
                   </xosid:token>is <xosid:token> null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogsByIds">
            <xosid:description>
                Gets a <xosid:token>LogList</xosid:token> corresponding
                to the given <xosid:token>IdList. </xosid:token>In
                plenary mode, the returned list contains all of the
                logs specified in the <xosid:token>Id</xosid:token>
                list, in the order of the list, including duplicates,
                or an error results if an <xosid:token>Id</xosid:token>
                in the supplied list is not found or inaccessible.
                Otherwise, inaccessible <xosid:token>Logs</xosid:token>
                may be omitted from the list and may present the
                elements in any order including returning a unique set.
            </xosid:description>
            <xosid:parameter xosid:name="logIdList">
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    the list of <xosid:token>Ids</xosid:token> to
                    rerieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogList"/>
                <xosid:description>
                    the returned <xosid:token>Log list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    an <xosid:token>Id was</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logIdList</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogsByGenusType">
            <xosid:description>
                Gets a <xosid:token>LogList</xosid:token> corresponding
                to the given log genus <xosid:token>Type
                </xosid:token>which does not include logs of genus
                types derived from the specified <xosid:token>Type.
                </xosid:token>In plenary mode, the returned list
                contains all known logs or an error results. Otherwise,
                the returned list may contain only those logs that are
                accessible through this session. In both cases, the
                order of the set is not specified.
            </xosid:description>
            <xosid:parameter xosid:name="logGenusType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a log genus type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogList"/>
                <xosid:description>
                    the returned <xosid:token>Log list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logGenusType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogsByParentGenusType">
            <xosid:description>
                Gets a <xosid:token>LogList</xosid:token> corresponding
                to the given log genus <xosid:token>Type
                </xosid:token>and include any additional logs with
                genus types derived from the specified
                <xosid:token>Type. </xosid:token>In plenary mode, the
                returned list contains all known logs or an error
                results. Otherwise, the returned list may contain only
                those logs that are accessible through this session. In
                both cases, the order of the set is not specified.
            </xosid:description>
            <xosid:parameter xosid:name="logGenusType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a log genus type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogList"/>
                <xosid:description>
                    the returned <xosid:token>Log list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logGenusType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogsByInterfaceType">
            <xosid:description>
                Gets a <xosid:token>LogList</xosid:token> corresponding
                to the given log interface <xosid:token>Type
                </xosid:token>which does not include logs of interface
                types derived from the specified <xosid:token>Type.
                </xosid:token>In plenary mode, the returned list
                contains all known logs or an error results. Otherwise,
                the returned list may contain only those logs that are
                accessible through this session. In both cases, the
                order of the set is not specified.
            </xosid:description>
            <xosid:parameter xosid:name="logInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a log interface type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogList"/>
                <xosid:description>
                    the returned <xosid:token>Log list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logInterfaceType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogs">
            <xosid:description>
                Gets all <xosid:token>Logs.</xosid:token> In plenary
                mode, the returned list contains all known logs or an
                error results. Otherwise, the returned list may contain
                only those logs that are accessible through this
                session. In both cases, the order of the set is not
                specified.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogList"/>
                <xosid:description>
                    a list of <xosid:token>Logs</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogSearchSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods for searching
            <xosid:token>Log</xosid:token> objects. The search query
            is constructed using the
            <xosid:token>LogQuery</xosid:token> interface. Multiple
            <xosid:token>LogQuery</xosid:token> interfaces may be
            submitted into a search to perform a boolean
            <xosid:token>OR.</xosid:token> If more than one search
            element is specified within a single
            <xosid:token>LogQuery</xosid:token> these elements form a
            boolean <xosid:token>AND.</xosid:token> The log interface
            <xosid:token>Type</xosid:token> also specifies the
            interface for the log query. 

            <xosid:pbreak/>

            <xosid:token>getLogsByQuery()</xosid:token> is the basic
            search method and returns a list of <xosid:token>Log
            </xosid:token>elements. A more advanced search may be
            performed with <xosid:token>getLogsBySearch().
            </xosid:token>It accepts a
            <xosid:token>LogSearch</xosid:token> interface in addition
            to the query interface for the purpose of specifying
            additional options affecting the entire search, such as
            ordering. <xosid:token>getLogsBySearch()</xosid:token>
            returns a <xosid:token>LogSearchResults</xosid:token>
            interface that can be used to access the resulting
            <xosid:token>LogList</xosid:token> or be used to perform a
            search within the result set through
            <xosid:token>LogSearch.</xosid:token>
            Logs may have a query interface indicated by their
            respective interface types. The typed query interface is
            accessed via the <xosid:token>LogQuery.</xosid:token> The
            returns in this session may not be cast directly to these
            interfaces.
        </xosid:description>


        <xosid:method xosid:name="canSearchLogs">
            <xosid:description>
                Tests if this user can perform
                <xosid:token>Log</xosid:token> searches. A return of
                true does not guarantee successful authorization. A
                return of false indicates that it is known all methods
                in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer search operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if search methods
                    are not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogQuery">
            <xosid:description>
                Gets a log query interface. The returned query will not
                have an extension query.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogQuery"/>
                <xosid:description>
                    the log query
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogQueryForInterfaceType">
            <xosid:description>
                Gets a log query interface of the specified type. The
                returned query contains the method to access the query
                interface corresponding to the specified
                <xosid:token>Type </xosid:token>but may be cast
                directly from this method return.
            </xosid:description>
            <xosid:parameter xosid:name="logInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type of query to retrieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogQuery"/>
                <xosid:description>
                    the log query
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logInterfaceType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>LoggingManager.supportsLogInterfaceType(logInterfaceType)</xosid:token>
                   is <xosid:token> false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogsByQuery">
            <xosid:description>
                Gets a list of <xosid:token>Logs</xosid:token> matching
                the given search interface. Each element in the array
                is OR'd.
            </xosid:description>
            <xosid:parameter xosid:name="logQueries">
                <xosid:interfaceType xosid:type="osid.logging.LogQuery" xosid:array="true"/>
                <xosid:description>
                    the search query array
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogList"/>
                <xosid:description>
                    the returned <xosid:token>LogList</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logQueries</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    a <xosid:token>logQuery</xosid:token> is not of
                    this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogSearch">
            <xosid:description>
                Gets a log search interface. The returned query only
                makes available the core
                <xosid:token>LogSearch</xosid:token> interface and does
                not support additional interface types.
               
                <xosid:token>getLogSearchForInterfaceType()</xosid:token>
                should be used if additional interface types are
                required.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogSearch"/>
                <xosid:description>
                    the log search interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogSearchForInterfaceType">
            <xosid:description>
                Gets a log search interface of the specified type. The
                returned search interface provides access to the search
                interface corresponding to the specified
                <xosid:token>Type </xosid:token>but must not be cast
                directly from this method return.
            </xosid:description>
            <xosid:parameter xosid:name="logSearchInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type of query to retrieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogSearch"/>
                <xosid:description>
                    the log search
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logSearchInterfaceType</xosid:token>
                    is <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>LoggingManager.supportsLogSearchInterfaceType(logSearchInterfaceType)</xosid:token>
                   is <xosid:token> false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogsBySearch">
            <xosid:description>
                Gets the search results matching the given search
                interface. Each element in the array is OR'd.
            </xosid:description>
            <xosid:parameter xosid:name="logQueries">
                <xosid:interfaceType xosid:type="osid.logging.LogQuery" xosid:array="true"/>
                <xosid:description>
                    the search query array
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="logSearch">
                <xosid:interfaceType xosid:type="osid.logging.LogSearch"/>
                <xosid:description>
                    the search interface
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogSearchResults"/>
                <xosid:description>
                    the search results
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logQueries
                   </xosid:token>or <xosid:token>
                    logSearch</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    a <xosid:token>logQuery
                   </xosid:token>or <xosid:token>
                    logSearch</xosid:token> is not of this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogAdminSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session creates and removes logs. The data for create
            and update is provided by the consumer via the form object.
        </xosid:description>


        <xosid:method xosid:name="canCreateLogs">
            <xosid:description>
                Tests if this user can create
                <xosid:token>Logs.</xosid:token> A return of true does
                not guarantee successful authorization. A return of
                false indicates that it is known creating a
                <xosid:token>Log</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may not wish
                to offer create operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Log</xosid:token> creation is not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canCreateLogWithInterfaceTypes">
            <xosid:description>
                Tests if this user can create a single
                <xosid:token>Log </xosid:token>using the desired
                interface types. A <xosid:token>Log
               </xosid:token>interface <xosid:token>
                Type</xosid:token> may specify the implementation of
                other more well-known <xosid:token>Types.</xosid:token>
                A provider may or may not accept the creation of a
                <xosid:token>Log</xosid:token> using anything other
                than the <xosid:token>LogForm</xosid:token> of the leaf
                interface <xosid:token>Type,</xosid:token> or may
                accept creation using one or more higher level
                interface <xosid:token>Types.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="logInterfaceTypes">
                <xosid:interfaceType xosid:type="osid.type.Type" xosid:array="true"/>
                <xosid:description>
                    array of types
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if
                    <xosid:token>Log</xosid:token> creation using the
                    specified interface
                    <xosid:token>Types</xosid:token> is supported,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logInterfaceTypes</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRequiredLogInterfaceTypesForCreate">
            <xosid:description>
                Gets the list of minimum required interface
                <xosid:token>Types</xosid:token> for creating a new
                <xosid:token>Log. </xosid:token>A new
                <xosid:token>Log</xosid:token> can be created using
                any one of the interface types returned in this list.
                This may be a series of leaf
                <xosid:token>Types,</xosid:token> or multiple higher
                level <xosid:token>Types</xosid:token> if creation
                requirements are more lenient. An empty list suggests
                no creates are supported as a root
                <xosid:token>Log</xosid:token> interface is always
                identified with its own
                <xosid:token>Type.</xosid:token>
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    one or more types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogFormForCreate">
            <xosid:description>
                Gets the log form for creating new logs. A new form
                should be requested for each create transaction. This
                method is used for creating new <xosid:token>Log
                </xosid:token>objects, where only the
                <xosid:token>Log</xosid:token>
                <xosid:token>Type</xosid:token> is known.
            </xosid:description>
            <xosid:parameter xosid:name="logInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    log type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogForm"/>
                <xosid:description>
                    the log form
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logInterfaceType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>canCreatelogWithInterfaceTypes(logInterfaceType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="createLog">
            <xosid:description>
                Creates a new <xosid:token>Log.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="logForms">
                <xosid:interfaceType xosid:type="osid.logging.LogForm" xosid:array="true"/>
                <xosid:description>
                    the forms for this <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.Log"/>
                <xosid:description>
                    the new <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ALREADY_EXISTS" xosid:category="User">
                <xosid:description>
                    attempt at duplicating a property the underlying
                    system is enforcing to be unique
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    one or more of the form elements is invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logForms</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    a <xosid:token>logForm</xosid:token> is not
                    supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canUpdateLogs">
            <xosid:description>
                Tests if this user can update
                <xosid:token>Logs.</xosid:token> A return of true does
                not guarantee successful authorization. A return of
                false indicates that it is known updating a
                <xosid:token>Log</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may not wish
                to offer update operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Log</xosid:token> modification is not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canUpdateLog">
            <xosid:description>
                Tests if this user can update a specified
                <xosid:token>Log.</xosid:token> A return of true does
                not guarantee successful authorization. A return of
                false indicates that it is known updating the
                <xosid:token>Log</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may not wish
                to offer update operations to unauthorized users.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if log
                    modification is not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                If the <xosid:token>logId</xosid:token> is not found,
                then it is acceptable to return false to indicate the
                lack of an update available.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="getLogFormForUpdate">
            <xosid:description>
                Gets the log form for updating an existing log. A new
                log form should be requested for each update
                transaction.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogForm"/>
                <xosid:description>
                    the log form
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="updateLog">
            <xosid:description>
                Updates an existing log.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="logForm">
                <xosid:interfaceType xosid:type="osid.logging.LogForm"/>
                <xosid:description>
                    the form containing the elements to be updated
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    the form contains an invalid value
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>logId </xosid:token>is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId
                   </xosid:token>or <xosid:token>
                    logForm</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>logForm</xosid:token> is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canDeleteLogs">
            <xosid:description>
                Tests if this user can delete
                <xosid:token>Logs.</xosid:token> A return of true does
                not guarantee successful authorization. A return of
                false indicates that it is known deleting a
                <xosid:token>Log</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may not wish
                to offer delete operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Log</xosid:token> deletion is not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canDeleteLog">
            <xosid:description>
                Tests if this user can delete a specified
                <xosid:token>Log.</xosid:token> A return of true does
                not guarantee successful authorization. A return of
                false indicates that it is known deleting the
                <xosid:token>Log</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may not wish
                to offer delete operations to unauthorized users.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if deletion of
                    this <xosid:token>Log</xosid:token> is not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                If the <xosid:token>logId</xosid:token> is not found,
                then it is acceptable to return false to indicate the
                lack of an delete available.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="deleteLlog">
            <xosid:description>
                Deletes a <xosid:token>Log.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token> to remove
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>logId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="addIdToLog">
            <xosid:description>
                Adds an <xosid:token>Id</xosid:token> to a
                <xosid:token>Log</xosid:token> for the purpose of
                creating compatibility. The primary
                <xosid:token>Id</xosid:token> of the
                <xosid:token>Log</xosid:token> is determined by the
                provider. The new <xosid:token>Id</xosid:token>
                performs as an alias to the primary
                <xosid:token>Id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of a
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="aliasId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the alias <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="ALREADY_EXISTS" xosid:category="User">
                <xosid:description>
                    <xosid:token>aliasId</xosid:token> is already
                    assigned
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>logId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> or
                    <xosid:token>aliasId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogNotificationSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session defines methods to receive notifications on
            adds/changes to <xosid:token>Log</xosid:token> objects.
            This session is intended for consumers needing to
            synchronize their state with this service without the use
            of polling. Notifications are cancelled when this session
            is closed.

            <xosid:pbreak/>

            Notifications are triggered with changes to the
            <xosid:token>Log</xosid:token> object itself. Adding and
            removing entries result in notifications available from the
            notification session for log entries.
        </xosid:description>


        <xosid:method xosid:name="canRegisterForLogNotifications">
            <xosid:description>
                Tests if this user can register for
                <xosid:token>Log</xosid:token> notifications. A return
                of true does not guarantee successful authorization. A
                return of false indicates that it is known all methods
                in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer notification operations.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if notification
                    methods are not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForNewLogs">
            <xosid:description>
                Register for notifications of new logs.
                <xosid:token>LogReceiver.newLog()</xosid:token> is
                invoked when a new <xosid:token>Log</xosid:token> is
                created.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForNewLogAncestors">
            <xosid:description>
                Registers for notification of an updated hierarchy
                structure that introduces a new ancestor of the
                specified log.
                <xosid:token>LogReceiver.newAncestorLog()</xosid:token>
                is invoked when the specified log node gets a new
                ancestor.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token> node to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a log node was not found identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForNewLogDescendants">
            <xosid:description>
                Registers for notification of an updated hierarchy
                structure that introduces a new descendant of the
                specified log.
                <xosid:token>LogReceiver.newDescendantLog()</xosid:token>
                is invoked when the specified log node gets a new
                descendant.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token> node to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a log node was not found identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForChangedLogs">
            <xosid:description>
                Registers for notification of updated logs.
                <xosid:token>LogReceiver.changedLog()</xosid:token> is
                invoked when a log is changed.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForChangedLog">
            <xosid:description>
                Registers for notification of an updated log.
                <xosid:token>LogReceiver.changedLog()</xosid:token> is
                invoked when the specified log is changed.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token> to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a log was not found identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedLogs">
            <xosid:description>
                Registers for notification of deleted logs.
                <xosid:token>LogReceiver.deletedLog()</xosid:token> is
                invoked when a log is deleted.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedLog">
            <xosid:description>
                Registers for notification of a deleted log.
                <xosid:token>LogReceiver.deletedLog()</xosid:token> is
                invoked when the specified log is deleted.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token> to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a log was not found identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedLogAncestors">
            <xosid:description>
                Registers for notification of an updated hierarchy
                structure that removes an ancestor of the specified
                log.
                <xosid:token>LogReceiver.deletedAncestor()</xosid:token>
                is invoked when the specified log node loses an
                ancestor.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token> node to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a log node was not found identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedLogDescendants">
            <xosid:description>
                Registers for notification of an updated hierarchy
                structure that removes a descendant of the specified
                log.
                <xosid:token>LogReceiver.deletedDescendant()</xosid:token>
                is invoked when the specified log node loses a
                descendant.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token> node to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a log node was not found identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogHierarchySession"> 
        <xosid:implements xosid:interface="osid.hierarchy.HierarchyTraversalSession"/>
        <xosid:description>
            This session defines methods for traversing a hiercrhy of
            <xosid:token>Log</xosid:token> objects. Each node in the
            hierarchy is a unique <xosid:token>Log.</xosid:token> The
            hierarchy may be traversed recursively to establish the
            tree structure through
            <xosid:token>getParents()</xosid:token> and
            <xosid:token>getChildren().</xosid:token> To relate these
            <xosid:token>Ids</xosid:token> to another OSID,
            <xosid:token>getAncestors()</xosid:token> and
            <xosid:token>getDescendants()</xosid:token> can be used
            for retrievals that can be used for bulk lookups in other
            OSIDs. Any <xosid:token>Log</xosid:token> available in the
            Log OSID is known to this hierarchy but does not appear in
            the hierarchy traversal until added as a root node or a
            child of another node.

            <xosid:pbreak/>

            A user may not be authorized to traverse the entire
            hierarchy. Parts of the hierarchy may be made invisible
            through omission from the returns of
            <xosid:token>getParents()</xosid:token> or
            <xosid:token>getChildren()</xosid:token> in lieu of a
            <xosid:token>PERMISSION_DENIED</xosid:token> error that
            may disrupt the traversal through authorized pathways.

            <xosid:pbreak/>

            This session defines views that offer differing behaviors
            when retrieving multiple objects.

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    comparative view: log elements may be silently
                    omitted or re-ordered 
                </xosid:element>
                 <xosid:element>
                    plenary view: provides a complete set or is an
                    error condition
                </xosid:element>
            </xosid:outline>
             
        </xosid:description>


        <xosid:method xosid:name="useComparativeLogView">
            <xosid:description>
                The returns from the log methods may omit or translate
                elements based on this session, such as authorization,
                and not result in an error. This view is used when
                greater interoperability is desired at the expense of
                precision.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="usePlenaryLogView">
            <xosid:description>
                A complete view of the <xosid:token>Log</xosid:token>
                returns is desired. Methods will return what is
                requested or result in an error. This view is used when
                greater precision is desired at the expense of
                interoperability.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRootLogs">
            <xosid:description>
                Gets the root logs in the log hierarchy. A node with no
                parents is an orphan. While all log
                <xosid:token>Ids</xosid:token> are known to the
                hierarchy, an orphan does not appear in the hierarchy
                unless explicitly added as a root node or child of
                another node.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogList"/>
                <xosid:description>
                    the root logs
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParentLogs">
            <xosid:description>
                Gets the parent logs of the given
                <xosid:token>id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token> to query
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogList"/>
                <xosid:description>
                    the parent logs of the
                    <xosid:token>id</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a<xosid:token> Log</xosid:token> identified
                   by <xosid:token> Id is</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAncestorLogs">
            <xosid:description>
                Gets the ancestor logs of the given
                <xosid:token>id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token> to query
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="levels">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the maximum number of levels to include. A value of
                    1 returns the same set as
                    <xosid:token>getParentLogs(). </xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogList"/>
                <xosid:description>
                    the ancestor logs of the
                    <xosid:token>id</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a<xosid:token> Log</xosid:token> identified
                   by <xosid:token> Id is</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getChildLogs">
            <xosid:description>
                Gets the child logs of the given
                <xosid:token>id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token> to query
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogList"/>
                <xosid:description>
                    the child logs of the <xosid:token>id</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a<xosid:token> Log</xosid:token> identified
                   by <xosid:token> Id is</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getDescendantLogs">
            <xosid:description>
                Gets the descendant logs of the given
                <xosid:token>id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token> to query
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="levels">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the maximum number of levels to include. A value of
                    1 returns the same set as
                    <xosid:token>getChildLogs(). </xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogList"/>
                <xosid:description>
                    the decsendant logs of the
                    <xosid:token>id</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a<xosid:token> Log</xosid:token> identified
                   by <xosid:token> Id is</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogHierarchyDesignSession"> 
        <xosid:implements xosid:interface="osid.hierarchy.HierarchyDesignSession"/>
        <xosid:description>
            This session manages a hierarchy of logs. Logs may be
            organized into a hierarchy for organizing or federating. A
            parent <xosid:token>Log</xosid:token> includes all of the
            Ids of its children such that a single root node contains
            all of the <xosid:token>Ids</xosid:token> of the
            federation.
        </xosid:description>

    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogEntry"> 
        <xosid:implements xosid:interface=""/>
        <xosid:description>
            A log entry consists of a time, an agent, and some content.
        </xosid:description>


        <xosid:method xosid:name="getPriority">
            <xosid:description>
                Gets the priority level og this entry.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the priority level
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getTimestamp">
            <xosid:description>
                Gets the time this entry was logged.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.DateTime"/>
                <xosid:description>
                    the time stamp of this entry
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentId">
            <xosid:description>
                Gets the agent <xosid:token>Id</xosid:token> who
                created this entry.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the agent <xosid:token>id</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgent">
            <xosid:description>
                Gets the <xosid:token>Agent</xosid:token> who created
                this entry.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.Agent"/>
                <xosid:description>
                    the <xosid:token>Agent</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getContentType">
            <xosid:description>
                Gets the type implemented by the entry ocntent. The
                <xosid:token>Type</xosid:token> explicitly indicates
                the specification of the object and implicitly may
                define an object family. The interface
                <xosid:token>Type</xosid:token> returned may be a
                child in a type hierarchy. Interoperability with the
                typed interface to the content should be performed
                through
                <xosid:token>implementsContentType().</xosid:token>
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type implemeneted in the content
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="implementsContentType">
            <xosid:description>
                Tests if the content supports the given
                <xosid:token>Type.</xosid:token> The given type may be
                supported by the content through interface/type
                inheritence. This method should be checked before
                retrieving the typed interface extension.
            </xosid:description>
            <xosid:parameter xosid:name="contentType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the content
                    implements the given
                    <xosid:token>Type,</xosid:token>
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>contentType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getContent">
            <xosid:description>
                Gets the content of this log entry as specified by the
                interface type.
            </xosid:description>
            <xosid:parameter xosid:name="contentType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type of the object to retrieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="object"/>
                <xosid:description>
                    the log entry content
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>contentType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>implementContentType(contentype)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogEntryQuery"> 
        <xosid:implements xosid:interface=""/>
        <xosid:description>
            This is the query interface for searching log entries. Each
            method match request produces an
            <xosid:token>AND</xosid:token> term while multiple
            invocations of a method produces a nested
            <xosid:token>OR,</xosid:token> except for accessing the
            <xosid:token>LogEntryQuery</xosid:token> subinterface.
        </xosid:description>


        <xosid:method xosid:name="getId">
            <xosid:description>
                Gets the <xosid:token>Id</xosid:token> associated with
                this instance of this log entry. Persisting any
                reference to this object is done by persisting the
                <xosid:token>Id</xosid:token> returned from this
                method. The <xosid:token>Id</xosid:token> returned may
                be different than the <xosid:token>Id</xosid:token>
                used to query this object. In this case, the new
                <xosid:token>Id</xosid:token> should be preferred over
                the old one for future queries.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getStringMatchTypes">
            <xosid:description>
                Gets the string matching types supported. A string
                match type specifies the syntax of the string query,
                such as matching a word or including a wildcard or
                regular expression.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    a list containing the supported string match types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsStringMatchType">
            <xosid:description>
                Tests if the given string matching type is supported.
            </xosid:description>
            <xosid:parameter xosid:name="searchType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a <xosid:token>Type</xosid:token> indicating a
                    string match type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given Type
                    is supported, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="matchKeyword">
            <xosid:description>
                Adds a keyword to match. Multiple keywords can be added
                to perform a boolean OR among them. A keyword may be
                applied to any of the elements defined in this object
                such as the display name, description or any method
                defined in an interface implemented by this object.
            </xosid:description>
            <xosid:parameter xosid:name="keyword">
                <xosid:primitiveType xosid:type="string"/>
                <xosid:description>
                    keyword to match
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="stringMatchType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the string match type
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> for a positive
                    match, <xosid:token>false</xosid:token> for a
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>keyword is </xosid:token>not of
                    <xosid:token>stringMatchType</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>keyword </xosid:token>or
                    <xosid:token>stringMatchType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsStringMatchType(stringMatchType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="matchPriority">
            <xosid:description>
                Matches a priority <xosid:token>Type</xosid:token> for
                the log entry.
            </xosid:description>
            <xosid:parameter xosid:name="priorityType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    <xosid:token>Type</xosid:token> to match
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if for a positive
                    match, <xosid:token>false</xosid:token> for
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>priorityType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="matchTimestamp">
            <xosid:description>
                Matches a priority <xosid:token>Type</xosid:token> in
                this log entry.
            </xosid:description>
            <xosid:parameter xosid:name="startTime">
                <xosid:interfaceType xosid:type="osid.DateTime"/>
                <xosid:description>
                    start time
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="endTime">
                <xosid:interfaceType xosid:type="osid.DateTime"/>
                <xosid:description>
                    end time
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if for a positive
                    match, <xosid:token>false</xosid:token> for
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>startTime</xosid:token> is greater
                   than <xosid:token> endTime</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>startTime</xosid:token>
                   or <xosid:token> endTime</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="matchAgentId">
            <xosid:description>
                Matches an agent in this log entry.
            </xosid:description>
            <xosid:parameter xosid:name="agentId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    <xosid:token>Id</xosid:token> to match
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if for a positive
                    match, <xosid:token>false</xosid:token> for
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>agentId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsAgentQuery">
            <xosid:description>
                Tests if an <xosid:token>AgentQuery</xosid:token> is
                available for querying agents.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if an agent query
                    interface is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAgentQuery">
            <xosid:description>
                Gets the query interface for an agent.
            </xosid:description>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> for a positive
                    match, <xosid:token>false</xosid:token> for a
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.authentication.AgentQuery"/>
                <xosid:description>
                    the agent query
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsAgentQuery()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsAgentQuery()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsContentQuery">
            <xosid:description>
                Tests if a content query is available.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a content query
                    is available, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getContentQuery">
            <xosid:description>
                Gets the content query interface corresponding to the
                content interface <xosid:token>Type</xosid:token>
                provided in the search session. An object is returned
                from the search session is only required to implement
                the root <xosid:token>LogQuery</xosid:token> interface.
                This method must be used to retrieve a query object
                implementing the interface specified when retrieving
                this object from the search session along with all of
                its ancestor interfaces. Multiple retrievals of this
                interface may return the same underlying object and do
                not result in adding terms to the query.
            </xosid:description>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> for a positive
                    match, <xosid:token>false</xosid:token> for a
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="object"/>
                <xosid:description>
                    the content query
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsContentQuery()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsContentQuery()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogEntrySearch"> 
        <xosid:implements xosid:interface=""/>
        <xosid:description>
            The search interface for governing log entry searches.
        </xosid:description>


        <xosid:method xosid:name="limitResultSet">
            <xosid:description>
                By default, searches return all matching results. This
                method restricts the number of results by setting the
                start and end of the result set, starting from 1. The
                starting and ending results can be used for paging
                results when a certain ordering is requested. The
                ending position must be greater than the starting
                position.
            </xosid:description>
            <xosid:parameter xosid:name="start">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the start of the result set
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="end">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the end of the result set
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>end </xosid:token>is less than or
                    equal to <xosid:token>start</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="searchWithinLogEntryResults">
            <xosid:description>
                Execute this search using a previous search result.
            </xosid:description>
            <xosid:parameter xosid:name="results">
                <xosid:interfaceType xosid:type="osid.logging.LogEntrySearchResults"/>
                <xosid:description>
                    results from a query
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>results</xosid:token> is not valid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>results</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="searchAmongLogEntries">
            <xosid:description>
                Execute this search among the given list of log
                entries.
            </xosid:description>
            <xosid:parameter xosid:name="logEntryIds">
                <xosid:interfaceType xosid:type="osid.id.Id" xosid:array="true"/>
                <xosid:description>
                    list of log entries
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logEntryIds</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="orderByPriorityType">
            <xosid:description>
                Specifies a preference for ordering log entris by
                priority type.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="orderByTime">
            <xosid:description>
                Specifies a preference for ordering log entries by
                time.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="orderByAgent">
            <xosid:description>
                Specifies a preference for ordering log entries by
                agent.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="orderByContentType">
            <xosid:description>
                Specifies a preference for ordering log entris by
                content type.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntrySearchInterface">
            <xosid:description>
                Gets the <xosid:token>LogEntrySearch</xosid:token>
                interface corresponding to the log entry search
                interface <xosid:token>Type</xosid:token> provided in
                the search session<xosid:token>. </xosid:token>A
                <xosid:token>LogEntrySearch</xosid:token> returned
                from the search session is only required to implement
                the root <xosid:token>LogEntrySearch</xosid:token>
                interface. This method must be used to retrieve a query
                object implementing the interface specified when
                retrieving this object from the search session along
                with all of its ancestor interfaces, including the core
                <xosid:token>LogEntrySearch</xosid:token> interface.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntrySearch"/>
                <xosid:description>
                    the log entry search interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogEntrySearchResults"> 
        <xosid:implements xosid:interface="osid.OsidSearchResults"/>
        <xosid:description>
            This interface provides a means to capture results of a
            search and is used as a vehicle to perform a search within
            a previous result set.
        </xosid:description>


        <xosid:method xosid:name="getLogEntries">
            <xosid:description>
                Gets the log entry list resulting from a search.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntryList"/>
                <xosid:description>
                    the log entry list
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntrySearchResultsInterface">
            <xosid:description>
                Gets the log entry search results interface
                corresponding to the
                <xosid:token>searchType</xosid:token> used in
                retrieving the
                <xosid:token>LogEntrySearch</xosid:token> interface. A
                <xosid:token>LogEntrySearchResults</xosid:token>
                returned from the search session is only required to
                implement the root
                <xosid:token>LogEntrySearchResults</xosid:token>
                interface. This method must be used to retrieve a
                search results object implementing the interface
                specified when retrieving the
                <xosid:token>LogEntrySearch</xosid:token> from the
                search session along with all of its ancestor
                interfaces, including the core
                <xosid:token>LogEntrySearchResults</xosid:token>
                interface.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntrySearchResults"/>
                <xosid:description>
                    the log netry search results
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogEntryReceiver"> 
        <xosid:implements xosid:interface="osid.OsidReceiver"/>
        <xosid:description>
            The log entry receiver is the consumer supplied interface
            for receiving notifications pertaining to new log entries.
        </xosid:description>


        <xosid:method xosid:name="newLogEntry">
            <xosid:description>
                The callback for notifications of new log entries.
            </xosid:description>
            <xosid:parameter xosid:name="registeredLogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registered
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token> that triggered this
                    event. May be the same as the registered log or one
                    of its descendants.
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="entryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the new entry
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="deletedLogEntry">
            <xosid:description>
                the callback for notification of deleted log entries.
            </xosid:description>
            <xosid:parameter xosid:name="registeredLogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registered
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Log</xosid:token> that triggered this
                    event. May be the same as the registered log or one
                    of its descendants.
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="entryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the deleted
                    entry
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogEntryList"> 
        <xosid:implements xosid:interface="osid.OsidList"/>
        <xosid:description>
            Like all <xosid:token>OsidLists,</xosid:token>
            <xosid:token>LogEntry</xosid:token> provides a means for
            accessing <xosid:token>LogEntry</xosid:token> elements
            sequentially either one at a time or many at a time. Examples:

            <xosid:pbreak/>

             <xosid:code>
while (lel.hasNext()) {
     LogEntry entry = lel.getNextLogEntry();
}


            </xosid:code>
             or
            <xosid:code>


while (lel.hasNext()) {
     LogEntry[] entries = lel.getNextLogEntries(lel.available());
}
            </xosid:code>
             
        </xosid:description>


        <xosid:method xosid:name="getNextLogEntry">
            <xosid:description>
                Gets the next <xosid:token>LogEntry</xosid:token> in
                this list.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntry"/>
                <xosid:description>
                    the next <xosid:token>LogEntry</xosid:token> in
                    this list. The <xosid:token>hasNext()</xosid:token>
                    method should be used to test that a next
                    <xosid:token>LogEntry</xosid:token> is available
                    before calling this method.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getNextLogEntries">
            <xosid:description>
                Gets the next set of <xosid:token>LogEntry
                elements</xosid:token> in this list. The specified
                amount must be less than or equal to the return from
                <xosid:token>available().</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="n">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the number of <xosid:token>LogEntry
                    </xosid:token>elements requested which must be less
                    than or equal to
                    <xosid:token>available()</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntry" xosid:array="true"/>
                <xosid:description>
                    an array of <xosid:token>LogEntry
                   </xosid:token>elements. <xosid:token>
                    </xosid:token>The length of the array is less than
                    or equal to the number specified.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.Log"> 
        <xosid:implements xosid:interface="osid.OsidCatalog"/>
        <xosid:description>
            A <xosid:token>Log</xosid:token> represents a collection of
            entries. Like all OSID objects, a
            <xosid:token>Log</xosid:token> is identified by its Id and
            any persisted references should use the Id. 

            <xosid:pbreak/>

            <xosid:token>getLogInterface()</xosid:token> should be used
            to retrieve the interface corresponding to this
            <xosid:token>Type.</xosid:token> The existence of the
            interface must not be assumed until requested at which
            point it is safe to cast into the interface indicated by
            the type.
        </xosid:description>


        <xosid:method xosid:name="getLogInterface">
            <xosid:description>
                Gets the <xosid:token>Log</xosid:token> interface
                corresponding to the given
                <xosid:token>Log</xosid:token> interface
                <xosid:token>Type. </xosid:token>A
                <xosid:token>Log</xosid:token> returned from another
                method is only required to implement the root
                <xosid:token>Log</xosid:token> interface and this
                method must be used to retrieve a log object
                implementing the requested interface along with all of
                its ancestor interfaces, including the core
                <xosid:token>Log</xosid:token> interface. The
                <xosid:token>logInterfaceType</xosid:token> may be the
                <xosid:token>Type</xosid:token> returned by
                <xosid:token>getInterfaceType()</xosid:token> or any
                parent of <xosid:token>getInterfaceType()</xosid:token>
                in the <xosid:token>Type</xosid:token> hierarchy where
               
                <xosid:token>implementsInterfaceType(logInterfaceType)</xosid:token>
                is <xosid:token>true</xosid:token>.
            </xosid:description>
            <xosid:parameter xosid:name="logInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type of the interface to retrieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.Log"/>
                <xosid:description>
                    the log with the specified interface
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logInterfaceType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>implementsInterfaceType(logInterfaceType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogQuery"> 
        <xosid:implements xosid:interface="osid.OsidCatalogQuery"/>
        <xosid:description>
            This is the query interface for searching for logs. Each
            method match request produces an
            <xosid:token>AND</xosid:token> term while multiple
            invocations of a method produces a nested
            <xosid:token>OR,</xosid:token> except for accessing the
            <xosid:token>LogQuery</xosid:token> subinterface.
        </xosid:description>


        <xosid:method xosid:name="matchLogEntryId">
            <xosid:description>
                Matches a log entry <xosid:token>Id</xosid:token> in
                this log. Multiple Ids are treated as a boolean
                <xosid:token>OR.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="id">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    <xosid:token>Id</xosid:token> to match
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if for a positive
                    match, <xosid:token>false</xosid:token> for
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>id</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsLogEntryQuery">
            <xosid:description>
                Tests if a log entry query is available.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a log entry
                    query is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntryQuery">
            <xosid:description>
                Gets the query interface for a log entry.
            </xosid:description>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> for a positive
                    match, <xosid:token>false</xosid:token> for
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntryQuery"/>
                <xosid:description>
                    the log entry query
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogEntryQuery()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogEntryQuery()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogEntryQueryForInterfaceType">
            <xosid:description>
                Gets the log entry query interface for the log entry
                type. Supported types are defined in the
                <xosid:token>LoggingManager.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="logEntryInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a log entry interface type
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> for a positive
                    match, <xosid:token>false</xosid:token> for
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogEntryQuery"/>
                <xosid:description>
                    the logentry query
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logEntryInterfaceType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsLogEntryQuery()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>LoggingManager.supportsLogEntryInterfaceType(logEntryInterfaceType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsLogEntryQuery()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogQueryInterface">
            <xosid:description>
                Gets the <xosid:token>LogQuery</xosid:token> interface
                corresponding to the <xosid:token>Log</xosid:token>
                interface <xosid:token>Type</xosid:token> provided in
                the search session. A
                <xosid:token>LogQuery</xosid:token> returned from the
                search session is only required to implement the root
                <xosid:token>LogQuery</xosid:token> interface. This
                method must be used to retrieve a query object
                implementing the interface specified when retrieving
                this object from the search session along with all of
                its ancestor interfaces, including the core
                <xosid:token>LogQuery</xosid:token> interface.
                Multiple retrievals of this interface may return the
                same underlying object and do not result in adding
                terms to the query.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogQuery"/>
                <xosid:description>
                    the log query interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogSearch"> 
        <xosid:implements xosid:interface="osid.OsidCatalogSearch"/>
        <xosid:description>
            The search interface for governing log searches.
        </xosid:description>


        <xosid:method xosid:name="searchWithinLogResults">
            <xosid:description>
                Execute this search using a previous search result.
            </xosid:description>
            <xosid:parameter xosid:name="results">
                <xosid:interfaceType xosid:type="osid.logging.LogSearchResults"/>
                <xosid:description>
                    results from a query
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>results</xosid:token> is not valid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>results</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="searchAmongLogs">
            <xosid:description>
                Execute this search among the given list of logs.
            </xosid:description>
            <xosid:parameter xosid:name="logIds">
                <xosid:interfaceType xosid:type="osid.id.Id" xosid:array="true"/>
                <xosid:description>
                    list of logs
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>logIds</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogSearchInterface">
            <xosid:description>
                Gets the <xosid:token>LogSearch</xosid:token> interface
                corresponding to the log search interface
                <xosid:token>Type</xosid:token> provided in the search
               session <xosid:token>. </xosid:token>A
                <xosid:token>CogSearch</xosid:token> returned from the
                search session is only required to implement the root
                <xosid:token>LogSearch</xosid:token> interface. This
                method must be used to retrieve a query object
                implementing the interface specified when retrieving
                this object from the search session along with all of
                its ancestor interfaces, including the core
                <xosid:token>LogSearch</xosid:token> interface.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogSearch"/>
                <xosid:description>
                    the log search interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogSearchResults"> 
        <xosid:implements xosid:interface="osid.OsidSearchResults"/>
        <xosid:description>
            This interface provides a means to capture results of a
            search and is used as a vehicle to perform a search within
            a previous result set.
        </xosid:description>


        <xosid:method xosid:name="getLogs">
            <xosid:description>
                Gets the log list resulting from a search.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogList"/>
                <xosid:description>
                    the log list
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getLogSearchResultsInterface">
            <xosid:description>
                Gets the log search results interface corresponding to
                the <xosid:token>searchType</xosid:token> used in
                retrieving the <xosid:token>LogSearch</xosid:token>
                interface. A
                <xosid:token>LogSearchResults</xosid:token> returned
                from the search session is only required to implement
                the root <xosid:token>LogSearchResults</xosid:token>
                interface. This method must be used to retrieve a
                search results object implementing the interface
                specified when retrieving the
                <xosid:token>LogSearch</xosid:token> from the search
                session along with all of its ancestor interfaces,
                including the core
                <xosid:token>LogSearchResults</xosid:token> interface.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogSearchResults"/>
                <xosid:description>
                    the log search results
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogForm"> 
        <xosid:implements xosid:interface="osid.OsidCatalogForm"/>
        <xosid:description>
            This is the form for creating and updating
            <xosid:token>Logs. </xosid:token>Like all
            <xosid:token>OsidForm</xosid:token> objects, various data
            elements may be set here for use in the create and update
            methods in the <xosid:token>LogAdminSession.</xosid:token>
            For each data element that may be set, metadata may be
            examined to provide display hints or data constraints.
        </xosid:description>


        <xosid:method xosid:name="getLogFormInterface">
            <xosid:description>
                Gets the <xosid:token>LogForm</xosid:token> interface
                corresponding to the <xosid:token>Log</xosid:token>
                interface <xosid:token>Type</xosid:token> provided in
                the admin session<xosid:token>. </xosid:token>A
                <xosid:token>Log</xosid:token> returned from the admin
                session is only required to implement the root
                <xosid:token>Log</xosid:token> interface. This method
                must be used to retrieve a query object implementing
                the interface specified when retrieving this object
                from the admin session along with all of its ancestor
                interfaces, including the core
                <xosid:token>LogForm</xosid:token> interface.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.LogForm"/>
                <xosid:description>
                    the log form interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogReceiver"> 
        <xosid:implements xosid:interface="osid.OsidReceiver"/>
        <xosid:description>
            The log receiver is the consumer supplied interface for
            receiving notifications pertaining to new, updated or
            deleted <xosid:token>Log</xosid:token> objects.
        </xosid:description>


        <xosid:method xosid:name="newLog">
            <xosid:description>
                The callback for notifications of new logs.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the new
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="newAncestorLog">
            <xosid:description>
                The callback for notifications of new ancestors of a
                log.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registered
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="ancestorId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the new
                    ancestor log
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="newDescendantLog">
            <xosid:description>
                The callback for notifications of new descendant of a
                log.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registered
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="descendantId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the new
                    descendant log
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="changedLog">
            <xosid:description>
                The callback for notification of updated logs.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the updated
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="deletedLog">
            <xosid:description>
                the callback for notification of deleted logs.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registered
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="deletedAncestorLog">
            <xosid:description>
                The callback for notifications of deleted ancestors of
                a log.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registered
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="ancestorId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the removed
                    ancestor log
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="deletedDescendantLog">
            <xosid:description>
                The callback for notifications of deleted descendants
                of a log.
            </xosid:description>
            <xosid:parameter xosid:name="logId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registered
                    <xosid:token>Log</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="descendantId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the deleted
                    descendant log
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.logging.LogList"> 
        <xosid:implements xosid:interface="osid.OsidList"/>
        <xosid:description>
            Like all <xosid:token>OsidLists,</xosid:token>
            <xosid:token>LogList</xosid:token> provides a means for
            accessing <xosid:token>Log</xosid:token> elements
            sequentially either one at a time or many at a time. Examples:

            <xosid:pbreak/>

             <xosid:code>
while (ll.hasNext()) {
     Log log = al.getNextLog();
}


            </xosid:code>
             or
            <xosid:code>


while (ll.hasNext()) {
     Loh[] logs = ll.getNextLogs(ll.available());
}
            </xosid:code>
             
        </xosid:description>


        <xosid:method xosid:name="getNextLog">
            <xosid:description>
                Gets the next <xosid:token>Log</xosid:token> in this
                list.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.Log"/>
                <xosid:description>
                    the next <xosid:token>Log</xosid:token> in this
                    list. The <xosid:token>hasNext()</xosid:token>
                    method should be used to test that a next
                    <xosid:token>Log</xosid:token> is available before
                    calling this method.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getNextLogs">
            <xosid:description>
                Gets the next set of <xosid:token>Log
                elements</xosid:token> in this list. The specified
                amount must be less than or equal to the return from
                <xosid:token>available().</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="n">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the number of <xosid:token>Log
                    </xosid:token>elements requested which must be less
                    than or equal to
                    <xosid:token>available()</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.logging.Log" xosid:array="true"/>
                <xosid:description>
                    an array of <xosid:token>Log
                   </xosid:token>elements. <xosid:token>
                    </xosid:token>The length of the array is less than
                    or equal to the number specified.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>

</xosid:osid>
