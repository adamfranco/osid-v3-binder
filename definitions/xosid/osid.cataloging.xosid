<?xml version="1.0" encoding="iso-8859-1" standalone="no"?>

<!--
    XOSID for osid.cataloging generated at 10/14/2008 10:01:36 AM 

    Copyright (C) 2008 Massachusetts Institute of Technology. All Rights
    Reserved.

    This Work is being provided by the copyright holder(s) subject to the
    following license. By obtaining, using and/or copying this Work, you
    agree that you have read, understand, and will comply with the following
    terms and conditions.

    This Work and the information contained herein is provided on an ""AS
    IS"" basis. The Massachusetts Institute of Technology, the Open
    Knowledge Initiative, and THE AUTHORS DISCLAIM ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
    OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
    ARISING FROM, OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER
    DEALINGS IN THE WORK.

    Permission to use, copy and distribute unmodified versions of this Work,
    for any purpose, without fee or royalty is hereby granted, provided that
    you include the above copyright notice and the terms of this license on
    ALL copies of the Work or portions thereof. 

    You may nodify or create Derivatives of this Work only for your internal
    purposes. You shall not distribute or transfer any such Derivative of
    this Work to any location or to any third party. For the purposes of
    this license, Derivative shall mean any derivative of the Work as
    defined in the United States Copyright Act of 1976, such as a
    translation or modification.

    The export of software employing encryption technology may require a
    specific license from the United States Government. It is the
    responsibility of any person or organization comtemplating export to
    obtain such a license before exporting this Work.
-->

<xosid:osid xmlns:xosid="urn:inet:osid.org:schemas/osid/3" xosid:name="osid.cataloging" xosid:version="3.0.0">

    <xosid:title>
        Cataloging Open Service Interface Definitions
    </xosid:title>

    <xosid:copyright>
        Copyright <xosid:copyrightSymbol/>2008 Massachusetts Institute
        of Technology. All Rights Reserved.
    </xosid:copyright>

    <xosid:license>
        This Work is being provided by the copyright holder(s) subject
        to the following license. By obtaining, using and/or copying
        this Work, you agree that you have read, understand, and will
        comply with the following terms and conditions.

        <xosid:pbreak/>

        This Work and the information contained herein is provided on
        an ""AS IS"" basis. The Massachusetts Institute of Technology,
        the Open Knowledge Initiative, and THE AUTHORS DISCLAIM ALL
        WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
        WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
        AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
        HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
        WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
        FROM, OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER
        DEALINGS IN THE WORK.

        <xosid:pbreak/>

        Permission to use, copy and distribute unmodified versions of
        this Work, for any purpose, without fee or royalty is hereby
        granted, provided that you include the above copyright notice
        and the terms of this license on ALL copies of the Work or
        portions thereof. 

        <xosid:pbreak/>

        You may nodify or create Derivatives of this Work only for your
        internal purposes. You shall not distribute or transfer any
        such Derivative of this Work to any location or to any third
        party. For the purposes of this license, Derivative shall mean
        any derivative of the Work as defined in the United States
        Copyright Act of 1976, such as a translation or modification.

        <xosid:pbreak/>

        The export of software employing encryption technology may
        require a specific license from the United States Government.
        It is the responsibility of any person or organization
        comtemplating export to obtain such a license before exporting
        this Work.
    </xosid:license>

    <xosid:description>
        The Cataloging OSID provides a means for organizing objects
        into catalogs. An object is represented by an OSID Id. Catalogs
        can be used for <xosid:token>OsidObjects</xosid:token> using
        their Ids or consumer objects whose identifiers are exprsssed
        via an Id.

        <xosid:pbreak/>

        Catalogs can be organized into hierarchies for federation. A
        catalog that is a parent of another catalog includes the Ids of
        its children.

        <xosid:pbreak/>

        The Cataloging OSID provides the core definition for the
        catalogging functions used throughout the OSIDs and aids in the
        adaptability of cataloging structures.
    </xosid:description>


    <xosid:interface xosid:name="osid.cataloging.CatalogingProfile"> 
        <xosid:implements xosid:interface="osid.OsidProfile"/>
        <xosid:description>
            The cataloging profile describes the interoperability among
            cataloging services.
        </xosid:description>


        <xosid:method xosid:name="supportsCatalog">
            <xosid:description>
                Tests for the availability of a cataloging service
                retrieving <xosid:token>Id</xosid:token> to
                <xosid:token>Catalog</xosid:token> mappings.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if cataloging is
                    available, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsCatalogAssignment">
            <xosid:description>
                Tests for the availability of a cataloging service for
                mapping <xosid:token>Ids</xosid:token> to
                <xosid:token>Catalogs.</xosid:token>
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if catalog
                    assignment is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsCatalogAssignmentNotification">
            <xosid:description>
                Tests for the availability of a cataloging notification
                service for mapping <xosid:token>Ids</xosid:token> to
                <xosid:token>Catalogs.</xosid:token>
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if catalog
                    assignment notification is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsCatalogLookup">
            <xosid:description>
                Tests for the availability of a catalog lookup service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if catalog lookup
                    is available, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsCatalogSearch">
            <xosid:description>
                Tests for the availability of a catalog search service
                that defines more comprehensive queries.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if catalog search
                    is available, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsCatalogAdmin">
            <xosid:description>
                Tests for the availability of a catalog administration
                service for the addition and deletion of catalogs.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if catalog
                    administration is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsCatalogNotification">
            <xosid:description>
                Tests for the availability of a catalog notification
                service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if catalog
                    notification is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsCatalogHierarchy">
            <xosid:description>
                Tests for the availability of a catalog hierarchy
                traversal service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if catalog
                    hierarchy traversal is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsCatalogHierarchyDesign">
            <xosid:description>
                Tests for the availability of a catalog hierarchy
                design service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if catalog
                    hierarchy design is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented in all providers.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsConfigurationHierarchySequencing">
            <xosid:description>
                Tests if the configuration hierarchy supports node
                sequencing.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if configuration
                    hierarchy node sequencing is supported,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogRecordTypes">
            <xosid:description>
                Gets the supported <xosid:token>Catalog</xosid:token>
                record types.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    a list containing the supported
                    <xosid:token>Catalog</xosid:token> record types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsCatalogRecordType">
            <xosid:description>
                Tests if the given <xosid:token>Catalog</xosid:token>
                record type is supported.
            </xosid:description>
            <xosid:parameter xosid:name="catalogRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a <xosid:token>Type</xosid:token> indicating a
                    <xosid:token>Catalog</xosid:token> record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given
                    <xosid:token>Type</xosid:token> is supported,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogSearchRecordTypes">
            <xosid:description>
                Gets the supported catalog search reciord types.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    a list containing the supported search record types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsCatalogSearchRecordType">
            <xosid:description>
                Tests if the given catalog search record type is
                supported.
            </xosid:description>
            <xosid:parameter xosid:name="catalogSearchRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a <xosid:token>Type</xosid:token> indicating a
                    catalog search record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given
                    <xosid:token>Type</xosid:token> is supported,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogingManager"> 
        <xosid:implements xosid:interface="osid.OsidManager"/>
        <xosid:implements xosid:interface="osid.cataloging.CatalogingProfile"/>
        <xosid:description>
            The cataloging manager provides access to cataloging
            sessions and provides interoperability tests for various
            aspects of this service. The sessions included in this
            manager are:
            <xosid:outline>
                 <xosid:element>
                    <xosid:token>CatalogSession:</xosid:token> a
                    session to lookup mappings to catalogs
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>CatalogAssignmentSession:</xosid:token>
                    a session to manage Id to Catalog mappings
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>CatalogAssignmentNotificationSession:</xosid:token>
                    a session to receive notification of changed
                    mappings 
                </xosid:element>
                 <xosid:element>
                    <xosid:token>CatalogLookupSession:</xosid:token> a
                    session to retrieve catalog objects
                </xosid:element>
                 <xosid:element>
                    <xosid:token>CatalogSearchSession:</xosid:token> a
                    session to search for catalogs
                </xosid:element>
                 <xosid:element>
                    <xosid:token>CatalogAdminSession:</xosid:token> a
                    session to create, update and delete catalogs
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>CatalogNotificationSession:</xosid:token>
                    a session to receive notifications for changes in catalogs
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>CatalogHierarchyTraversalSession:</xosid:token>
                    a session to traverse hierarchies of catalogs
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>CatalogHierarchyDesignSession:</xosid:token>
                    a session to manage hierarchues of catalogs
                </xosid:element>
            </xosid:outline>
             
            The cataloging manager also provides a profile for
            determing the supported search types supported by this
            service.
        </xosid:description>


        <xosid:method xosid:name="getCatalogSession">
            <xosid:description>
                Gets the cataloging session for retrieving mappings to
                catalogs.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogSession"/>
                <xosid:description>
                    a <xosid:token>CatalogSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsCatalog()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsCatalog()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogAssignmentSession">
            <xosid:description>
                Gets the cataloging session for adding and removing
                mappings to catalogs.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogAssignmentSession"/>
                <xosid:description>
                    a
                    <xosid:token>CatalogAssignmentSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsCatalogAssignment()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsCatalogAssignment()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogAssignmentNotificationSession">
            <xosid:description>
                Gets the notification session for subscribing to
                changes to catalogs.
            </xosid:description>
            <xosid:parameter xosid:name="receiver">
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogEntryReceiver"/>
                <xosid:description>
                    the notification callback
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>CatalogAssignmentNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>receiver</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsCatalogAssignmentNotification()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsCatalogAssignmentNotification()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogLookupSession">
            <xosid:description>
                Gets the catalog lookup session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogLookupSession"/>
                <xosid:description>
                    a <xosid:token>CatalogLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsCatalogLookup()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsCatalogLookup()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogSearchSession">
            <xosid:description>
                Gets the catalog search session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogSearchSession"/>
                <xosid:description>
                    a <xosid:token>CatalogSearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsCatalogSearch()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsCatalogSearch()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogAdminSession">
            <xosid:description>
                Gets the catalog administrative session for creating,
                updating and deleting catalogs.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogAdminSession"/>
                <xosid:description>
                    a <xosid:token>CatalogAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsCatalogAdmin()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsCatalogAdmin()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogNotificationSession">
            <xosid:description>
                Gets the notification session for subscribing to
                changes to catalogs.
            </xosid:description>
            <xosid:parameter xosid:name="receiver">
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogReceiver"/>
                <xosid:description>
                    the notification callback
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>CatalogNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>receiver</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsCatalogNotification()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsCatalogNotification()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogHierarchySession">
            <xosid:description>
                Gets the catalog hierarchy traversal session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogHierarchySession"/>
                <xosid:description>
                    a
                    <xosid:token>CatalogHierarchySession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsCatalogHierarchy()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsCatalogHierarchy()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogHierarchyDesignSession">
            <xosid:description>
                Gets the catalog hierarchy design session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogHierarchyDesignSession"/>
                <xosid:description>
                    a
                    <xosid:token>CatalogHierarchyDesignSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsCatalogHierarchyDesign()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsCatalogHierarchyDesign()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogingProxyManager"> 
        <xosid:implements xosid:interface="osid.OsidProxyManager"/>
        <xosid:implements xosid:interface="osid.cataloging.CatalogingProfile"/>
        <xosid:description>
            The cataloging manager provides access to cataloging
            sessions and provides interoperability tests for various
            aspects of this service. Methods in this manager support
            the passing of an <xosid:token>Authentication</xosid:token>
            object for the purposes of proxy authentication.
            <xosid:outline>
                 <xosid:element>
                    <xosid:token>CatalogSession:</xosid:token> a
                    session to lookup mappings to catalogs
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>CatalogAssignmentSession:</xosid:token>
                    a session to manage Id to Catalog mappings
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>CatalogAssignmentNotificationSession:</xosid:token>
                    a session to receive notification of changed
                    mappings 
                </xosid:element>
                 <xosid:element>
                    <xosid:token>CatalogLookupSession:</xosid:token> a
                    session to retrieve catalog objects
                </xosid:element>
                 <xosid:element>
                    <xosid:token>CatalogSearchSession:</xosid:token> a
                    session to search for catalogs
                </xosid:element>
                 <xosid:element>
                    <xosid:token>CatalogAdminSession:</xosid:token> a
                    session to create, update and delete catalogs
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>CatalogNotificationSession:</xosid:token>
                    a session to receive notifications for changes in catalogs
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>CatalogHierarchyTraversalSession:</xosid:token>
                    a session to traverse hierarchies of catalogs
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>CatalogHierarchyDesignSession:</xosid:token>
                    a session to manage hierarchues of catalogs
                </xosid:element>
            </xosid:outline>
             
            The cataloging manager also provides a profile for
            determing the supported search types supported by this
            service.
        </xosid:description>


        <xosid:method xosid:name="getCatalogSession">
            <xosid:description>
                Gets the catalog session for retrieving
                <xosid:token>Id</xosid:token> to
                <xosid:token>Catalog</xosid:token> mappings.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogSession"/>
                <xosid:description>
                    a <xosid:token>CatalogSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsCatalog()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsCatalog()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogAssignmentSession">
            <xosid:description>
                Gets the catalog session for mapping
                <xosid:token>Ids</xosid:token> to
                <xosid:token>Catalogs.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogAssignmentSession"/>
                <xosid:description>
                    a
                    <xosid:token>CatalogAssignmentSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsCatalogAssignment()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsCatalogAssignment()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogAssignmentNotificationSession">
            <xosid:description>
                Gets the catalog session for mapping
                <xosid:token>Ids</xosid:token> to
                <xosid:token>Catalogs.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="receiver">
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogEntryReceiver"/>
                <xosid:description>
                    the notification callback
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogAssignmentNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>CatalogAssignmentNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>receiver</xosid:token> or
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsCatalogAssignmentNotification()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsCatalogAssignmentNotification()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogLookupSession">
            <xosid:description>
                Gets the catalog lookup session.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogLookupSession"/>
                <xosid:description>
                    a <xosid:token>CatalogLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsCatalogLookup()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsCatalogLookup()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogSearchSession">
            <xosid:description>
                Gets the catalog search session.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogSearchSession"/>
                <xosid:description>
                    a <xosid:token>CatalogSearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsCatalogSearch()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsCatalogSearch()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogAdminSession">
            <xosid:description>
                Gets the catalog administrative session for creating,
                updating and deleting catalogs.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogAdminSession"/>
                <xosid:description>
                    a <xosid:token>CatalogAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsCatalogAdmin()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsCatalogAdmin()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogNotificationSession">
            <xosid:description>
                Gets the notification session for subscribing to
                changes to catalogs.
            </xosid:description>
            <xosid:parameter xosid:name="receiver">
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogReceiver"/>
                <xosid:description>
                    the notification callback
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>CatalogNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>receiver</xosid:token> or
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsCatalogNotification()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsCatalogNotification()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogHierarchySession">
            <xosid:description>
                Gets the catalog hierarchy traversal session.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogHierarchySession"/>
                <xosid:description>
                    a
                    <xosid:token>CatalogHierarchySession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is null
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsCatalogHierarchy()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsCatalogHierarchy()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogHierarchyDesignSession">
            <xosid:description>
                Gets the catalog hierarchy design session.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogHierarchyDesignSession"/>
                <xosid:description>
                    a
                    <xosid:token>CatalogHierarchyDesignSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is null
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsCatalogHierarchyDesign()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the <xosid:token>authentication</xosid:token>
                    service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsCatalogHierarchyDesign()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods to retrieve OSID
            <xosid:token>Ids</xosid:token> to
            <xosid:token>Catalogs</xosid:token> mappings. An
            <xosid:token>Id</xosid:token> may appear in multiple
            <xosid:token>Catalogs.</xosid:token> Each
            <xosid:token>Catalog</xosid:token> may have its own
            authorizations as to who is allowed to look at it.

            <xosid:pbreak/>

            This lookup session defines several views:

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    federated view: entries are accessible from the
                    specified <xosid:token>Catalog</xosid:token> and
                    any descedant dictionaries in the
                    <xosid:token>Catalog</xosid:token> hierarchy
                </xosid:element>
                 <xosid:element>
                    isolated view: entries are accessible from the
                    specified Catalog only
                </xosid:element>
                 <xosid:element>
                    comparative view: elements may be silently omitted
                    or re-ordered 
                </xosid:element>
                 <xosid:element>
                    plenary view: provides a complete result set or is
                    an error condition
                </xosid:element>
            </xosid:outline>
            Generally, the comparative view should be used for most
            applications as it permits operation even if there a
            particular element is inaccessible. For example, a
            hierarchy output can be plugged into a lookup method to
            retrieve all objects known to a hierarchy, but it may not
            be necessary to break execution if a node from the
            hierarchy no longer exists. However, some administrative
            applications may need to know whether it had retrieved an
            entire set of objects and may sacrifice some
            interoperability for the sake of precision.
        </xosid:description>


        <xosid:method xosid:name="useComparativeCatalogView">
            <xosid:description>
                The returns from the lookup methods may omit or
                translate elements based on this session, such as
                authorization, and not result in an error. This view is
                used when greater interoperability is desired at the
                expense of precision.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="usePlenaryCatalogView">
            <xosid:description>
                A complete view of the <xosid:token>Id</xosid:token>
                and <xosid:token>Catalog</xosid:token> returns is
                desired. Methods will return what is requested or
                result in an error. This view is used when greater
                precision is desired at the expense of
                interoperability.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useFederatedCatalogView">
            <xosid:description>
                Federates the view for methods in this session. A
                federated view will include entries from descendant
                catalogs in the catalog hierarchy.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useIsolatedCatalogView">
            <xosid:description>
                Isolates the view for methods in this session. An
                isolated view restricts lookups to the specified
                catalog only.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canLookupMappings">
            <xosid:description>
                Tests if this user can perform lookups of
                <xosid:token>Id</xosid:token> to
                <xosid:token>Catalog</xosid:token> mappings. A return
                of true does not guarantee successful authorization. A
                return of false indicates that it is known lookup
                methods in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer lookup operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if looking up
                    mappings is not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getIdsByCatalog">
            <xosid:description>
                Gets the list of <xosid:token>Ids</xosid:token> map to
                a <xosid:token>Catalog.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    a catalog <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    list of <xosid:token>Ids</xosid:token> mapped the
                    given <xosid:token>catalogId</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getIdsByCatalogs">
            <xosid:description>
                Gets the list of <xosid:token>Ids</xosid:token> map to
                a lst of <xosid:token>Catalogs.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="catalogIdList">
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    an <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    list of catalogs containing the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>idList</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogIdsById">
            <xosid:description>
                Gets the <xosid:token>Catalog Ids</xosid:token> mapped
                to an <xosid:token>Id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="id">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    an <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    list of catalogs <xosid:token>Ids</xosid:token>
                    containing the given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>id</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogsById">
            <xosid:description>
                Gets the <xosid:token>Catalogs</xosid:token> mapped to
                an <xosid:token>Id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="id">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    an <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogList"/>
                <xosid:description>
                    list of catalogs containing the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>id</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogAssignmentSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods to assign OSID
            <xosid:token>Ids</xosid:token> to
            <xosid:token>Catalogs.</xosid:token> An
            <xosid:token>Id</xosid:token> may appear in multiple
            <xosid:token>Catalogs</xosid:token> and removing the last
            reference to an <xosid:token>Id</xosid:token> is the
            equivalent of deleting it. Each Catalog may have its own
            authorizations as to who is allowed to operate on it.
        </xosid:description>


        <xosid:method xosid:name="canAssignCatalogs">
            <xosid:description>
                Tests if this user can perform alter
                <xosid:token>Id/Catalog</xosid:token> mappings. A
                return of true does not guarantee successful
                authorization. A return of false indicates that it is
                known mapping methods in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer lookup operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if mapping is not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="assignId">
            <xosid:description>
                Adds an <xosid:token>Id</xosid:token> to a
                <xosid:token>Catalog.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="id">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    an <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>id</xosid:token> or
                    <xosid:token>catalogId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>id
                   </xosid:token>or <xosid:token>
                    catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="reassignId">
            <xosid:description>
                Moves an <xosid:token>Id</xosid:token> to a
                <xosid:token>Catalog.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="id">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    an <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>id</xosid:token> or
                    <xosid:token>catalogId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>id
                   </xosid:token>or <xosid:token>
                    catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="unassignId">
            <xosid:description>
                Removes an <xosid:token>Id</xosid:token> from a
                <xosid:token>Catalog.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="id">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    an <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>id</xosid:token> or
                    <xosid:token>catalogId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>id
                   </xosid:token>or <xosid:token>
                    catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogAssignmentNotificationSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session defines methods to receive notifications on
            adds/changes to a catalog assignment. This session is
            intended for consumers needing to synchronize their state
            with this service without the use of polling. Notifications
            are cancelled when this session is closed.

            <xosid:pbreak/>

            Notifications are triggered with changes to assignments of
            <xosid:token>Ids</xosid:token> to this catalog. For
            notifications of changes to the
            <xosid:token>Catalog</xosid:token> object use
            <xosid:token>CatalogNotificationSession.</xosid:token>
        </xosid:description>


        <xosid:method xosid:name="canRegisterForCatalogEntryNotifications">
            <xosid:description>
                Tests if this user can register for
                <xosid:token>Catalog</xosid:token> entry
                notifications. A return of true does not guarantee
                successful authorization. A return of false indicates
                that it is known all methods in this session will
                result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer notification operations.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if notification
                    methods are not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useFederatedCatalogView">
            <xosid:description>
                Federates the view for methods in this session. A
                federated view will include entries from parent
                catalogs in the catalog hierarchy.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useIsolatedCatalogView">
            <xosid:description>
                Isolates the view for methods in this session. An
                isolated view restricts notifications for entries to
                this catalog only.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForNewCatalogEntries">
            <xosid:description>
                Register for notifications of new catalogs.
               
                <xosid:token>CatalogEntryReceiver.newCatalogEntry()</xosid:token>
                is invoked when a new
                <xosid:token>Catalog</xosid:token> entry is created.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                   C <xosid:token>atalog</xosid:token> node to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a catalog node was not found identified by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedCatalogEntries">
            <xosid:description>
                Registers for notification of deleted catalogs entries.
               
                <xosid:token>CatalogEntryReceiver.deletedCatalogEntry()</xosid:token>
                is invoked when a catalog entry is deleted.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                   C <xosid:token>atalog</xosid:token> node to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a catalog node was not found identified by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogLookupSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods for retrieving
            <xosid:token>Catalog</xosid:token> objects. The
            <xosid:token>Catalog </xosid:token>represents a collection
            of OSID <xosid:token>Ids.</xosid:token>

            <xosid:pbreak/>

            This session defines views that offer differing behaviors
            when retrieving multiple objects.

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    comparative view: elements may be silently omitted
                    or re-ordered 
                </xosid:element>
                 <xosid:element>
                    plenary view: provides a complete set or is an
                    error condition
                </xosid:element>
            </xosid:outline>
            Generally, the comparative view should be used for most
            applications as it permits operation even if there is data
            that cannot be accessed.. For example, a browsing
            application may only need to examine the
            <xosid:token>Catalogs</xosid:token> it can access, without
            breaking execution. However, an assessment may only be
            useful if all <xosid:token>Catalogs</xosid:token>
            referenced by it are available, and a test-taking
            applicationmay sacrifice some interoperability for the sake
            of precision.
        </xosid:description>


        <xosid:method xosid:name="canLookupCatalogs">
            <xosid:description>
                Tests if this user can perform
                <xosid:token>Catalog</xosid:token> lookups. A return of
                true does not guarantee successful authorization. A
                return of false indicates that it is known all methods
                in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer lookup operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if lookup methods
                    are not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useComparativeCatalogView">
            <xosid:description>
                The returns from the lookup methods may omit or
                translate elements based on this session, such as
                authorization, and not result in an error. This view is
                used when greater interoperability is desired at the
                expense of precision.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="usePlenaryCatalogView">
            <xosid:description>
                A complete view of the
                <xosid:token>Catalog</xosid:token> returns is desired.
                Methods will return what is requested or result in an
                error. This view is used when greater precision is
                desired at the expense of interoperability.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalog">
            <xosid:description>
                Gets the <xosid:token>Catalog</xosid:token> specified
                by its <xosid:token>Id. </xosid:token>In plenary mode,
                the exact <xosid:token>Id</xosid:token> is found or a
                <xosid:token>NOT_FOUND</xosid:token> results.
                Otherwise, the returned
                <xosid:token>Catalog</xosid:token> may have a different
                <xosid:token>Id</xosid:token> than requested, such as
                the case where a duplicate
                <xosid:token>Id</xosid:token> was assigned to a
                <xosid:token>Catalog</xosid:token> and retained for
                compatibility.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    <xosid:token>Id</xosid:token> of
                   the <xosid:token> Catalog</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.Catalog"/>
                <xosid:description>
                    the catalog
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId
                   </xosid:token>is <xosid:token> null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogsByIds">
            <xosid:description>
                Gets a <xosid:token>CatalogList</xosid:token>
                corresponding to the given <xosid:token>IdList.
                </xosid:token> In plenary mode, the returned list
                contains all of the catalogs specified in the
                <xosid:token>Id</xosid:token> list, in the order of
                the list, including duplicates, or an error results if
                an <xosid:token>Id</xosid:token> in the supplied list
                is not found or inaccessible. Otherwise, inaccessible
                <xosid:token>Catalogs</xosid:token> may be omitted
                from the list and may present the elements in any order
                including returning a unique set.
            </xosid:description>
            <xosid:parameter xosid:name="catalogIdList">
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    the list of <xosid:token>Ids</xosid:token> to
                    rerieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogList"/>
                <xosid:description>
                    the returned <xosid:token>Catalog
                    list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    an <xosid:token>Id was</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogIdList</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogsByGenusType">
            <xosid:description>
                Gets a <xosid:token>CatalogList</xosid:token>
                corresponding to the given catalog genus
                <xosid:token>Type </xosid:token>which does not include
                catalogs of genus types derived from the specified
                <xosid:token>Type. </xosid:token>In plenary mode, the
                returned list contains all known catalogs or an error
                results. Otherwise, the returned list may contain only
                those catalogs that are accessible through this
                session. In both cases, the order of the set is not
                specified.
            </xosid:description>
            <xosid:parameter xosid:name="catalogGenusType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a catalog genus type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogList"/>
                <xosid:description>
                    the returned <xosid:token>Catalog
                    list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogGenusType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogsByParentGenusType">
            <xosid:description>
                Gets a <xosid:token>CatalogList</xosid:token>
                corresponding to the given catalog genus
                <xosid:token>Type </xosid:token>and include any
                additional catalogs with genus types derived from the
                specified <xosid:token>Type. </xosid:token>In plenary
                mode, the returned list contains all known catalogs or
                an error results. Otherwise, the returned list may
                contain only those catalogs that are accessible through
                this session. In both cases, the order of the set is
                not specified.
            </xosid:description>
            <xosid:parameter xosid:name="catalogGenusType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a catalog genus type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogList"/>
                <xosid:description>
                    the returned <xosid:token>Catalog
                    list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogGenusType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogsByRecordType">
            <xosid:description>
                Gets a <xosid:token>CatalogList</xosid:token>
                containing the given subject record
                <xosid:token>Type. </xosid:token>In plenary mode, the
                returned list contains all known subjects or an error
                results. Otherwise, the returned list may contain only
                those catalogs that are accessible through this
                session. In both cases, the order of the set is not
                specified.
            </xosid:description>
            <xosid:parameter xosid:name="catalogRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a catalog interface type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogList"/>
                <xosid:description>
                    the returned <xosid:token>Catalog
                    list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogInterfaceType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogs">
            <xosid:description>
                Gets all <xosid:token>Catalogs.</xosid:token> In
                plenary mode, the returned list contains all known
                catalogs or an error results. Otherwise, the returned
                list may contain only those catalogs that are
                accessible through this session. In both cases, the
                order of the set is not specified.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogList"/>
                <xosid:description>
                    a list of <xosid:token>Catalogs</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogSearchSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods for searching
            <xosid:token>Catalog</xosid:token> objects. The search
            query is constructed using the
            <xosid:token>CatalogQuery</xosid:token> interface. Multiple
            <xosid:token>CatalogQuery</xosid:token> interfaces may be
            submitted into a search to perform a boolean OR. If more
            than one search element is specified within a single
            <xosid:token>CatalogQuery</xosid:token> these elements
            form a boolean AND. The catalog interface
            <xosid:token>Type</xosid:token> also specifies the
            interface for the catalog query. 

            <xosid:pbreak/>

            <xosid:token>getCatalogsByQuery()</xosid:token> is the
            basic search method and returns a list of
            <xosid:token>Catalog </xosid:token>elements. A more
            advanced search may be performed with
            <xosid:token>getCatalogsBySearch(). </xosid:token>It
            accepts a <xosid:token>CatalogSearch</xosid:token>
            interface in addition to the query interface for the
            purpose of specifying additional options affecting the
            entire search, such as ordering.
            <xosid:token>getCatalogsBySearch()</xosid:token> returns a
            <xosid:token>CatalogSearchResults</xosid:token> interface
            that can be used to access the resulting
            <xosid:token>CatalogList</xosid:token> or be used to
            perform a search within the result set through
            <xosid:token>CatalogSearch.</xosid:token>
            Catalogs may have a record query interface indicated by
            their respective record interface types. The record query
            interface is accessed via the
            <xosid:token>CatalogQuery.</xosid:token>
        </xosid:description>


        <xosid:method xosid:name="canSearchCatalogs">
            <xosid:description>
                Tests if this user can perform
                <xosid:token>Catalog</xosid:token> searches. A return
                of true does not guarantee successful authorization. A
                return of false indicates that it is known all methods
                in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer search operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if search methods
                    are not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogQuery">
            <xosid:description>
                Gets a catalog query interface. The returned query will
                not have an extension query.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogQuery"/>
                <xosid:description>
                    the catalog query
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogsByQuery">
            <xosid:description>
                Gets a list of <xosid:token>Catalogs</xosid:token>
                matching the given search interface. Each element in
                the array is OR'd.
            </xosid:description>
            <xosid:parameter xosid:name="catalogQueries">
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogQuery" xosid:array="true"/>
                <xosid:description>
                    the search query array
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogList"/>
                <xosid:description>
                    the returned <xosid:token>CatalogList</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogQueries</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    a <xosid:token>catalogQuery</xosid:token> is not of
                    this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogSearch">
            <xosid:description>
                Gets a catalog search interface. The returned query
                only makes available the core
                <xosid:token>CatalogSearch</xosid:token> interface and
                does not support additional interface types.
               
                <xosid:token>getCatalogSearchForInterfaceType()</xosid:token>
                should be used if additional interface types are
                required.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogSearch"/>
                <xosid:description>
                    the catalog search interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogsSearchOrder">
            <xosid:description>
                Gets a subject search order interface. The
                <xosid:token>CatalogSearchOrder</xosid:token> is
                supplied to a <xosid:token>CatalogSearch</xosid:token>
                to specify the ordering of results.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogSearchOrder"/>
                <xosid:description>
                    the catalog search order interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogsBySearch">
            <xosid:description>
                Gets the search results matching the given search
                interface. Each element in the array is OR'd.
            </xosid:description>
            <xosid:parameter xosid:name="catalogQueries">
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogQuery" xosid:array="true"/>
                <xosid:description>
                    the search query array
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="catalogSearch">
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogSearch"/>
                <xosid:description>
                    the search interface
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogSearchResults"/>
                <xosid:description>
                    the search results
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogQueries
                   </xosid:token>or <xosid:token>
                    catalogSearch</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    a <xosid:token>catalogQuery
                   </xosid:token>or <xosid:token>
                    catalogSearch</xosid:token> is not of this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogAdminSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session creates and removes catalogs. The data for
            create and update is provided by the consumer via the form
            object.
        </xosid:description>


        <xosid:method xosid:name="canCreateCatalogs">
            <xosid:description>
                Tests if this user can create
                <xosid:token>Catalogs.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known creating a
                <xosid:token>Catalog</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may not wish
                to offer create operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Catalog</xosid:token> creation is not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canCreateCatalogWithRecordTypes">
            <xosid:description>
                Tests if this user can create a single
                <xosid:token>Catalog </xosid:token>using the desired
                record interface types. While
                <xosid:token>CatalogingManager.getCatalogRecordTypes()</xosid:token>
                can be used to examine which record interfaces are
                supported, this method tests which record(s) are
                required for creating a specific
                <xosid:token>Catalog.</xosid:token> Providing an empty
                array tests if a <xosid:token>Catalog</xosid:token> can
                be created with no records.
            </xosid:description>
            <xosid:parameter xosid:name="catalogRecordTypes">
                <xosid:interfaceType xosid:type="osid.type.Type" xosid:array="true"/>
                <xosid:description>
                    array of types
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if
                    <xosid:token>Catalog</xosid:token> creation using
                    the specified record
                    <xosid:token>Types</xosid:token> is supported,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogRecordTypes</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogFormForCreate">
            <xosid:description>
                Gets the catalog form for creating new catalogs. A new
                form should be requested for each create transaction.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogForm"/>
                <xosid:description>
                    the catalog form
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="createCatalog">
            <xosid:description>
                Creates a new <xosid:token>Catalog.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="catalogForm">
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogForm"/>
                <xosid:description>
                    the forms for this
                    <xosid:token>Catalog</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.Catalog"/>
                <xosid:description>
                    the new <xosid:token>Catalog</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ALREADY_EXISTS" xosid:category="User">
                <xosid:description>
                    attempt at duplicating a property the underlying
                    system is enforcing to be unique
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    one or more of the form elements is invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogForm</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>catalogForm</xosid:token> is not of
                    this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canUpdateCatalogs">
            <xosid:description>
                Tests if this user can update
                <xosid:token>Catalogs.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known updating a
                <xosid:token>Catalog</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may not wish
                to offer update operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Catalog</xosid:token> modification is
                    not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canUpdateCatalog">
            <xosid:description>
                Tests if this user can update a specified
                <xosid:token>Catalog.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known updating the
                <xosid:token>Catalog</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may not wish
                to offer update operations to unauthorized users.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if catalog
                    modification is not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                If the <xosid:token>catalogId</xosid:token> is not
                found, then it is acceptable to return false to
                indicate the lack of an update available.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="getCatalogFormForUpdate">
            <xosid:description>
                Gets the catalog form for updating an existing catalog.
                A new catalog form should be requested for each update
                transaction.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogForm"/>
                <xosid:description>
                    the catalog form
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="updateCatalog">
            <xosid:description>
                Updates an existing catalog.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="catalogForm">
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogForm"/>
                <xosid:description>
                    the form containing the elements to be updated
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    the form contains an invalid value
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>catalogId </xosid:token>is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId
                   </xosid:token>or <xosid:token>
                    catalogForm</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>catalogForm</xosid:token> is not
                    supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canDeleteCatalogs">
            <xosid:description>
                Tests if this user can delete
                <xosid:token>Catalogs.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known deleting a
                <xosid:token>Catalog</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may not wish
                to offer delete operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Catalog</xosid:token> deletion is not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canDeleteCatalog">
            <xosid:description>
                Tests if this user can delete a specified
                <xosid:token>Catalog.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known deleting the
                <xosid:token>Catalog</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may not wish
                to offer delete operations to unauthorized users.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if deletion of
                    this <xosid:token>Catalog</xosid:token> is not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                If the <xosid:token>catalogId</xosid:token> is not
                found, then it is acceptable to return false to
                indicate the lack of an delete available.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="deleteCatalog">
            <xosid:description>
                Deletes a <xosid:token>Catalog.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token> to remove
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="addIdToCatalog">
            <xosid:description>
                Adds an <xosid:token>Id</xosid:token> to a
                <xosid:token>Catalog</xosid:token> for the purpose of
                creating compatibility. The primary
                <xosid:token>Id</xosid:token> of the
                <xosid:token>Catalog</xosid:token> is determined by
                the provider. The new <xosid:token>Id</xosid:token>
                performs as an alias to the primary
                <xosid:token>Id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of a
                    <xosid:token>Catalog</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="aliasId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the alias <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="ALREADY_EXISTS" xosid:category="User">
                <xosid:description>
                    <xosid:token>aliasId</xosid:token> is already
                    assigned
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> or
                    <xosid:token>aliasId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogNotificationSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session defines methods to receive notifications on
            adds/changes to <xosid:token>Catalog</xosid:token> objects.
            This session is intended for consumers needing to
            synchronize their state with this service without the use
            of polling. Notifications are cancelled when this session
            is closed.

            <xosid:pbreak/>

            Notifications are triggered with changes to the
            <xosid:token>Catalog</xosid:token> object itself. Adding
            and removing <xosid:token>Ids</xosid:token> result in
            notifications available from the notification session for
            catalog entries.
        </xosid:description>


        <xosid:method xosid:name="canRegisterForCatalogNotifications">
            <xosid:description>
                Tests if this user can register for
                <xosid:token>Catalog</xosid:token> notifications. A
                return of true does not guarantee successful
                authorization. A return of false indicates that it is
                known all methods in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer notification operations.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if notification
                    methods are not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForNewCatalogs">
            <xosid:description>
                Register for notifications of new catalogs.
               
                <xosid:token>CatalogReceiver.newCatalog()</xosid:token>
                is invoked when a new
                <xosid:token>Catalog</xosid:token> is created.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForNewCatalogAncestors">
            <xosid:description>
                Registers for notification of an updated hierarchy
                structure that introduces a new ancestor of the
                specified catalog.
                <xosid:token>CatalogReceiver.newAncestorCatalog()</xosid:token>
                is invoked when the specified catalog node gets a new
                ancestor.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token> node to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a catalog node was not found identified by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForNewCatalogDescendants">
            <xosid:description>
                Registers for notification of an updated hierarchy
                structure that introduces a new descendant of the
                specified catalog.
                <xosid:token>CatalogReceiver.newDescendantCatalog()</xosid:token>
                is invoked when the specified catalog node gets a new
                descendant.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token> node to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a catalog node was not found identified by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForChangedCatalogs">
            <xosid:description>
                Registers for notification of updated catalogs.
               
                <xosid:token>CatalogReceiver.changedCatalog()</xosid:token>
                is invoked when a catalog is changed.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForChangedCatalog">
            <xosid:description>
                Registers for notification of an updated catalog.
               
                <xosid:token>CatalogReceiver.changedCatalog()</xosid:token>
                is invoked when the specified catalog is changed.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token> to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a catalog was not found identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedCatalogs">
            <xosid:description>
                Registers for notification of deleted catalogs.
               
                <xosid:token>CatalogReceiver.deletedCatalog()</xosid:token>
                is invoked when a catalog is deleted.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedCatalog">
            <xosid:description>
                Registers for notification of a deleted catalog.
               
                <xosid:token>CatalogReceiver.deletedCatalog()</xosid:token>
                is invoked when the specified catalog is deleted.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token> to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a catalog was not found identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedCatalogAncestors">
            <xosid:description>
                Registers for notification of an updated hierarchy
                structure that removes an ancestor of the specified
                catalog.
                <xosid:token>CatalogReceiver.deletedAncestor()</xosid:token>
                is invoked when the specified catalog node loses an
                ancestor.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token> node to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a catalog node was not found identified by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedCatalogDescendants">
            <xosid:description>
                Registers for notification of an updated hierarchy
                structure that removes a descendant of the specified
                catalog.
                <xosid:token>CatalogReceiver.deletedDescendant()</xosid:token>
                is invoked when the specified catalog node loses a
                descendant.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token> node to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a catalog node was not found identified by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogHierarchySession"> 
        <xosid:implements xosid:interface="osid.hierarchy.HierarchyTraversalSession"/>
        <xosid:description>
            This session defines methods for traversing a hiercrhy of
            <xosid:token>Catalog</xosid:token> objects. Each node in
            the hierarchy is a unique
            <xosid:token>Catalog.</xosid:token> The hierarchy may be
            traversed recursively to establish the tree structure
            through <xosid:token>getParents()</xosid:token> and
            <xosid:token>getChildren().</xosid:token> To relate these
            <xosid:token>Ids</xosid:token> to another OSID,
            <xosid:token>getAncestors()</xosid:token> and
            <xosid:token>getDescendants()</xosid:token> can be used
            for retrievals that can be used for bulk lookups in other
            OSIDs. Any <xosid:token>Catalog</xosid:token> available in
            the Catalog OSID is known to this hierarchy but does not
            appear in the hierarchy traversal until added as a root
            node or a child of another node.

            <xosid:pbreak/>

            A user may not be authorized to traverse the entire
            hierarchy. Parts of the hierarchy may be made invisible
            through omission from the returns of
            <xosid:token>getParents()</xosid:token> or
            <xosid:token>getChildren()</xosid:token> in lieu of a
            <xosid:token>PERMISSION_DENIED</xosid:token> error that
            may disrupt the traversal through authorized pathways.

            <xosid:pbreak/>

            This session defines views that offer differing behaviors
            when retrieving multiple objects.

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    comparative view: catalog elements may be silently
                    omitted or re-ordered 
                </xosid:element>
                 <xosid:element>
                    plenary view: provides a complete set or is an
                    error condition
                </xosid:element>
            </xosid:outline>
             
        </xosid:description>


        <xosid:method xosid:name="useComparativeCatalogView">
            <xosid:description>
                The returns from the catalog methods may omit or
                translate elements based on this session, such as
                authorization, and not result in an error. This view is
                used when greater interoperability is desired at the
                expense of precision.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="usePlenaryCatalogView">
            <xosid:description>
                A complete view of the
                <xosid:token>Catalog</xosid:token> returns is desired.
                Methods will return what is requested or result in an
                error. This view is used when greater precision is
                desired at the expense of interoperability.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRootCatalogs">
            <xosid:description>
                Gets the root catalogs in the catalog hierarchy. A node
                with no parents is an orphan. While all catalog
                <xosid:token>Ids</xosid:token> are known to the
                hierarchy, an orphan does not appear in the hierarchy
                unless explicitly added as a root node or child of
                another node.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogList"/>
                <xosid:description>
                    the root catalogs
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParentCatalogs">
            <xosid:description>
                Gets the parent catalogs of the given
                <xosid:token>id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token> to query
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogList"/>
                <xosid:description>
                    the parent catalogs of the
                    <xosid:token>id</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a<xosid:token> Catalog</xosid:token> identified
                   by <xosid:token> Id is</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAncestorCatalogs">
            <xosid:description>
                Gets the ancestor catalogs of the given
                <xosid:token>id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token> to query
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="levels">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the maximum number of levels to include. A value of
                    1 returns the same set as
                    <xosid:token>getParentCatalogs(). </xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogList"/>
                <xosid:description>
                    the ancestor catalogs of the
                    <xosid:token>id</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a<xosid:token> Catalog</xosid:token> identified
                   by <xosid:token> Id is</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getChildCatalogs">
            <xosid:description>
                Gets the child catalogs of the given
                <xosid:token>id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token> to query
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogList"/>
                <xosid:description>
                    the child catalogs of the
                    <xosid:token>id</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a<xosid:token> Catalog</xosid:token> identified
                   by <xosid:token> Id is</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getDescendantCatalogs">
            <xosid:description>
                Gets the descendant catalogs of the given
                <xosid:token>id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token> to query
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="levels">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the maximum number of levels to include. A value of
                    1 returns the same set as
                    <xosid:token>getChildCatalogs(). </xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogList"/>
                <xosid:description>
                    the decsendant catalogs of the
                    <xosid:token>id</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a<xosid:token> Catalog</xosid:token> identified
                   by <xosid:token> Id is</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogHierarchyDesignSession"> 
        <xosid:implements xosid:interface="osid.hierarchy.HierarchyDesignSession"/>
        <xosid:description>
            This session manages a hierarchy of catalogs.
            <xosid:token>Catalogs</xosid:token> may be organized into
            a hierarchy for organizing or federating. A parent
            <xosid:token>Catalog</xosid:token> includes all of the Ids
            of its children such that a single root node contains all
            of the <xosid:token>Ids</xosid:token> of the federation.
        </xosid:description>

    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.Catalog"> 
        <xosid:implements xosid:interface="osid.OsidCatalog"/>
        <xosid:description>
            A <xosid:token>Catalog</xosid:token> represents a
            collection of entries. Like all OSID objects, a
            <xosid:token>Catalog</xosid:token> is identified by its
            <xosid:token>Id</xosid:token> and any persisted references
            should use the <xosid:token>Id.</xosid:token> 

            <xosid:pbreak/>

            <xosid:token>getCatalogRecord()</xosid:token> should be
            used to retrieve any record corresponding to arecord
            <xosid:token>Type.</xosid:token> The existence of the
            interface must not be assumed until requested at which
            point it is safe to cast into the interface indicated by
            the type.
        </xosid:description>


        <xosid:method xosid:name="getCatalogInterface">
            <xosid:description>
                Gets the record corresponding to the given
                <xosid:token>Catalog</xosid:token> record
                <xosid:token>Type. </xosid:token>This method must be
                used to retrieve an object implementing the requested
                record interface along with all of its ancestor
                interfaces. The
                <xosid:token>catalogRecordType</xosid:token> may be the
                <xosid:token>Type</xosid:token> returned in
                <xosid:token>getRecordTypes()</xosid:token> or any of
                its parents in a <xosid:token>Type</xosid:token>
                hierarchy where
                <xosid:token>hasRecordType(catalogRecordType)</xosid:token>
                is <xosid:token>true</xosid:token>.
            </xosid:description>
            <xosid:parameter xosid:name="catalogRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a type of the record to retrieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogRecord"/>
                <xosid:description>
                    the catalog record
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>hasInterfaceType(catalogRecordType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogRecord"> 
        <xosid:implements xosid:interface="osid.OsidRecord"/>
        <xosid:description>
            A record for a <xosid:token>Catalog.</xosid:token> The
            methods specified by the record type are available through
            the underlying object.
        </xosid:description>


        <xosid:method xosid:name="getCatalog">
            <xosid:description>
                Gets the <xosid:token>Catalog</xosid:token> from which
                this record originated.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.Catalog"/>
                <xosid:description>
                    the catalog
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogQuery"> 
        <xosid:implements xosid:interface="osid.OsidCatalogQuery"/>
        <xosid:description>
            This is the query interface for searching catalogs. Each
            method match request produces an
            <xosid:token>AND</xosid:token> term while multiple
            invocations of a method produces a nested
            <xosid:token>OR,</xosid:token> except for accessing the
            <xosid:token>CatalogQuery</xosid:token> record.
        </xosid:description>


        <xosid:method xosid:name="matchId">
            <xosid:description>
                Matches an <xosid:token>Id</xosid:token> in this
                catalog. Multiple Ids are treated as a boolean
                <xosid:token>OR.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="id">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    <xosid:token>Id</xosid:token> to match
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if for a positive
                    match, <xosid:token>false</xosid:token> for
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>id</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogQueryRecord">
            <xosid:description>
                Gets the record query interface corresponding to the
                given <xosid:token>Catalog</xosid:token> record
                <xosid:token>Type. </xosid:token>Multiple record
                retrievals of the same type may return the same
                underlying object and do not result in adding terms to
                the query. Multiple record retrievals of different
                types add <xosid:token>AND</xosid:token> terms to the
                other elements set in this query.
            </xosid:description>
            <xosid:parameter xosid:name="catalogRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a catalog record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogQueryRecord"/>
                <xosid:description>
                    the catalog query record
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>hasRecordType(catalogRecordType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogQueryRecord"> 
        <xosid:implements xosid:interface="osid.OsidRecord"/>
        <xosid:description>
            A record for a <xosid:token>CatalogQuery.</xosid:token> The
            methods specified by the record type are available through
            the underlying object.
        </xosid:description>


        <xosid:method xosid:name="getCatalogQuery">
            <xosid:description>
                Gets the <xosid:token>CatalogQuery</xosid:token> from
                which this record originated.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogQuery"/>
                <xosid:description>
                    the catalog query
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogForm"> 
        <xosid:implements xosid:interface="osid.OsidCatalogForm"/>
        <xosid:description>
            This is the form for creating and updating
            <xosid:token>Catalogs. </xosid:token>Like all
            <xosid:token>OsidForm</xosid:token> objects, various data
            elements may be set here for use in the create and update
            methods in the
            <xosid:token>CatalogAdminSession.</xosid:token> For each
            data element that may be set, metadata may be examined to
            provide display hints or data constraints.
        </xosid:description>


        <xosid:method xosid:name="getCatalogFormRecord">
            <xosid:description>
                Gets the <xosid:token>CatalogFormRecord</xosid:token>
                interface corresponding to the given catalog record
                interface <xosid:token>Type.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="catalogRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a catalog record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogFormRecord"/>
                <xosid:description>
                    the record
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>hasRecordType(catalogRecordType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogFormRecord"> 
        <xosid:implements xosid:interface="osid.OsidRecord"/>
        <xosid:description>
            A record for a <xosid:token>CatalogForm.</xosid:token> The
            methods specified by the record type are available through
            the underlying object.
        </xosid:description>


        <xosid:method xosid:name="getCatalogForm">
            <xosid:description>
                Gets the <xosid:token>CatalogForm</xosid:token> from
                which this record originated.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogForm"/>
                <xosid:description>
                    the catalog form
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogSearchOrder"> 
        <xosid:implements xosid:interface="osid.OsidSearchOrder"/>
        <xosid:description>
            An interface for specifying the ordering of search results.
        </xosid:description>


        <xosid:method xosid:name="getCatalogSearchOrderRecord">
            <xosid:description>
                Gets the catalog search order record corresponding to
                the given subject record <xosid:token>Type.
                </xosid:token>Multiple retrievals return the same
                underlying object.
            </xosid:description>
            <xosid:parameter xosid:name="catalogRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a catalog record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogSearchOrderRecord"/>
                <xosid:description>
                    the catalog search order record interface
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogRecordType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>hasRecordType(catalogRecordType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogSearchOrderRecord"> 
        <xosid:implements xosid:interface="osid.OsidRecord"/>
        <xosid:description>
            A record for a
            <xosid:token>CatalogSearchOrder.</xosid:token> The methods
            specified by the record type are available through the
            underlying object.
        </xosid:description>


        <xosid:method xosid:name="getCatalogSearchOrder">
            <xosid:description>
                Gets the <xosid:token>CatalogSearchOrder</xosid:token>
                from which this record originated.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogSearchOrder"/>
                <xosid:description>
                    the catalog search order
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogSearch"> 
        <xosid:implements xosid:interface="osid.OsidSearch"/>
        <xosid:description>
            The search interface for governing the search query for
            <xosid:token>Catalogs.</xosid:token>
        </xosid:description>


        <xosid:method xosid:name="searchWithinCatalogResults">
            <xosid:description>
                Execute this search using a previous search result.
            </xosid:description>
            <xosid:parameter xosid:name="results">
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogSearchResults"/>
                <xosid:description>
                    results from a query
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>results</xosid:token> is not valid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>results</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="searchAmongCatalogs">
            <xosid:description>
                Execute this search among the given list of catalogs.
            </xosid:description>
            <xosid:parameter xosid:name="catalogIds">
                <xosid:interfaceType xosid:type="osid.id.Id" xosid:array="true"/>
                <xosid:description>
                    list of catalogs
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogIds</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="orderCatalogResults">
            <xosid:description>
                Specify an ordering to the search results.
            </xosid:description>
            <xosid:parameter xosid:name="catalogSearchOrder">
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogSearchOrder"/>
                <xosid:description>
                    catalog search order
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogSearchOrder</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>catalogSearchOrder</xosid:token> is
                    not of this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogSearchRecord">
            <xosid:description>
                Gets the record corresponding to the given catalog
                search record <xosid:token>Type. </xosid:token>This
                method must be used to retrieve an object implementing
                the requested record interface along with all of its
                ancestor interfaces.
            </xosid:description>
            <xosid:parameter xosid:name="catalogSearchRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a catalog search record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogSearchRecord"/>
                <xosid:description>
                    the catalog search interface
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogSearchRecordType</xosid:token>
                    is <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>hasSearchRecordType(catalogSearchRecordType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogSearchRecord"> 
        <xosid:implements xosid:interface="osid.OsidSearchRecord"/>
        <xosid:description>
            A record for a <xosid:token>CatalogSearch.</xosid:token>
            The methods specified by the record type are available
            through the underlying object.
        </xosid:description>


        <xosid:method xosid:name="getCatalogSearch">
            <xosid:description>
                Gets the <xosid:token>CatalogSearch</xosid:token> from
                which this record originated.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogSearch"/>
                <xosid:description>
                    the catalog search
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogSearchResults"> 
        <xosid:implements xosid:interface="osid.OsidSearchResults"/>
        <xosid:description>
            This interface provides a means to capture results of a
            search and is used as a vehicle to perform a search within
            a previous result set.
        </xosid:description>


        <xosid:method xosid:name="getCatalogs">
            <xosid:description>
                Gets the catalog list resulting from the search.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogList"/>
                <xosid:description>
                    the catalogs list
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCatalogSearchResultsRecord">
            <xosid:description>
                Gets the record corresponding to the given catalog
                search record <xosid:token>Type. </xosid:token>This
                method must be used to retrieve an object implementing
                the requested record interface along with all of its
                ancestor interfaces.
            </xosid:description>
            <xosid:parameter xosid:name="catalogSearchRecordType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a catalog search record type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogSearchResultsRecord"/>
                <xosid:description>
                    the catalog search interface
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>catalogSearchRecordType</xosid:token>
                    is <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>hasSearchRecordType(catalogSearchRecordType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogSearchResultsRecord"> 
        <xosid:implements xosid:interface="osid.OsidSearchRecord"/>
        <xosid:description>
            A record for a
            <xosid:token>CatalogSearchResults.</xosid:token> The
            methods specified by the record type are available through
            the underlying object.
        </xosid:description>


        <xosid:method xosid:name="getCatalogSearchResults">
            <xosid:description>
                Gets the
                <xosid:token>CatalogSearchResults</xosid:token> from
                which this record originated.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.CatalogSearchResults"/>
                <xosid:description>
                    the catalog search results
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogReceiver"> 
        <xosid:implements xosid:interface="osid.OsidReceiver"/>
        <xosid:description>
            The catalog receiver is the consumer supplied interface for
            receiving notifications pertaining to new, updated or
            deleted <xosid:token>Catalog</xosid:token> objects.
        </xosid:description>


        <xosid:method xosid:name="newCatalog">
            <xosid:description>
                The callback for notifications of new catalogs.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the new
                    <xosid:token>Catalog</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="newAncestorCatalog">
            <xosid:description>
                The callback for notifications of new ancestors of a
                catalog.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registered
                    <xosid:token>Catalog</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="ancestorId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the new
                    ancestor catalog
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="newDescendantCatalog">
            <xosid:description>
                The callback for notifications of new descendant of a
                catalog.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registered
                    <xosid:token>Catalog</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="descendantId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the new
                    descendant catalog
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="changedCatalog">
            <xosid:description>
                The callback for notification of updated catalogs.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the updated
                    <xosid:token>Catalog</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="deletedCatalog">
            <xosid:description>
                the callback for notification of deleted catalogs.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the deleted
                    <xosid:token>Catalog</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="deletedAncestorCatalog">
            <xosid:description>
                The callback for notifications of deleted ancestors of
                a catalog.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registered
                    <xosid:token>Catalog</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="ancestorId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the removed
                    ancestor catalog
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="deletedDescendantCatalog">
            <xosid:description>
                The callback for notifications of deleted descendants
                of a catalog.
            </xosid:description>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registered
                    <xosid:token>Catalog</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="descendantId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the deleted
                    descendant catalog
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogList"> 
        <xosid:implements xosid:interface="osid.OsidList"/>
        <xosid:description>
            Like all <xosid:token>OsidLists,</xosid:token>
            <xosid:token>CatalogList</xosid:token> provides a means
            for accessing <xosid:token>Catalog</xosid:token> elements
            sequentially either one at a time or many at a time. Examples:

            <xosid:pbreak/>

<xosid:code>
<![CDATA[
while (cl.hasNext()) {
     Catalog catalog = al.getNextCatalog();
}

]]>
            </xosid:code>
            or
            <xosid:code>
<![CDATA[


while (cl.hasNext()) {
     Catalog[] catalogs = cl.getNextCatalogs(cl.available());
}]]>
            </xosid:code>
             
        </xosid:description>


        <xosid:method xosid:name="getNextCatalog">
            <xosid:description>
                Gets the next <xosid:token>Catalog</xosid:token> in
                this list.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.Catalog"/>
                <xosid:description>
                    the next <xosid:token>Catalog</xosid:token> in this
                    list. The <xosid:token>hasNext()</xosid:token>
                    method should be used to test that a next
                    <xosid:token>Catalog</xosid:token> is available
                    before calling this method.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getNextCatalogs">
            <xosid:description>
                Gets the next set of <xosid:token>Catalog</xosid:token>
                elements in this list which must be less than or equal
                to the number returned from
                <xosid:token>available().</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="n">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the number of <xosid:token>Catalog
                    </xosid:token>elements requested which should be
                    less than or equal to
                    <xosid:token>available()</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.cataloging.Catalog" xosid:array="true"/>
                <xosid:description>
                    an array of <xosid:token>Catalog
                   </xosid:token>elements. <xosid:token>
                    </xosid:token>The length of the array is less than
                    or equal to the number specified.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.cataloging.CatalogEntryReceiver"> 
        <xosid:implements xosid:interface="osid.OsidReceiver"/>
        <xosid:description>
            The catalog receiver is the consumer supplied interface for
            receiving notifications pertaining to new, updated or
            deleted <xosid:token>Ids</xosid:token> in
            <xosid:token>Catalogs.</xosid:token>
        </xosid:description>


        <xosid:method xosid:name="newCatalogEntry">
            <xosid:description>
                The callback for notifications of new catalogs entries.
            </xosid:description>
            <xosid:parameter xosid:name="registeredCatalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registered
                    <xosid:token>Catalog</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token> that triggered
                    this event. May be the same as the registered
                    catalog or one of its descendants.
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="entryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the new entry
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="deletedCatalogEntry">
            <xosid:description>
                the callback for notification of deleted catalog
                entries.
            </xosid:description>
            <xosid:parameter xosid:name="registeredCatalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registered
                    <xosid:token>Catalog</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="catalogId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Catalog</xosid:token> that triggered
                    this event. May be the same as the registered
                    catalog or one of its descendants.
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="entryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the deleted
                    entry
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>

</xosid:osid>
