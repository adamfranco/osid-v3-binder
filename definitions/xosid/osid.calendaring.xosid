<?xml version="1.0" encoding="iso-8859-1" standalone="no"?>

<!--
    XOSID for osid.calendaring generated at 10/14/2008 12:26:15 PM 

    Copyright (C) 2002-2008 Massachusetts Institute of Technology. All
    Rights Reserved.

    This Work is being provided by the copyright holder(s) subject to the
    following license. By obtaining, using and/or copying this Work, you
    agree that you have read, understand, and will comply with the following
    terms and conditions.

    This Work and the information contained herein is provided on an "AS IS"
    basis. The Massachusetts Institute of Technology, the Open Knowledge
    Initiative, and THE AUTHORS DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
    INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR
    A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
    OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER DEALINGS
    IN THE WORK.

    Permission to use, copy and distribute unmodified versions of this Work,
    for any purpose, without fee or royalty is hereby granted, provided that
    you include the above copyright notice and the terms of this license on
    ALL copies of the Work or portions thereof. 

    You may nodify or create Derivatives of this Work only for your internal
    purposes. You shall not distribute or transfer any such Derivative of
    this Work to any location or to any third party. For the purposes of
    this license, Derivative shall mean any derivative of the Work as
    defined in the United States Copyright Act of 1976, such as a
    translation or modification.

    The export of software employing encryption technology may require a
    specific license from the United States Government. It is the
    responsibility of any person or organization comtemplating export to
    obtain such a license before exporting this Work.
-->

<xosid:osid xmlns:xosid="urn:inet:osid.org:schemas/osid/3" xosid:name="osid.calendaring" xosid:version="3.0.0">

    <xosid:title>
        Calendaring Open Service Interface Definitions
    </xosid:title>

    <xosid:copyright>
        Copyright <xosid:copyrightSymbol/>2002-2008 Massachusetts
        Institute of Technology. All Rights Reserved.
    </xosid:copyright>

    <xosid:license>
        This Work is being provided by the copyright holder(s) subject
        to the following license. By obtaining, using and/or copying
        this Work, you agree that you have read, understand, and will
        comply with the following terms and conditions.

        <xosid:pbreak/>

        This Work and the information contained herein is provided on
        an "AS IS" basis. The Massachusetts Institute of Technology,
        the Open Knowledge Initiative, and THE AUTHORS DISCLAIM ALL
        WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
        WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
        AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
        HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
        WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
        FROM, OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER
        DEALINGS IN THE WORK.

        <xosid:pbreak/>

        Permission to use, copy and distribute unmodified versions of
        this Work, for any purpose, without fee or royalty is hereby
        granted, provided that you include the above copyright notice
        and the terms of this license on ALL copies of the Work or
        portions thereof. 

        <xosid:pbreak/>

        You may nodify or create Derivatives of this Work only for your
        internal purposes. You shall not distribute or transfer any
        such Derivative of this Work to any location or to any third
        party. For the purposes of this license, Derivative shall mean
        any derivative of the Work as defined in the United States
        Copyright Act of 1976, such as a translation or modification.

        <xosid:pbreak/>

        The export of software employing encryption technology may
        require a specific license from the United States Government.
        It is the responsibility of any person or organization
        comtemplating export to obtain such a license before exporting
        this Work.
    </xosid:license>

    <xosid:description>
         
    </xosid:description>


    <xosid:interface xosid:name="osid.calendaring.DateTime"> 
        <xosid:implements xosid:interface=""/>
        <xosid:description>
            The<xosid:token> DateTime </xosid:token>interface defines a
            date and/or time. This interface provides a very broad
            range of dates, describes more or less precision, and/or
            conveys an uncertainty. A number of convenience methods for
            retrieving time elements are available but only those
            methods covered by the specified granularity are valid.

            <xosid:pbreak/>

            A typical example is describing a day where the time isn't
            known, and the event did not occur at midnight.

            <xosid:pbreak/>

<xosid:code>
<![CDATA[
getMillenium() == 2]]>
            </xosid:code>
             
            <xosid:pbreak/>

<xosid:code>
<![CDATA[
getCentury() == 18
getYear() == 1776
getMonth() == 7
getDay() == 4
getHour() == 0
getGranularity() == DateTimeResolution.DAY
definesUncertainty() == false]]>
            </xosid:code>
             
             

            <xosid:pbreak/>

            Another example showing that the time is probably 1pm but
            could have been as late as 3pm or early asnoon..
            <xosid:code>
<![CDATA[


getMillenium() == 3
getCentury() == 21
getYear() == 2008
getMonth() == 3
getDay() == 17
getHour() == 13
getMinute() == 0
getGranularity() == TimeResolution.MINUTE
definesUncertainty() == true
getUncertaintyGranularity() == DateTimeResolution.HOUR
getUncertaintyMinus() == 1
getUncertaintyPlus == 2
]]>
            </xosid:code>
             
            <xosid:pbreak/>

            An example marking the birth of the universe. 13.73 billion
            years +/- 120 million years. The granularity suggests that
            no more resolution than one million years can be inferred
            from the "clock", making errors in the exact number of
            millennia insignificant.

            <xosid:pbreak/>

<xosid:code>
<![CDATA[
getEpoch() == -13,730
getMillenium() == 0]]>
            </xosid:code>
             
            <xosid:pbreak/>

<xosid:code>
<![CDATA[
getCentury() == 0
getYear() == 0
getGranularity() == TimeResolution.EPOCH
definesUncertainty() == true
getUncertaintyGranularity() == DateTimeResolution.EPOCH
getUncertaintyMinus() == 120
getUncertaintyPlus == 120]]>
            </xosid:code>
             
            <xosid:pbreak/>

             
        </xosid:description>


        <xosid:method xosid:name="getAeon">
            <xosid:description>
                Gets the aeon starting from 1. 1B years.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="integer"/>
                <xosid:description>
                    the aeon
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getEpoch">
            <xosid:description>
                Gets the epoch starting from 1.An epoch is 1M years.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="integer"/>
                <xosid:description>
                    the millenium
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getMillenium">
            <xosid:description>
                Gets the millenium starting from 1. A millenium is
                1,000 years.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="integer"/>
                <xosid:description>
                    the millenium
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getCentury">
            <xosid:description>
                Gets the century starting from 1.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="integer"/>
                <xosid:description>
                    the century
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getYear">
            <xosid:description>
                Gets the year starting from 1.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="integer"/>
                <xosid:description>
                    the year
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getMonth">
            <xosid:description>
                Gets the month number starting from 1.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the month
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getDay">
            <xosid:description>
                Gets the day of the month starting from 1.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the day of the month
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getHour">
            <xosid:description>
                Gets the hour of the day 0-23.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the hour of the day
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getMinute">
            <xosid:description>
                Gets the minute of the hour 0-59.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the minute of the hour
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getSecond">
            <xosid:description>
                Gets the second of the minute 0-59.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the second of the minute
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getMilliseconds">
            <xosid:description>
                Gets the number of milliseconds in this second 0-999. A
                millisecond is one thousandth of a second.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the milliseconds of the second
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getMicroseconds">
            <xosid:description>
                Gets the number of microseconds of the second 0-999. A
                microsecond is one millionth of a second.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the micrseconds of the millisecond
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getNanoseconds">
            <xosid:description>
                Gets the number of nanoseconds of the microsecond
                0-999. A nanosecond is one billionth of a second.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the nanoseconds of the microsecond
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getPicoseconds">
            <xosid:description>
                Gets the number of picoseconds of the nanosecond 0-999.
                A picosecond is one trillionth of a second.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the picoseconds of the nanosecond
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getFemtoseconds">
            <xosid:description>
                Gets the number of femtoseconds of the picosecond
                0-999. A femtosecond is one quadrillionth of a second.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the femtoseconds of the picosecond
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAttoseconds">
            <xosid:description>
                Gets the number of attoseconds of the femtoseconds
                0-999. An attosecond is one quintillionth of a second.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the attoseconds of the femtosecond
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getZeptoseconds">
            <xosid:description>
                Gets the number of zeptoseconds of the attosecond
                0-999. A zeptosecond is one sextillionth of a second.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the zeptoseconds of the attosecond
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getYoctoseconds">
            <xosid:description>
                Gets the number of yoctoseconds of the picosecond
                0-999. A yoctosecond is one septillionth of a second.
                This is getting quite small.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the yoctoseconds of the yoctosecond
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getXoxxoseconds">
            <xosid:description>
                Gets the number of xoxxoseconds of the yoctosecond
                0-999. A xoxxosecond is one octillionth of a second.
                We're going with Rudy Rucker here.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the xoxxoseconds of the yoctosecond
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getWeebleseconds">
            <xosid:description>
                Gets the number of weebleseconds of the xoxxosecond
                0-999. A weeblesecond is one nonillionth of a second.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the weebleseconds of the xoxxoseconds
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getVatoseconds">
            <xosid:description>
                Gets the number of vatoseconds of the xoxxosecond
                0-999. A vatosecond is one decillionth of a second.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the vatoseconds of the weeblesecond
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getUndaseconds">
            <xosid:description>
                Gets the number of undaseconds of the vatosecond 0-999.
                An undasecond is one unadecillionth of a second.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the undaseconds of the vatosecond
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getPlanckSeconds">
            <xosid:description>
                Gets the number of Plancks of the vatoseconds. A Planck
                is 10 quattuordecillionths of a second.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="float"/>
                <xosid:description>
                    the plancks of the undasecond
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getGranularity">
            <xosid:description>
                Gets the granularity of this time. The granularity
                indicates the resolution of the clock. More precision
                that what is specified in this method cannot be
                inferred from the available data.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.calendaring.DateTimeResolution"/>
                <xosid:description>
                     granularity
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="definesUncertainty">
            <xosid:description>
                Tests if uncertainty is defined for this time.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if uncertainty is
                    defined, <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getUncertaintyUnits">
            <xosid:description>
                Gets the units of the uncertainty.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.calendaring.DateTimeResolution"/>
                <xosid:description>
                    units of the uncertainty
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>definesUncertainty()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getUncertaintyMinus">
            <xosid:description>
                Gets the uncertainty of this time in the negative
                direction.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the uncertainty under this value
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>definesUncertainty()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getUncertaintyPlus">
            <xosid:description>
                Gets the uncertainty of this time in the positive
                direction.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the uncertainty over this value
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>definesUncertainty()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="isGreater">
            <xosid:description>
                Tests if the given time is greater than this one. A
                time is greater if its time inclusive of granularity
                minus uncertainty is greater than the other inclusive
                of its granularity plus its uncertainty.
            </xosid:description>
            <xosid:parameter xosid:name="time">
                <xosid:interfaceType xosid:type="osid.calendaring.DateTime"/>
                <xosid:description>
                    the time to compare
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given time
                    is greater than this one,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>time</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="isLess">
            <xosid:description>
                Tests if the given time is less than this one. A time
                is greater if its time inclusive of granularity plus
                uncertainty is less than the other inclusive of its
                granularity minus its uncertainty.
            </xosid:description>
            <xosid:parameter xosid:name="time">
                <xosid:interfaceType xosid:type="osid.calendaring.DateTime"/>
                <xosid:description>
                    the time to compare
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given time
                    is less than this one,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>time</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="isInclusive">
            <xosid:description>
                Tests if the given time is included in this one. A time
                is inclusive of this time and granularity plus and
                minus its uncertainty is completely contained within
                this one inclusive of its granulariity and uncertainty.
            </xosid:description>
            <xosid:parameter xosid:name="time">
                <xosid:interfaceType xosid:type="osid.calendaring.DateTime"/>
                <xosid:description>
                    the time to compare
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given time
                    is included in this one,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>time</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="isExclusive">
            <xosid:description>
                Tests if the given time is exclusive in this one. A
                time is exclsuive of this time if there is no overlap
                taking into account granularity and uncertainty.
            </xosid:description>
            <xosid:parameter xosid:name="time">
                <xosid:interfaceType xosid:type="osid.calendaring.DateTime"/>
                <xosid:description>
                    the time to compare
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given time
                    is exclsuive of this one,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>time</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="isEqual">
            <xosid:description>
                Tests if the given time is equal to this one. A time is
                equal if the data, granularity and uncertainty are
                equal.
            </xosid:description>
            <xosid:parameter xosid:name="time">
                <xosid:interfaceType xosid:type="osid.calendaring.DateTime"/>
                <xosid:description>
                    the time to compare
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given time
                    is equal to this one,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>time</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:enumeration xosid:name="osid.calendaring.DateTimeResolution"> 
        <xosid:description>
            This enumeration contains the possible date/time
            resolutions.
        </xosid:description>

        <xosid:item xosid:name="PLANCKSECOND">
            <xosid:description>
                ten quattuordecillionth second resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="UNDASECOND">
            <xosid:description>
                one unadecillionth second resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="VATOSECOND">
            <xosid:description>
                one decillionth second resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="WEEBLESECOND">
            <xosid:description>
                one nonillionth second resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="XOXXOSECOND">
            <xosid:description>
                one octillionth second resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="YOCTOSECOND">
            <xosid:description>
                one septllionth second resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="ZEPTOSECOND">
            <xosid:description>
                one sextillionth second second resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="ATTOSECOND">
            <xosid:description>
                one quintillionth second resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="FEMTOSECOND">
            <xosid:description>
                one quadrillionth second resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="PICOSECOND">
            <xosid:description>
                one trillionth second resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="NANOSECOND">
            <xosid:description>
                one billionth second resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="MICROSECOND">
            <xosid:description>
                one millionth second resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="MILLISECOND">
            <xosid:description>
                one thousandth second resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="SECOND">
            <xosid:description>
                second resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="MINUTE">
            <xosid:description>
                minute resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="QUARTER_HOUR">
            <xosid:description>
                15 minute resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="HALF_HOUR">
            <xosid:description>
                30 minute resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="HOUR">
            <xosid:description>
                hour resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="DAY">
            <xosid:description>
                day resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="WEEK">
            <xosid:description>
                week resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="MONTH">
            <xosid:description>
                month resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="QUARTER">
            <xosid:description>
                quarter resolution (jan-mar, apr-jun, jul-sep, oct-dec)
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="SEASON">
            <xosid:description>
                season resolution (spring, winter, summer, fall)
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="YEAR">
            <xosid:description>
                yearly resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="BLUEMOON">
            <xosid:description>
                once in a blue moon
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="DECADE">
            <xosid:description>
                decade resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="CENTURY">
            <xosid:description>
                century resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="MILLENNIA">
            <xosid:description>
                millenium resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="GLACIAL">
            <xosid:description>
                100K years resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="EPOCH">
            <xosid:description>
                1M years resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="AEON">
            <xosid:description>
                1B years resolution
            </xosid:description>
        </xosid:item>

        <xosid:item xosid:name="INFINITY">
            <xosid:description>
                clock is invalid
            </xosid:description>
        </xosid:item>
    </xosid:enumeration>


    <xosid:interface xosid:name="osid.calendaring.DateTimeList"> 
        <xosid:implements xosid:interface="osid.OsidList"/>
        <xosid:description>
            Like all <xosid:token>OsidLists,</xosid:token>
           Date <xosid:token>TimeList</xosid:token> provides a means
            for accessing Date<xosid:token>Time</xosid:token> elements
            sequentially either one at a time or many at a time. Examples:

            <xosid:pbreak/>

<xosid:code>
<![CDATA[
while (dtl.hasNext()) {
     DateTime dt = dtl.getNextDateTime();
}

]]>
            </xosid:code>
            or
            <xosid:code>
<![CDATA[


while dtl.hasNext()) {
     DateTime[] dts =dtl.getNextDateTimes(dtl.available());
}]]>
            </xosid:code>
             
        </xosid:description>


        <xosid:method xosid:name="getNextTime">
            <xosid:description>
                Gets the next <xosid:token>DateTime</xosid:token> in
                this list.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.calendaring.DateTime"/>
                <xosid:description>
                    the next <xosid:token>DateTime</xosid:token> in
                    this list. The <xosid:token>hasNext()</xosid:token>
                    method should be used to test that a next
                    <xosid:token>Time</xosid:token> is available
                    before calling this method.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getNextTimes">
            <xosid:description>
                Gets the next set of
                <xosid:token>DateTime</xosid:token> elements in this
                list which must be less than or equal to the number
                returned from <xosid:token>available().</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="n">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the number of <xosid:token>DateTime
                    </xosid:token>elements requested which should be
                    less than or equal to
                    <xosid:token>available()</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.calendaring.DateTime" xosid:array="true"/>
                <xosid:description>
                    an array of <xosid:token>DateTime
                   </xosid:token>elements. <xosid:token>
                    </xosid:token>The length of the array is less than
                    or equal to the number specified.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.calendaring.DateTimeInterval"> 
        <xosid:implements xosid:interface=""/>
        <xosid:description>
            The<xosid:token> DateTimeInterval </xosid:token>interface
            defines an i_terval betwee_ two date times.
        </xosid:description>


        <xosid:method xosid:name="getStart">
            <xosid:description>
                Gets the starting time for this interval.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.calendaring.DateTime"/>
                <xosid:description>
                    the starting time
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getEnd">
            <xosid:description>
                Gets the ending time for this interval. The ending time
                is greater than or equal to the starting time.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.calendaring.DateTime"/>
                <xosid:description>
                    the ending time
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="isInclusive">
            <xosid:description>
                Tests if the given time interval is included in this
                one. A time interval is inclusive of this time interval
                if the start end end times of the given interval are
                completely contained in this one.
            </xosid:description>
            <xosid:parameter xosid:name="interval">
                <xosid:interfaceType xosid:type="osid.calendaring.DateTimeInterval"/>
                <xosid:description>
                    the interval to compare
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given time
                    interval is included in this one,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>interval</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="isExclusive">
            <xosid:description>
                Tests if the given time interval is exclusive in this
                one. A time is exclsuive of this time interval if there
                is no overlap between the start end end times.
            </xosid:description>
            <xosid:parameter xosid:name="interval">
                <xosid:interfaceType xosid:type="osid.calendaring.DateTimeInterval"/>
                <xosid:description>
                    the interval to compare
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given time
                    is exclsuive of this one,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>interval</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="isEqual">
            <xosid:description>
                Tests if the given time interval is equal to this one.
                A time interfaval is equal if the start and end times
                are also equal.
            </xosid:description>
            <xosid:parameter xosid:name="interval">
                <xosid:interfaceType xosid:type="osid.calendaring.DateTimeInterval"/>
                <xosid:description>
                    the interval to compare
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given time
                    interval is equal to this one,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>interval</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="isTimeInclusive">
            <xosid:description>
                Tests if the given time is included in this time
                interval. A time is inclusive of this time interval if
                the start time and its granularity and uncertainty are
                completely contained in this interval.
            </xosid:description>
            <xosid:parameter xosid:name="time">
                <xosid:interfaceType xosid:type="osid.calendaring.DateTime"/>
                <xosid:description>
                    the date time to compare
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given time
                    is included in this interval,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>time</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="isTimeExclusive">
            <xosid:description>
                Tests if the given time is exclusive in this time
                interval. A time is exclusive of this time interval if
                the start time and its granularity and uncertainty are
                completely outside this interval.
            </xosid:description>
            <xosid:parameter xosid:name="time">
                <xosid:interfaceType xosid:type="osid.calendaring.DateTime"/>
                <xosid:description>
                    the date time to compare
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given time
                    is exclsuive of this one,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>time</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.calendaring.DateTimeIntervalList"> 
        <xosid:implements xosid:interface="osid.OsidList"/>
        <xosid:description>
            Like all <xosid:token>OsidLists,</xosid:token>
            <xosid:token>DateTimeIntervalList</xosid:token> provides a
            means for accessing
            <xosid:token>DateTimeInterval</xosid:token> elements
            sequentially either one at a time or many at a time. Examples:

            <xosid:pbreak/>

<xosid:code>
<![CDATA[
while (til.hasNext()) {
     TimeInterval ti = til.getNextTimeInterval();
}

]]>
            </xosid:code>
            or
            <xosid:code>
<![CDATA[


while (til.hasNext()) {
     TimeInterval[] tis = til.getNextTimeIntervals(til.available());
}]]>
            </xosid:code>
             
        </xosid:description>


        <xosid:method xosid:name="getNextDateTimeInterval">
            <xosid:description>
                Gets the next
                <xosid:token>DateTimeInterval</xosid:token> in this
                list.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.calendaring.DateTimeInterval"/>
                <xosid:description>
                    the next
                    <xosid:token>DateTimeInterval</xosid:token> in this
                    list. The <xosid:token>hasNext()</xosid:token>
                    method should be used to test that a next
                    <xosid:token>DateTimeInterval</xosid:token> is
                    available before calling this method.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getNextDateTimeIntervals">
            <xosid:description>
                Gets the next set of
                <xosid:token>DateTimeInterval</xosid:token> elements in
                this list which must be less than or equal to the
                number returned from
                <xosid:token>available().</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="n">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the number of <xosid:token>DateTimeInterval
                    </xosid:token>elements requested which should be
                    less than or equal to
                    <xosid:token>available()</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.calendaring.DateTimeInterval" xosid:array="true"/>
                <xosid:description>
                    an array of <xosid:token>DateimeInterval
                   </xosid:token>elements. <xosid:token>
                    </xosid:token>The length of the array is less than
                    or equal to the number specified.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>

</xosid:osid>
