<?xml version="1.0" encoding="iso-8859-1" standalone="no"?>

<!--
    XOSID for osid.configuration generated at 7/16/2008 8:17:38 AM 

    Copyright (C) 2008 Massachusetts Institute of Technology. All Rights
    Reserved.

    This Work is being provided by the copyright holder(s) subject to the
    following license. By obtaining, using and/or copying this Work, you
    agree that you have read, understand, and will comply with the following
    terms and conditions.

    This Work and the information contained herein is provided on an ""AS
    IS"" basis. The Massachusetts Institute of Technology, the Open
    Knowledge Initiative, and THE AUTHORS DISCLAIM ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
    OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
    ARISING FROM, OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER
    DEALINGS IN THE WORK.

    Permission to use, copy and distribute unmodified versions of this Work,
    for any purpose, without fee or royalty is hereby granted, provided that
    you include the above copyright notice and the terms of this license on
    ALL copies of the Work or portions thereof. 

    You may nodify or create Derivatives of this Work only for your internal
    purposes. You shall not distribute or transfer any such Derivative of
    this Work to any location or to any third party. For the purposes of
    this license, Derivative shall mean any derivative of the Work as
    defined in the United States Copyright Act of 1976, such as a
    translation or modification.

    The export of software employing encryption technology may require a
    specific license from the United States Government. It is the
    responsibility of any person or organization comtemplating export to
    obtain such a license before exporting this Work.
-->

<xosid:osid xmlns:xosid="urn:inet:osid.org:schemas/osid/3" xosid:name="osid.configuration" xosid:version="3.0.0">

    <xosid:title>
        Configuration Open Service Interface Definitions
    </xosid:title>

    <xosid:copyright>
        Copyright <xosid:copyrightSymbol/>2008 Massachusetts Institute
        of Technology. All Rights Reserved.
    </xosid:copyright>

    <xosid:license>
        This Work is being provided by the copyright holder(s) subject
        to the following license. By obtaining, using and/or copying
        this Work, you agree that you have read, understand, and will
        comply with the following terms and conditions.

        <xosid:pbreak/>

        This Work and the information contained herein is provided on
        an ""AS IS"" basis. The Massachusetts Institute of Technology,
        the Open Knowledge Initiative, and THE AUTHORS DISCLAIM ALL
        WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
        WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
        AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
        HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
        WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
        FROM, OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER
        DEALINGS IN THE WORK.

        <xosid:pbreak/>

        Permission to use, copy and distribute unmodified versions of
        this Work, for any purpose, without fee or royalty is hereby
        granted, provided that you include the above copyright notice
        and the terms of this license on ALL copies of the Work or
        portions thereof. 

        <xosid:pbreak/>

        You may nodify or create Derivatives of this Work only for your
        internal purposes. You shall not distribute or transfer any
        such Derivative of this Work to any location or to any third
        party. For the purposes of this license, Derivative shall mean
        any derivative of the Work as defined in the United States
        Copyright Act of 1976, such as a translation or modification.

        <xosid:pbreak/>

        The export of software employing encryption technology may
        require a specific license from the United States Government.
        It is the responsibility of any person or organization
        comtemplating export to obtain such a license before exporting
        this Work.
    </xosid:license>

    <xosid:description>
        The Configuration OSID defines a set of interfaces for
        configuration retrieval and management. The Configuration
        service may be used to store user profiles or as a means to
        assist OSID implementors modularize configuration data.

        <xosid:pbreak/>

        Configuration data is expressed through a set of
        <xosid:token>Parameters and Values.</xosid:token> A
        <xosid:token>Parameter</xosid:token> is an
        <xosid:token>OsidObject</xosid:token> with a unique
        <xosid:token>Id</xosid:token> and a syntax that indicates a
        primitive type. A <xosid:token>Parameter</xosid:token> may map
        to zero or more Values of the same syntax. An applicatioin
        requesting a configuration looks up
        <xosid:token>Values</xosid:token> given a
        <xosid:token>Parameter</xosid:token>
        <xosid:token>Id</xosid:token> through a
        <xosid:token>ValueLookupSession. </xosid:token>
        <xosid:token>Parameters</xosid:token> map to a parameter
        <xosid:token>Registry.</xosid:token> A
        <xosid:token>Registry</xosid:token> centralizes the storage and
        maintenance of parameter definitions.
        <xosid:token>Registry</xosid:token> objects may be structured
        in a hierarchy for organization.

        <xosid:pbreak/>

        To create a configuration for an application, a
        <xosid:token>Configuration</xosid:token> object is created.
        The <xosid:token>Configuration</xosid:token> maps a set of
        <xosid:token>Parameters</xosid:token> and their
        <xosid:token>Values.</xosid:token> A
        <xosid:token>Configuration</xosid:token> may be positioned as a
        child of another <xosid:token>Configuration</xosid:token> to
        inherit its <xosid:token>Parameters</xosid:token> and
        <xosid:token>Values.</xosid:token>
        <xosid:token>Parameters</xosid:token> are then retrieved from a
        <xosid:token>Registry.</xosid:token> While it is not a
        requirement that a <xosid:token>Registry,</xosid:token> which
        only defines the <xosid:token>Parameter,</xosid:token> maps to
        a <xosid:token>Configuration</xosid:token> but this may be a
        useful convention. The desired
        <xosid:token>Parameters</xosid:token> are then mapped to the
        <xosid:token>Configuration</xosid:token> and
        <xosid:token>Values</xosid:token> assigned.

        <xosid:pbreak/>

        OSID implementations should get their configurations via the
        <xosid:token>OsidRuntimeManager.</xosid:token>
        Example to get a configuration:
        <xosid:code>


Id parameterId = what I'm looking for;

ValueLookupSession valueSession = mgr.getValueLookupSession();
valueSession.federateParameterView();

if (valueSession.parameterExists(parameterId)) {
    Parameter param = valueSession.getParameter(parameterId);
    ValueList values = valueSession.getValues(param.getId());
    while (values.hasNext()) {
        Value value = values.getNextValue();
        if (param.getSyntax() == Primitive.STRING)
            print value.getString();
        else 
            print "unexpected syntax";
    }
}
        </xosid:code>
         
        
    </xosid:description>


    <xosid:interface xosid:name="osid.configuration.ConfigurationProfile"> 
        <xosid:implements xosid:interface="osid.OsidProfile"/>
        <xosid:description>
            The <xosid:token>ConfigurationProfile</xosid:token>
            describes the profile of the configuration service.
        </xosid:description>


        <xosid:method xosid:name="supportsVisibleFederation">
            <xosid:description>
                Tests if federation is visible for this service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if visible
                    federation is supported,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsValueLookup">
            <xosid:description>
                Tests for the availability of a configuration value
                lookup service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if value lookup is
                    available, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsValueSearch">
            <xosid:description>
                Tests for the availability of a configuration value
                search service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if value search is
                    available, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsValueAdmin">
            <xosid:description>
                Tests for the availability of a configuration value
                administration service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if value
                    administration is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsValueNotification">
            <xosid:description>
                Tests for the availability of a configuration value
                notification service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if value
                    notification is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsParameterLookup">
            <xosid:description>
                Tests for the availability of a parameter lookup
                service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if parameter lookup
                    is available, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsParameterSearch">
            <xosid:description>
                Tests for the availability of a parameter search
                service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if parameter search
                    is available, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsParameterAdmin">
            <xosid:description>
                Tests for the availability of a parameter update
                service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if parameter update
                    is available, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented in all providers.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsParameterNotification">
            <xosid:description>
                Tests for the availability of a parameter notification
                service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if parameter
                    notification is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsParameterRegistry">
            <xosid:description>
                Tests for the availability of a service to lookup
                mappings of parameters to registries.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if parameter
                    registry is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsParameterRegistryAssignment">
            <xosid:description>
                Tests for the availability of a service to map
                parameters to registries.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if parameter
                    registry mapping is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsParameterConfiguration">
            <xosid:description>
                Tests for the availability of a service to lookup
                mappings of parameters to configurations.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if parameter
                    configuration is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented in all providers.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsParameterConfigurationAssignment">
            <xosid:description>
                Tests for the availability of a service to map
                parameters to configurations.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if parameter
                    configuration assignment is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented in all providers.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsConfigurationLookup">
            <xosid:description>
                Tests for the availability of a configuration lookup
                service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if configuration
                    lookup is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsConfigurationSearch">
            <xosid:description>
                Tests for the availability of a configuration search
                service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if configuration
                    search is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsConfigurationAdmin">
            <xosid:description>
                Tests for the availability of a configuration admin
                service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if configuration
                    admin is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsConfigurationNotification">
            <xosid:description>
                Tests for the availability of a notification service
                for subscribing to changes to configurations.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a configuration
                    notification service is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsConfigurationHierarchy">
            <xosid:description>
                Tests for the availability of a configuration hierarchy
                traversal service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a configuration
                    hierarchy traversal is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsConfigurationHierarchyDesign">
            <xosid:description>
                Tests for the availability of a configuration hierarchy
                design service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a configuration
                    hierarchy design is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsRegistryLookup">
            <xosid:description>
                Tests for the availability of a registry lookup
                service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if registry lookup
                    is available,<xosid:token> false
                    </xosid:token>otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsRegistrySearch">
            <xosid:description>
                Tests for the availability of a registry search
                service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if registry search
                    is available,<xosid:token> false
                    </xosid:token>otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsRegistryAdmin">
            <xosid:description>
                Tests for the availability of a registry admin service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if registry admin
                    is available, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsRegistryNotification">
            <xosid:description>
                Tests for the availability of a notification service
                for subscribing to changes to registries.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a registry
                    notification service is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsRegistryHierarchy">
            <xosid:description>
                Tests for the availability of a registry hierarchy
                traversal service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a registry
                    hierarchy traversal is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsRegistryHierarchyDesign">
            <xosid:description>
                Tests for the availability of a registry hierarchy
                design service.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a registry
                    hierarchy design is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueSearchInterfaceTypes">
            <xosid:description>
                Gets all the value search interface types supported.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    the list of supported value search types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsValueSearchInterfaceType">
            <xosid:description>
                Tests if a given value search interface type is
                supported.
            </xosid:description>
            <xosid:parameter xosid:name="valueSearchInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the value search interface type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the value search
                    interface type is
                    supported<xosid:token>,</xosid:token>
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterSearchTypes">
            <xosid:description>
                Gets all the parameter search interface types
                supported.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    the list of supported parameter search interface
                    types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsParameterSearchInterfaceType">
            <xosid:description>
                Tests if a given parameter search interface type is
                supported.
            </xosid:description>
            <xosid:parameter xosid:name="parameterSearchInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the value search type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the parameter
                    search interface type is
                   supported <xosid:token>,</xosid:token>
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationInterfaceTypes">
            <xosid:description>
                Gets all the configuration interface types supported.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    the list of supported configuration interface types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsConfigurationInterfaceType">
            <xosid:description>
                Tests if a given configuration interface type is
                supported.
            </xosid:description>
            <xosid:parameter xosid:name="configurationInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a configuration interface type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the
                    configuration interface type is
                   supported <xosid:token>,</xosid:token>
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationSearchInterfaceTypes">
            <xosid:description>
                Gets all the configuration search interface types
                supported.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    the list of supported configuration search
                    interface types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsConfigurationSearchInterfaceType">
            <xosid:description>
                Tests if a given configuration search interface type is
                supported.
            </xosid:description>
            <xosid:parameter xosid:name="configurationSearchInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the configuration search interface type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the
                    configuration search interface type is
                   supported <xosid:token>,</xosid:token>
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistryInterfaceTypes">
            <xosid:description>
                Gets all the registry interface types supported.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    the list of supported registry interface types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsRegistryInterfaceType">
            <xosid:description>
                Tests if a given regustry interface type is supported.
            </xosid:description>
            <xosid:parameter xosid:name="registryInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a registry interface type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the registry
                    interface type is
                    supported<xosid:token>,</xosid:token>
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistrySearchInterfaceTypes">
            <xosid:description>
                Gets all the registry search interface types supported.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    the list of supported registry search interface
                    types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsRegistrySearchInterfaceType">
            <xosid:description>
                Tests if a given registry search interface type is
                supported.
            </xosid:description>
            <xosid:parameter xosid:name="registrySearchInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the registry search interface type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the registry
                    search interface type is
                   supported <xosid:token>,</xosid:token>
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ConfigurationManager"> 
        <xosid:implements xosid:interface="osid.OsidManager"/>
        <xosid:implements xosid:interface="osid.configuration.ConfigurationProfile"/>
        <xosid:description>
            The configuration manager provides access sessions to
            retrieve and manage configurations. A manager may support
            federation in that values can be accessed in a specified
            configuration and parameters may be defined in a specified
            registry. The sessions included in this manager are:
            <xosid:outline>
                 <xosid:element>
                    <xosid:token>ValueLookupSession:</xosid:token> a
                    basic session for retrieving configuration values
                </xosid:element>
                 <xosid:element>
                    <xosid:token>ValueSearchSession:</xosid:token> a
                    basic session for searching configuration values
                </xosid:element>
                 <xosid:element>
                    <xosid:token>ValueAdminSession:</xosid:token> a
                    session for setting and changing configuration values
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ValueNotificationSession:</xosid:token>
                    a session for subscribing to changes of
                    configuration values
                </xosid:element>
                 <xosid:element>
                    <xosid:token>ParameterLookupSession:</xosid:token>
                    a session for retrieving defined parameters
                </xosid:element>
                 <xosid:element>
                    <xosid:token>ParameterSearchSession:</xosid:token>
                    a session for searching defined parameters
                </xosid:element>
                 <xosid:element>
                    <xosid:token>ParameterAdminSession:</xosid:token> a
                    session for creating, updating and deleting
                    parameter definitions
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ParameterNoitificationSession:</xosid:token>
                    a session for subscribing to adds and changes of parameters
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ParamaterRegistrySession:</xosid:token>
                    a session for examining mappings of parameters to registries
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ParamaterRegistryAssignmentSession:</xosid:token>
                    a session for making mappings of parameters to registries
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ParameterConfigurationSession:</xosid:token>
                    a session for examining mappings of parameters to configurations
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ParameterConfigurationAssignmentSession:</xosid:token>
                    a session for mapping parameters to configurations
                </xosid:element>
            </xosid:outline>
             
            <xosid:outline>
                 <xosid:element>

                                        <xosid:token>ConfigurationLookupSession:</xosid:token>
                    a session for retrieving configurations
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ConfigurationSearchSession:</xosid:token>
                    a session for searching configurations
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ConfigurationAdminSession:</xosid:token>
                    a session for creating and updating configurations
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ConfigurationNotificationSession:</xosid:token>
                    a session for subscribing to adds and changes to configurations
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ConfigurationHierarchySession:</xosid:token>
                    a session for traversing a hierarchy of configurations
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ConfigurationHierarchyDesignSession:</xosid:token>
                    a session for managing a hierarchy of configurations
                </xosid:element>
                 <xosid:element>
                    <xosid:token>RegistryLookupSession:</xosid:token> a
                    session for retrieving configurations
                </xosid:element>
                 <xosid:element>
                    <xosid:token>RegistrySearchSession:</xosid:token> a
                    session for searching configurations
                </xosid:element>
                 <xosid:element>
                    <xosid:token>RegistryAdminSession:</xosid:token> a
                    session for creating and updating configurations
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>RegistryNotificationSession:</xosid:token>
                    a session for subscribing to adds and changes to configurations
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>RegistryHierarchySession:</xosid:token>
                    a session for traversing a hierarchy of configurations
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>RegistryHierarchyDesignSession:</xosid:token>
                    a session for managing a hierarchy of configurations
                </xosid:element>
            </xosid:outline>
             
        </xosid:description>


        <xosid:method xosid:name="getValueLookupSession">
            <xosid:description>
                <xosid:outline>
                     <xosid:element>

                                                <xosid:token>ConfigurationLookupSession:</xosid:token>
                        a session for retrieving configurations
                    </xosid:element>
                     <xosid:element>

                                                <xosid:token>ConfigurationLookupSession:</xosid:token>
                        a session for searching configurations
                    </xosid:element>
                </xosid:outline>
                <xosid:outline>
                     <xosid:element>

                                                <xosid:token>ConfigurationAdminSession:</xosid:token>
                        a session for creating and updating configurations
                    </xosid:element>
                     <xosid:element>

                                                <xosid:token>ConfigurationHierarchyTraversalSession:</xosid:token>
                        a session for traversing a hierarchy of configurations
                    </xosid:element>
                     <xosid:element>

                                                <xosid:token>ConfigurationHierarchyDesignSession:</xosid:token>
                        a session for managing a hierarchy of configurations
                    </xosid:element>
                     <xosid:element>

                                                <xosid:token>ConfigurationNotificationSession:</xosid:token>
                        a session for subscribing to adds and changes
                        to configurations
                    </xosid:element>
                     <xosid:element>

                                                <xosid:token>RegistryLookupSession:</xosid:token>
                        a session for finding and retrieving configurations
                    </xosid:element>
                     <xosid:element>

                                                <xosid:token>RegistryAdminSession:</xosid:token>
                        a session for creating and updating configurations
                    </xosid:element>
                     <xosid:element>

                                                <xosid:token>RegistryHierarchyTraversalSession:</xosid:token>
                        a session for traversing a hierarchy of configurations
                    </xosid:element>
                     <xosid:element>

                                                <xosid:token>RegistryHierarchyDesignSession:</xosid:token>
                        a session for managing a hierarchy of configurations
                    </xosid:element>
                     <xosid:element>

                                                <xosid:token>RegistryNotificationSession:</xosid:token>
                        a session for subscribing to adds and changes
                        to configurations
                    </xosid:element>
                </xosid:outline>
                 
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueLookupSession"/>
                <xosid:description>
                    a <xosid:token>ValueLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsValueLookup()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsValueLookup()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueLookupSessionForConfiguration">
            <xosid:description>
                Gets a configuration value lookup session using the
                supplied configuration.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token> to use
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueLookupSession"/>
                <xosid:description>
                    a <xosid:token>ValueLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsValueLookup()</xosid:token> or
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    and
                    <xosid:token>supportsValueLookup()</xosid:token>
                    are <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueSearchSession">
            <xosid:description>
                Gets a configuration value search session
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueSearchSession"/>
                <xosid:description>
                    a <xosid:token>ValueSearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsValueSearch()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsValueSearch()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueSearchSessionForConfiguration">
            <xosid:description>
                Gets a configuration value search session using the
                supplied configuration.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token> to use
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueSearchSession"/>
                <xosid:description>
                    a <xosid:token>ValueSearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsValueSearch()</xosid:token> or
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    and
                    <xosid:token>supportsValueSearch()</xosid:token>
                    are <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueAdminSession">
            <xosid:description>
                Gets a configuration value administration session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueAdminSession"/>
                <xosid:description>
                    a <xosid:token>ValueAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsValueAdmin()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsValueAdmin()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueAdminSessionForConfiguration">
            <xosid:description>
                Gets a value administration session using the supplied
                configuration.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token> to use
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueAdminSession"/>
                <xosid:description>
                    a<xosid:token> ValueAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    <xosid:token>supportsValueAdmin()</xosid:token> or
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsValueAdmin()</xosid:token> or
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    and <xosid:token>supportsValueAdmin()</xosid:token>
                    are <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueNotificationSession">
            <xosid:description>
                Gets a value notification session.
            </xosid:description>
            <xosid:parameter xosid:name="receiver">
                <xosid:interfaceType xosid:type="osid.configuration.ValueReceiver"/>
                <xosid:description>
                    the notification callback
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>ValueNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>receiver</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsValueNotification()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsValueNotification()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueNotificationSessionForConfiguration">
            <xosid:description>
                Gets a value notification session using the specified
                configuration
            </xosid:description>
            <xosid:parameter xosid:name="receiver">
                <xosid:interfaceType xosid:type="osid.configuration.ValueReceiver"/>
                <xosid:description>
                    the notification callback
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token> to use
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>ValueNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>receiver</xosid:token> or
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsValueNotification()</xosid:token>
                    or
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    and
                    <xosid:token>supportsValueNotification()</xosid:token>
                    are <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterLookupSession">
            <xosid:description>
                Gets a parameter lookup session
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterLookupSession"/>
                <xosid:description>
                    a <xosid:token>ParameterLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterLookup()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsParameterLookup()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterLookupSessionForRegistry">
            <xosid:description>
                Gets a parameter lookup session using the supplied
                registry.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Registry</xosid:token> to use
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterLookupSession"/>
                <xosid:description>
                    a <xosid:token>ParamaterLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterLookup()</xosid:token>
                    or
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    and
                    <xosid:token>supportsParameterLookup()</xosid:token>
                    are <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterSearchSession">
            <xosid:description>
                Gets a parameter search session
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterSearchSession"/>
                <xosid:description>
                    a <xosid:token>ParameterSearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterSearch()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsParameterSearch()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterSearchSessionForRegistry">
            <xosid:description>
                Gets a parameter search session using the supplied
                registry.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Registry</xosid:token> to use
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterSearchSession"/>
                <xosid:description>
                    a <xosid:token>ParamaterSearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterSearch()</xosid:token>
                    or
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    and
                    <xosid:token>supportsParameterSearch()</xosid:token>
                    are <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterAdminSession">
            <xosid:description>
                Gets a parameter administration session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterAdminSession"/>
                <xosid:description>
                    a <xosid:token>ParameterAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterAdmin()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsParameterAdmin()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterAdminSessionForRegistry">
            <xosid:description>
                Gets a parameter administration session using the
                supplied registry.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Registry</xosid:token> to use
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterAdminSession"/>
                <xosid:description>
                    a<xosid:token> ParameterAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterSearch()</xosid:token>
                    or
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    and
                    <xosid:token>supportsParameterAdmin()</xosid:token>
                    are <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterNotificationSession">
            <xosid:description>
                Gets a parameter notification session.
            </xosid:description>
            <xosid:parameter xosid:name="receiver">
                <xosid:interfaceType xosid:type="osid.configuration.ParameterReceiver"/>
                <xosid:description>
                    the notification callback
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>ParameterNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>receiver
                   </xosid:token>is <xosid:token> null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterNotification()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsParameterNotification()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterNotificationSessionForRegistry">
            <xosid:description>
                Gets a parameter notification session using the
                specified registry.
            </xosid:description>
            <xosid:parameter xosid:name="receiver">
                <xosid:interfaceType xosid:type="osid.configuration.ParameterReceiver"/>
                <xosid:description>
                    the notification callback
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Registry</xosid:token> to use
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>ParameterNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>receiver</xosid:token> or
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterNotification()</xosid:token>
                    or
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    and
                    <xosid:token>supportsParameterNotification()</xosid:token>
                    are <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterConfigurationSession">
            <xosid:description>
                Gets a session for looking up mappings of parametres to
                configurations.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterConfigurationSession"/>
                <xosid:description>
                    a
                    <xosid:token>ParameterConfigurationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterConfiguration()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsParameterConfiguration()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterConfigurationAssignmentSession">
            <xosid:description>
                Gets a session for managing mappings of parametres to
                configurations.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterConfigurationAssignmentSession"/>
                <xosid:description>
                    a
                    <xosid:token>ParameterConfigurationAssignmentSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterConfigurationAssignment()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsParameterConfigurationAssignment()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterRegistrySession">
            <xosid:description>
                Gets a session for lookung up mappings of parametres to
                registries.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterRegistrySession"/>
                <xosid:description>
                    a
                    <xosid:token>ParameterRegistrySession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterRegistry()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsParameterRegistry()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterRegistryAssignmentSession">
            <xosid:description>
                Gets a session for managing mappings of parametres to
                registries.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterRegistryAssignmentSession"/>
                <xosid:description>
                    a
                    <xosid:token>ParameterRegistryAssignmentSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterRegistryAssignment()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsParameterRegistryAssignment()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationLookupSession">
            <xosid:description>
                Gets a configuration lookup session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationLookupSession"/>
                <xosid:description>
                    a
                    <xosid:token>ConfigurationLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsConfigurationLookup()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsConfigurationLookup()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationSearchSession">
            <xosid:description>
                Gets a configuration search session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationSearchSession"/>
                <xosid:description>
                    a
                    <xosid:token>ConfigurationSearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsConfigurationSearch()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsConfigurationSearch()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationAdminSession">
            <xosid:description>
                Gets a configuration administration session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationAdminSession"/>
                <xosid:description>
                    a
                    <xosid:token>ConfigurationAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsConfigurationAdmin()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsConfigurationAdmin()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationNotificationSession">
            <xosid:description>
                Gets the notification session for subscribing to
                changes to configurations.
            </xosid:description>
            <xosid:parameter xosid:name="receiver">
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationReceiver"/>
                <xosid:description>
                    the notification callback
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>ConfigurationNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>receiver</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsConfigurationNotification()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsConfigurationNotification()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationHierarchySession">
            <xosid:description>
                Gets a hierarchy traversal service for configurations.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationHierarchySession"/>
                <xosid:description>
                    a
                    <xosid:token>ConfigurationHierarchySession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsConfigurationHierarchy()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsConfigurationHierarchy()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationHierarchyDesignSession">
            <xosid:description>
                Gets a hierarchy design service for configurations.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationHierarchyDesignSession"/>
                <xosid:description>
                    a
                    <xosid:token>ConfigurationHierarchyDesignSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsConfigurationHierarchyDesign()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsConfigurationHierarchyDesign()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistryLookupSession">
            <xosid:description>
                Gets a registry lookup session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryLookupSession"/>
                <xosid:description>
                    a <xosid:token>RegistryLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsRegistryLookup()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsRegistryLookup()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistrySearchSession">
            <xosid:description>
                Gets a registry search session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistrySearchSession"/>
                <xosid:description>
                    a <xosid:token>RegistrySearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsRegistrySearch()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsRegistrySearch()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistryAdminSession">
            <xosid:description>
                Gets a registry administration session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryAdminSession"/>
                <xosid:description>
                    a <xosid:token>RegistryAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsRegistryAdmin()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsRegistryAdmin()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistryNotificationSession">
            <xosid:description>
                Gets a notification session for subscribing to changes
                to registries.
            </xosid:description>
            <xosid:parameter xosid:name="receiver">
                <xosid:interfaceType xosid:type="osid.configuration.RegistryReceiver"/>
                <xosid:description>
                    the notification callback
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>RegistryNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>receiver
                   </xosid:token>is <xosid:token> null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsRegistryNotification()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsRegistryNotification()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistryHierarchySession">
            <xosid:description>
                Gets a hierarchy traversal service for registries.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryHierarchySession"/>
                <xosid:description>
                    a
                    <xosid:token>RegistryHierarchySession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsRegistryHierarchy()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsRegistryHierarchy()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistryHierarchyDesignSession">
            <xosid:description>
                Gets a hierarchy design service for registries.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryHierarchyDesignSession"/>
                <xosid:description>
                    a
                    <xosid:token>RegistryHierarchyDesignSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsRegistryHierarchyDesign()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsRegistryHierarchyDesign()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ConfigurationProxyManager"> 
        <xosid:implements xosid:interface="osid.OsidProxyManager"/>
        <xosid:implements xosid:interface="osid.configuration.ConfigurationProfile"/>
        <xosid:description>
            The configuration manager provides access to sessions to
            retrieve and manage configurations. Methods in this manager
            support the passing of an Authentication object for the
            purposes of proxy authentication. A manager may support
            federation in that values can be accessed in a specified
            configuration and paramaters may be defined in a specified
            registry. The sessions included in this manager are:
            <xosid:outline>
                 <xosid:element>
                    <xosid:token>ValueLookupSession:</xosid:token> a
                    basic session for retrieving configuration values
                </xosid:element>
                 <xosid:element>
                    <xosid:token>ValueSearchSession:</xosid:token> a
                    basic session for searching configuration values
                </xosid:element>
                 <xosid:element>
                    <xosid:token>ValueAdminSession:</xosid:token> a
                    session for setting and changing configuration values
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ValueNotificationSession:</xosid:token>
                    a session for subscribing to changes of
                    configuration values
                </xosid:element>
                 <xosid:element>
                    <xosid:token>ParameterLookupSession:</xosid:token>
                    a session for retrieving defined parameters
                </xosid:element>
                 <xosid:element>
                    <xosid:token>ParameterSearchSession:</xosid:token>
                    a session for searching defined parameters
                </xosid:element>
                 <xosid:element>
                    <xosid:token>ParameterAdminSession:</xosid:token> a
                    session for creating, updating and deleting
                    parameter definitions
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ParameterNoitificationSession:</xosid:token>
                    a session for subscribing to adds and changes of parameters
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ParamaterRegistrySession:</xosid:token>
                    a session for examining mappings of parameters to registries
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ParamaterRegistryAssignmentSession:</xosid:token>
                    a session for making mappings of parameters to registries
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ParameterConfigurationSession:</xosid:token>
                    a session for examining mappings of parameters to configurations
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ParameterConfigurationAssignmentSession:</xosid:token>
                    a session for mapping parameters to configurations
                </xosid:element>
            </xosid:outline>
             
            <xosid:outline>
                 <xosid:element>

                                        <xosid:token>ConfigurationLookupSession:</xosid:token>
                    a session for retrieving configurations
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ConfigurationSearchSession:</xosid:token>
                    a session for searching configurations
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ConfigurationAdminSession:</xosid:token>
                    a session for creating and updating configurations
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ConfigurationNotificationSession:</xosid:token>
                    a session for subscribing to adds and changes to configurations
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ConfigurationHierarchySession:</xosid:token>
                    a session for traversing a hierarchy of configurations
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>ConfigurationHierarchyDesignSession:</xosid:token>
                    a session for managing a hierarchy of configurations
                </xosid:element>
                 <xosid:element>
                    <xosid:token>RegistryLookupSession:</xosid:token> a
                    session for retrieving configurations
                </xosid:element>
                 <xosid:element>
                    <xosid:token>RegistrySearchSession:</xosid:token> a
                    session for searching configurations
                </xosid:element>
                 <xosid:element>
                    <xosid:token>RegistryAdminSession:</xosid:token> a
                    session for creating and updating configurations
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>RegistryNotificationSession:</xosid:token>
                    a session for subscribing to adds and changes to configurations
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>RegistryHierarchySession:</xosid:token>
                    a session for traversing a hierarchy of configurations
                </xosid:element>
                 <xosid:element>

                                        <xosid:token>RegistryHierarchyDesignSession:</xosid:token>
                    a session for managing a hierarchy of configurations
                </xosid:element>
            </xosid:outline>
             
        </xosid:description>


        <xosid:method xosid:name="getValueLookupSession">
            <xosid:description>
                Gets a configuration value lookup session.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueLookupSession"/>
                <xosid:description>
                    a <xosid:token>ValueLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsValueLookup()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsValueLookup()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueLookupSessionForConfiguration">
            <xosid:description>
                Gets a configuration value lookup session using the
                supplied configuration.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token> to use
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueLookupSession"/>
                <xosid:description>
                    a <xosid:token>ValueLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> or
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsValueLookup()</xosid:token> or
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>False</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    and
                    <xosid:token>supportsValueLookup()</xosid:token>
                    are <xosid:token>true</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueSearchSession">
            <xosid:description>
                Gets a configuration value search session.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueSearchSession"/>
                <xosid:description>
                    a <xosid:token>ValueSearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsValueSearch()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsValueLookup()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueSearchSessionForConfiguration">
            <xosid:description>
                Gets a configuration value search session using the
                supplied configuration.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token> to use
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueSearchSession"/>
                <xosid:description>
                    a <xosid:token>ValueSearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> or
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsValueSearch()</xosid:token> or
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>False</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    and
                    <xosid:token>supportsValueSearch()</xosid:token>
                    are <xosid:token>true</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueNotificationSession">
            <xosid:description>
                Gets a value notification session.
            </xosid:description>
            <xosid:parameter xosid:name="receiver">
                <xosid:interfaceType xosid:type="osid.configuration.ValueReceiver"/>
                <xosid:description>
                    notification callback
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>ValueNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>receiver</xosid:token> or
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsValueNotification()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsValueNotification()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueNotificationSessionForConfiguration">
            <xosid:description>
                Gets a value notification session using the specified
                configuration
            </xosid:description>
            <xosid:parameter xosid:name="receiver">
                <xosid:interfaceType xosid:type="osid.configuration.ValueReceiver"/>
                <xosid:description>
                    notification callback
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token> to use
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>ValueNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>receiver,
                    configurationId</xosid:token> or
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsValueNotification()</xosid:token>
                    or
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    and
                    <xosid:token>supportsValueNotification()</xosid:token>
                    are <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueAdminSession">
            <xosid:description>
                Gets a configuration value administration session.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueAdminSession"/>
                <xosid:description>
                    a <xosid:token>ValueAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsValueAdmin()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsValueAdmin()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueAdminSessionForConfiguration">
            <xosid:description>
                Gets a value administration session using the supplied
                configuration.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token> to use
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueAdminSession"/>
                <xosid:description>
                    a<xosid:token> ValueAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> or
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsValueSearch()</xosid:token> or
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    and <xosid:token>supportsValueAdmin()</xosid:token>
                    are <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterLookupSession">
            <xosid:description>
                Gets a parameter lookup session
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterLookupSession"/>
                <xosid:description>
                    a <xosid:token>ParameterLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterLookup()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsParameterLookup()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterLookupSessionForRegistry">
            <xosid:description>
                Gets a parameter lookup session using the supplied
                registry.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Registry</xosid:token> to use
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterLookupSession"/>
                <xosid:description>
                    a <xosid:token>ParamaterLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId
                   </xosid:token>or <xosid:token>
                    authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterLookup()</xosid:token>
                    or
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    and
                    <xosid:token>supportsParameterLookup()</xosid:token>
                    are <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterSearchSession">
            <xosid:description>
                Gets a parameter search session
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterSearchSession"/>
                <xosid:description>
                    a <xosid:token>ParameterSearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterSearch()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsParameterSearch()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterSearchSessionForRegistry">
            <xosid:description>
                Gets a parameter search session using the supplied
                registry.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Registry</xosid:token> to use
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterSearchSession"/>
                <xosid:description>
                    a <xosid:token>ParamaterSearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId
                   </xosid:token>or <xosid:token>
                    authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterSearch()</xosid:token>
                    or
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    and
                    <xosid:token>supportsParameterSearch()</xosid:token>
                    are <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterAdminSession">
            <xosid:description>
                Gets a parameter administration session.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterAdminSession"/>
                <xosid:description>
                    a <xosid:token>ParameterAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterAdmin()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsParameterAdmin()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterAdminSessionForRegistry">
            <xosid:description>
                Gets a parameter administration session using the
                supplied registry.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Registry</xosid:token> to use
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterAdminSession"/>
                <xosid:description>
                    a<xosid:token> ParameterAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> or
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterAdmin()</xosid:token>
                    or
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    and
                    <xosid:token>supportsParameterAdmin()</xosid:token>
                    are <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterNotificationSession">
            <xosid:description>
                Gets a parameter notification session.
            </xosid:description>
            <xosid:parameter xosid:name="receiver">
                <xosid:interfaceType xosid:type="osid.configuration.ParameterReceiver"/>
                <xosid:description>
                    notification callback
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>ParameterNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>receiver</xosid:token> or
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterNotification()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsParameterNotification()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterNotificationSessionForRegistry">
            <xosid:description>
                Gets a parameter notification session using the
                specified registry.
            </xosid:description>
            <xosid:parameter xosid:name="receiver">
                <xosid:interfaceType xosid:type="osid.configuration.ParameterReceiver"/>
                <xosid:description>
                    notification callback
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Registry</xosid:token> to use
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>ParameterNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>receiver, registryId</xosid:token> or
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterNotification()</xosid:token>
                    or
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsVisibleFederation()</xosid:token>
                    and
                    <xosid:token>supportsParameterNotification()</xosid:token>
                    are <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterConfigurationSession">
            <xosid:description>
                Gets a session for examining mappings of parametres to
                configurations.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterConfigurationSession"/>
                <xosid:description>
                    a
                    <xosid:token>ParameterConfigurationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterConfiguration()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsParameterConfiguration()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterConfigurationAssignmentSession">
            <xosid:description>
                Gets a session for managing mappings of parametres to
                configurations.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterConfigurationAssignmentSession"/>
                <xosid:description>
                    a
                    <xosid:token>ParameterConfigurationAssignmentSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterConfigurationAssignment()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsParameterConfigurationAssignment()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterRegistrySession">
            <xosid:description>
                Gets a session for examining mappings of parametres to
                registries.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterRegistrySession"/>
                <xosid:description>
                    a
                    <xosid:token>ParameterRegistrySession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterRegistry()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsParameterRegistry()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterRegistryAssignmentSession">
            <xosid:description>
                Gets a session for managing mappings of parametres to
                registries.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterRegistryAssignmentSession"/>
                <xosid:description>
                    a
                    <xosid:token>ParameterRegistryAssignmentSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsParameterRegistryAssignment()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsParameterRegistryAssignment()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationLookupSession">
            <xosid:description>
                Gets a configuration lookup session.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationLookupSession"/>
                <xosid:description>
                    a
                    <xosid:token>ConfigurationLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    this manager has been shut down
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsConfigurationLookup()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsConfigurationLookup()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationSearchSession">
            <xosid:description>
                Gets a configuration search session.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationSearchSession"/>
                <xosid:description>
                    a
                    <xosid:token>ConfigurationSearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    this manager has been shut down
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsConfigurationSearch()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsConfigurationSearch()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationNotificationSession">
            <xosid:description>
                Gets the notification session for subscribing to
                changes to configurations.
            </xosid:description>
            <xosid:parameter xosid:name="receiver">
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationReceiver"/>
                <xosid:description>
                    notification callback
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>ConfigurationNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>receiver</xosid:token> or
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsConfigurationNotification()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsConfigurationNotification()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationAdminSession">
            <xosid:description>
                Gets a configuration administration session.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationAdminSession"/>
                <xosid:description>
                    a
                    <xosid:token>ConfigurationAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    this manager has been shut down
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsConfigurationAdmin()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsConfigurationAdmin()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationHierarchySession">
            <xosid:description>
                Gets a hierarchy traversal service for configurations.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationHierarchySession"/>
                <xosid:description>
                    a
                    <xosid:token>ConfiguraqtionHierarchySession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsConfigurationHierarchy()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsConfigurationHierarchy()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationHierarchyDesignSession">
            <xosid:description>
                Gets a hierarchy design service for configurations.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationHierarchyDesignSession"/>
                <xosid:description>
                    a
                    <xosid:token>ConfigurationHierarchyDesignSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsConfigurationHierarchyDesign()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsConfigurationHierarchyDesign()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistryLookupSession">
            <xosid:description>
                Gets a registry lookup session.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryLookupSession"/>
                <xosid:description>
                    a <xosid:token>RegistryLookupSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsRegistryLookup()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsRegistryLookup()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistrySearchSession">
            <xosid:description>
                Gets a registry search session.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistrySearchSession"/>
                <xosid:description>
                    a <xosid:token>RegistrySearchSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsRegistrySearch()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsRegistrySearch()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistryAdminSession">
            <xosid:description>
                Gets a registry administration session.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryAdminSession"/>
                <xosid:description>
                    a <xosid:token>RegistryAdminSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    this manager has been shut down
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsRegistryAdmin()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsRegistryAdmin()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistryNotificationSession">
            <xosid:description>
                Gets a notification session for subscribing to changes
                to registries.
            </xosid:description>
            <xosid:parameter xosid:name="receiver">
                <xosid:interfaceType xosid:type="osid.configuration.RegistryReceiver"/>
                <xosid:description>
                    notification callback
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryNotificationSession"/>
                <xosid:description>
                    a
                    <xosid:token>RegistryNotificationSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>receiver</xosid:token> or
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsRegistryNotification()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsRegistryNotification()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistryHierarchySession">
            <xosid:description>
                Gets a hierarchy traversal service for registries.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryHierarchySession"/>
                <xosid:description>
                    a
                    <xosid:token>RegistryHierarchyTraversalSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsRegistryHierarchy()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsRegistryHierarchy()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistryHierarchyDesignSession">
            <xosid:description>
                Gets a hierarchy design service for registries.
            </xosid:description>
            <xosid:parameter xosid:name="authentication">
                <xosid:interfaceType xosid:type="osid.authentication.Authentication"/>
                <xosid:description>
                    proxy authentication
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryHierarchyDesignSession"/>
                <xosid:description>
                    a
                    <xosid:token>RegistryHierarchyDesignSession</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>authentication</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    a<xosid:token>uthentication</xosid:token> is
                    invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsRegistryHierarchyDesign()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    the authentication service is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsRegistryHierarchyDesign()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ValueLookupSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session is used to retrieve configuration values. Two
            views of the configuration data are defined;

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    federated: parameters defined in configurations
                    that are a parent of this configuration in the
                    configuration hierarchy are included
                </xosid:element>
                 <xosid:element>
                    isolated: parameters are contained to within this configuration
                </xosid:element>
            </xosid:outline>
            Values are not OSID objects and are obtained using a
            reference to a Parameter.
        </xosid:description>


        <xosid:method xosid:name="getConfigurationId">
            <xosid:description>
                Gets the <xosid:token>Configuration</xosid:token>
                <xosid:token>Id</xosid:token> associated with this
                session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Configuration"/>
                <xosid:description>
                    the <xosid:token>Configuration</xosid:token>
                    <xosid:token>Id</xosid:token> associated with this
                    session
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfiguration">
            <xosid:description>
                Gets the <xosid:token>Configuration</xosid:token>
                associated with this session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Configuration"/>
                <xosid:description>
                    the <xosid:token>Configuration</xosid:token>
                    associated with this session
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canLookupValues">
            <xosid:description>
                Tests if this user can perform
                <xosid:token>Value</xosid:token> lookups. A return of
                true does not guarantee successful authorization. A
                return of false indicates that it is known all methods
                in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer lookup operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if lookup methods
                    are not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useFederatedConfigurationView">
            <xosid:description>
                Federates the view for methods in this session. A
                federated view will include values from parent
                configurations in the configuration hierarchy.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useIsolatedConifgurationView">
            <xosid:description>
                Isolates the view for methods in this session. An
                isolated view restricts lookups to this configuration
                only.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterValues">
            <xosid:description>
                Gets the <xosid:token>Values</xosid:token> with the
                given <xosid:token>Id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Parameter</xosid:token> to retrieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueList"/>
                <xosid:description>
                    the value list
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    the <xosid:token>parameterId</xosid:token> not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    the <xosid:token>parameterId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValues">
            <xosid:description>
                Gets the <xosid:token>Parameter</xosid:token> values
                with the given <xosid:token>Id. </xosid:token>The
                returned array is sorted by the value index.
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Parameter</xosid:token> to retrieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="object" xosid:array="true"/>
                <xosid:description>
                    the value list
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    the <xosid:token>parameterId</xosid:token> not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    the <xosid:token>parameterId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ValueSearchSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods for searching
            <xosid:token>Value</xosid:token> objects. The search query
            is constructed using the
            <xosid:token>ValueQuery</xosid:token> interface. Multiple
            <xosid:token>ValueQuery</xosid:token> interfaces may be
            submitted into a search to perform a boolean OR. If more
            than one search element is specified within a single
            <xosid:token>ValueQuery</xosid:token> these elements form
            a boolean AND. The parameter
            <xosid:token>Type</xosid:token> also specifies the
            interface for the value query. 

            <xosid:pbreak/>

            <xosid:token>getValuesByQuery()</xosid:token> is the basic
            search method and returns a list of
            <xosid:token>Values.</xosid:token> A more advanced search
            may be performed with <xosid:token>getValuesBySearch().
            </xosid:token>It accepts a
            <xosid:token>ValueSearch</xosid:token> interface in
            addition to the query interface for the purpose of
            specifying additional options affecting the entire search,
            such as ordering.
            <xosid:token>getValuesBySearch()</xosid:token> returns a
            <xosid:token>ValueSearchResults</xosid:token> interface
            that can be used to access the resulting
            <xosid:token>ValueList</xosid:token> or be used to perform
            a search within the result set through
            <xosid:token>ValueSearch.</xosid:token>
            Two views of the configuration data are defined;

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    federated: values defined in configurations that
                    are a parent of this configuration in the
                    configuration hierarchy are included
                </xosid:element>
                 <xosid:element>
                    isolated: values are contained to within this configuration
                </xosid:element>
            </xosid:outline>
             
        </xosid:description>


        <xosid:method xosid:name="getConfigurationId">
            <xosid:description>
                Gets the <xosid:token>Configuration</xosid:token>
                <xosid:token>Id</xosid:token> associated with this
                session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Configuration</xosid:token>
                    <xosid:token>Id</xosid:token> associated with this
                    session
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfiguration">
            <xosid:description>
                Gets the <xosid:token>Configuration</xosid:token>
                associated with this session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Configuration"/>
                <xosid:description>
                    the <xosid:token>Configuration</xosid:token>
                    associated with this session
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canSearchValues">
            <xosid:description>
                Tests if this user can perform
                <xosid:token>Value</xosid:token> searches. A return of
                true does not guarantee successful authorization. A
                return of false indicates that it is known all methods
                in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer search operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if lookup methods
                    are not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useFederatedConfigurationView">
            <xosid:description>
                Federates the view for methods in this session. A
                federated view will include values from parent
                configurations in the configuration hierarchy.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useIsolatedConfigurationView">
            <xosid:description>
                Isolates the view for methods in this session. An
                isolated view restricts searches to this configuration
                only.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueQuery">
            <xosid:description>
                Gets a value query interface. The returned query only
                makes available the core
                <xosid:token>ValueQuery</xosid:token> interface and
                does not support additional object types.
               
                <xosid:token>getValueQueryForParameterType()</xosid:token>
                should be used if additional interface types are
                required.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueQuery"/>
                <xosid:description>
                    the value query
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValuesByQuery">
            <xosid:description>
                Gets a list of <xosid:token>Values</xosid:token>
                matching the given query interface. Each element in the
                array is OR'd.
            </xosid:description>
            <xosid:parameter xosid:name="valueQueries">
                <xosid:interfaceType xosid:type="osid.configuration.ValueQuery" xosid:array="true"/>
                <xosid:description>
                    the search query array
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueList"/>
                <xosid:description>
                    the returned <xosid:token>ValueList</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>valueQueries</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    a query form is not of this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueSearch">
            <xosid:description>
                Gets a value search interface. The returned query only
                makes available the core
                <xosid:token>ValueSearch</xosid:token> interface and
                does not support additional interface types.
               
                <xosid:token>getValueSearchForParameterType()</xosid:token>
                should be used if additional interface types are
                required.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueSearch"/>
                <xosid:description>
                    the value search interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueSearchForInterfaceType">
            <xosid:description>
                Gets a value search interface of the specified type.
                The returned query contains the search interface
                extension corresponding to the specified
                <xosid:token>Type.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="valueSearchInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type of query to retrieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueSearch"/>
                <xosid:description>
                    the value search interface
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>

                                        <xosid:token>valueSearchInterfaceType</xosid:token>
                    is <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>ConfigurationManager.supportsParameterType(valueSearchInterfaceType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValuesBySearch">
            <xosid:description>
                Gets a list of <xosid:token>Values</xosid:token>
                matching the given search query using the given search
                interface. Each element in the array is OR'd.
            </xosid:description>
            <xosid:parameter xosid:name="valueQueries">
                <xosid:interfaceType xosid:type="osid.configuration.ValueQuery" xosid:array="true"/>
                <xosid:description>
                    the search query array
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="valueSearch">
                <xosid:interfaceType xosid:type="osid.configuration.ValueSearch"/>
                <xosid:description>
                    the search options
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueSearchResults"/>
                <xosid:description>
                    the serach results
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>valueQueries
                   </xosid:token>or <xosid:token>
                    valueSearch</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>valueSearch</xosid:token> or a query
                    form is not of this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ValueAdminSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session is used to add, update and remove
            configuration parameter values.
            <xosid:token>Parameters</xosid:token> are contained within
            <xosid:token>Configurations</xosid:token> and
            <xosid:token>Values</xosid:token> contained within
            <xosid:token>Parameters.</xosid:token> Each
            <xosid:token>Parameter</xosid:token> is identified with an
            <xosid:token>Id</xosid:token> and each
            <xosid:token>Value</xosid:token> is identified with an
            <xosid:token>index</xosid:token> number. The
            <xosid:token>index</xosid:token> is a number starting at 1
            but values are not required to have sequential numbers. The
            <xosid:token>index</xosid:token> simply serves the purpose
            of identifying a particular
            <xosid:token>Value</xosid:token> where multiple values
            exist for a parameter and to indicate a preferential
            ordering of the values.
        </xosid:description>


        <xosid:method xosid:name="getConfigurationId">
            <xosid:description>
                Gets the <xosid:token>Configuration</xosid:token>
                <xosid:token>Id</xosid:token> associated with this
                session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Configuration</xosid:token>
                    <xosid:token>Id</xosid:token> associated with this
                    session
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfiguration">
            <xosid:description>
                Gets the <xosid:token>Configuration</xosid:token>
                associated with this session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Configuration"/>
                <xosid:description>
                    the <xosid:token>Configuration</xosid:token>
                    associated with this session
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canCreateValues">
            <xosid:description>
                Tests if this user can create
                <xosid:token>Values.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known creating a
                <xosid:token>Value</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer create operations to an unauthorized user.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Value</xosid:token> ceration is not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="addValue">
            <xosid:description>
                Appends a value to the given parameter. The index
                assigned will be a number 1 higher than the last value.
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the parameter <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="value">
                <xosid:primitiveType xosid:type="object"/>
                <xosid:description>
                    the value
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>value</xosid:token> is not of
                    parameter type
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId
                   </xosid:token>or <xosid:token> value</xosid:token>
                    is <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canUpdateValues">
            <xosid:description>
                Tests if this user can update
                <xosid:token>Values.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known updating a
                <xosid:token>Value</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer update operations to an unauthorized user.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Value</xosid:token> modification is
                    not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canUpdateValue">
            <xosid:description>
                Tests if this user can update a specified
                <xosid:token>Value.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known updating the
                <xosid:token>Value</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer update operations to an unauthoirzed user.
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="index">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the index of the value to test
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if value
                    modification is not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>valueId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                If the <xosid:token>parameterId</xosid:token> and
                <xosid:token>index</xosid:token> is not found, then it
                is acceptable to return false to indicate the lack of
                an update available.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="updateValue">
            <xosid:description>
                Updates the given parameter value in this
                configuration.
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the parameter <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="index">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the index of the value to remove
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="value">
                <xosid:primitiveType xosid:type="object"/>
                <xosid:description>
                    the value
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>value</xosid:token> is not of
                    parameter type
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    the parameter value is not found in this
                    configuration
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId
                   </xosid:token>or <xosid:token> value</xosid:token>
                    is <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="updateValuePosition">
            <xosid:description>
                Changes the value position. A new position of the same
                index as an existing value results in an insert
                operation changing the indices os subsequent values.
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="oldIndex">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the index of the value to test
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="newIndex">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the index of the value to test
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    the parameter value is not found in this
                    configuration
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canDeleteValues">
            <xosid:description>
                Tests if this user can delete
                <xosid:token>Values.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known deleting a
                <xosid:token>Value</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer delete operations to an unauthorized user.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Value</xosid:token> deletion is not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canDeleteValue">
            <xosid:description>
                Tests if this user can delete a specified
                <xosid:token>Value.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known deleting the
                <xosid:token>Value</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer delete operations to an unauthorized user.
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="index">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the index of the value to test
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Value</xosid:token> deletion is not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                If the <xosid:token>parameterId</xosid:token> and index
                is not found, then it is acceptable to return false to
                indicate the lack of an delete available.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="deleteValue">
            <xosid:description>
                Deletes the specified parameter value. This operation
                does not change the index numbers of the surrounding
                values.
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Property</xosid:token> containing the
                    value
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="index">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the index of the value to remove
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    the parameter value is not found in this
                    configuration
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ValueNotificationSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session defines methods to receive notifications on
            changes to <xosid:token>Values. </xosid:token>A particular
            value in a set may have been added or deleted, but all
            changes appear as a change to a parameter. Once a change
            notification is received, the new value list can be
            obtained through the
            <xosid:token>ValueLookupSession.</xosid:token> This session
            is intended for adapters and providers needing to
            synchronize their state with this service without the use
            of polling. Notifications are cancelled when this session
            is closed.

            <xosid:pbreak/>

            Two views are defined;

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    federated: parameters defined in configurations
                    that are a parent of this configuration in the
                    configuration hierarchy are included for notifications
                </xosid:element>
                 <xosid:element>
                    isolated: notifications are restricted to
                    parameters are defined to within this configuration
                </xosid:element>
            </xosid:outline>
            The methods <xosid:token>federateValuerView()</xosid:token>
            and <xosid:token>isolateValueView()</xosid:token> behave as
            a radio group and one should be selected before invoking
            any lookup methods.
        </xosid:description>


        <xosid:method xosid:name="getConfigurationId">
            <xosid:description>
                Gets the <xosid:token>Configuration</xosid:token>
                <xosid:token>Id</xosid:token> associated with this
                session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Configuration</xosid:token>
                    <xosid:token>Id</xosid:token> associated with this
                    session
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfiguration">
            <xosid:description>
                Gets the <xosid:token>Configuration</xosid:token>
                associated with this session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Configuration"/>
                <xosid:description>
                    the <xosid:token>Configuration</xosid:token>
                    associated with this session
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canRegisterForValueNotifications">
            <xosid:description>
                Tests if this user can register for
                <xosid:token>Value</xosid:token> notifications. A
                return of true does not guarantee successful
                authorization. A return of false indicates that it is
                known all methods in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer notification operations.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if notification
                    methods are not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useFederatedConfigurationView">
            <xosid:description>
                Federates the view for methods in this session. A
                federated view will include parameters in
                configurations of which this configuration is a child
                in the configuration hierarchy.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useIsolatedConfigurationView">
            <xosid:description>
                Isolates the view for methods in this session. An
                isolated view restricts notifications for parameter
                values to this configuration only.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForChangedValues">
            <xosid:description>
                Assigns a callback for notification of updated
                parameter values in this configuration.
               
                <xosid:token>ValueReceiver.changedValue()</xosid:token>
                is invoked when a <xosid:token>Parameter</xosid:token>
                is changed by adding, removing or updating a
                <xosid:token>Value.</xosid:token>
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForChangedValue">
            <xosid:description>
                Assigns a callback for notifications of an update to a
                parameter in this configuration.
                <xosid:token>ValueReceiver.changedValue()</xosid:token>
                is invoked when the specified
                <xosid:token>Parameter</xosid:token> is changed by
                adding, removijng or updating a
                <xosid:token>Value.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Parameter</xosid:token> to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a <xosid:token>Parameter</xosid:token> was not
                    found identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ParameterLookupSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session is used to retrieve parameters from a registry
            of parameters.

            <xosid:pbreak/>

            This lookup session defines several views.

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    comparative view: elements may be silently omitted
                    or re-ordered 
                </xosid:element>
                 <xosid:element>
                    plenary view: provides a complete and ordered
                    result set or is an error condition
                </xosid:element>
                 <xosid:element>
                    isolated function view: All parameter methods in
                    this session operate, retrieve and pertain to
                    parameters defined explicitly in the current
                    configuration. Using an isolated view is useful for
                    managing <xosid:token>Parameters</xosid:token> with
                    the <xosid:token>ParameterAdminSession.</xosid:token>
                </xosid:element>
                 <xosid:element>
                    federated function view; All parameter methods in
                    this session operate, retrieve and pertain to all
                    parameters defined in this configuration and any
                    other parameters implicitly available in this
                    configuration through vault inheritence.
                </xosid:element>
            </xosid:outline>
            The methods
            <xosid:token>federateParameterView()</xosid:token> and
            <xosid:token>isolateParameterView()</xosid:token> behave
            as a radio group and one should be selected before invoking
            any lookup methods.
        </xosid:description>


        <xosid:method xosid:name="getRegistryId">
            <xosid:description>
                Gets the <xosid:token>Registry</xosid:token>
                <xosid:token>Id</xosid:token> associated with this
                session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Registry Id</xosid:token>
                    associated with this session
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistry">
            <xosid:description>
                Gets the <xosid:token>Registry</xosid:token> associated
                with this session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Registry"/>
                <xosid:description>
                    the <xosid:token>Registry</xosid:token> associated
                    with this session
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canLookupParameters">
            <xosid:description>
                Tests if this user can perform
                <xosid:token>Parameter</xosid:token> lookups. A return
                of true does not guarantee successful authorization. A
                return of false indicates that it is known all methods
                in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer lookup operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if lookup methods
                    are not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useComparativeParameterView">
            <xosid:description>
                The returns from the lookup methods may omit or
                translate elements based on this session, such as
                authorization, and not result in an error. This view is
                used when greater interoperability is desired at the
                expense of precision.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="usePlenaryParameterView">
            <xosid:description>
                A complete view of the
                <xosid:token>Parameter</xosid:token> returns is
                desired. Methods will return what is requested or
                result in an error. This view is used when greater
                precision is desired at the expense of
                interoperability.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useFederatedRegistryView">
            <xosid:description>
                Federates the view for methods in this session. A
                federated view will include paramaters from parent
                configurations in the configuration hierarchy.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useIsolatedRegistryView">
            <xosid:description>
                Isolates the view for methods in this session. An
                isolated view restricts lookups to this configuration
                only.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameter">
            <xosid:description>
                Gets the <xosid:token>Parameter</xosid:token> specified
                by its <xosid:token>Id. </xosid:token>In plenary mode,
                the exact <xosid:token>Id</xosid:token> is found or a
                <xosid:token>NOT_FOUND</xosid:token> results.
                Otherwise, the returned
                <xosid:token>Parameter</xosid:token> may have a
                different <xosid:token>Id</xosid:token> than requested,
                such as the case where a duplicate
                <xosid:token>Id</xosid:token> was assigned to a
                <xosid:token>Parameter</xosid:token> and retained for
                compatibility.
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Parameter</xosid:token> to rerieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Parameter"/>
                <xosid:description>
                    the returned <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    no <xosid:token>Parameter</xosid:token> found with
                    the given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParametersByIds">
            <xosid:description>
                Gets a <xosid:token>ParameterList</xosid:token>
                corresponding to the given <xosid:token>IdList.
                </xosid:token>In plenary mode, the returned list
                contains all of the parameters specified in the
                <xosid:token>Id</xosid:token> list, in the order of
                the list, including duplicates, or an error results if
                an <xosid:token>Id</xosid:token> in the supplied list
                is not found or inaccessible. Otherwise, inaccessible
                <xosid:token>Parameters</xosid:token> may be omitted
                from the list and may present the elements in any order
                including returning a unique set.
            </xosid:description>
            <xosid:parameter xosid:name="parameterIdList">
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    the list of <xosid:token>Ids</xosid:token> to
                    rerieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterList"/>
                <xosid:description>
                    the returned <xosid:token>Parameter
                    list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    an <xosid:token>Id was</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterIdList</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParametersByType">
            <xosid:description>
                Gets a <xosid:token>ParameterList</xosid:token>
                corresponding to the given parameter
                <xosid:token>Type </xosid:token>which does not include
                parameters of types derived from the specified
                <xosid:token>Type. </xosid:token>In plenary mode, the
                returned list contains all known parameters or an error
                results. Otherwise, the returned list may contain only
                those parameters that are accessible through this
                session. In both cases, the order of the set is not
                specified.
            </xosid:description>
            <xosid:parameter xosid:name="parameterType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a parameter type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterList"/>
                <xosid:description>
                    the returned <xosid:token>Parameter
                    list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>parameterType</xosid:token> is not
                    supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameters">
            <xosid:description>
                Gets all <xosid:token>Parameters.</xosid:token> In
                plenary mode, the returned list contains all known
                parameters or an error results. Otherwise, the returned
                list may contain only those parameters that are
                accessible through this session. In both cases, the
                order of the set is not specified.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterList"/>
                <xosid:description>
                    a list of <xosid:token>Parameters</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ParameterSearchSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods for searching
            <xosid:token>Parameter</xosid:token> objects. The search
            query is constructed using the
            <xosid:token>ParameterQuery</xosid:token> interface.
            Multiple <xosid:token>ParaneterQuery</xosid:token>
            interfaces may be submitted into a search to perform a
            boolean OR. If more than one search element is specified
            within a single <xosid:token>ParameterQuery</xosid:token>
            these elements form a boolean AND. 

            <xosid:pbreak/>

            <xosid:token>getParametersByQuery()</xosid:token> is the
            basic search method and returns a list of
            <xosid:token>Parameters.</xosid:token> A more advanced
            search may be performed with
            <xosid:token>getParametersBySearch(). </xosid:token>It
            accepts a <xosid:token>ParaneterSearch</xosid:token>
            interface in addition to the query interface for the
            purpose of specifying additional options affecting the
            entire search, such as ordering.
            <xosid:token>getParametersBySearch()</xosid:token> returns
            a <xosid:token>ParameterSearchResults</xosid:token>
            interface that can be used to access the resulting
            <xosid:token>ParameterList</xosid:token> or be used to
            perform a search within the result set through
            <xosid:token>ParameterSearch.</xosid:token>
            Two views of the configuration data are defined;

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    federated: parameters defined in configurations
                    that are a parent of this configuration in the
                    configuration hierarchy are included
                </xosid:element>
                 <xosid:element>
                    isolated: parameters are contained to within this configuration
                </xosid:element>
            </xosid:outline>
             
        </xosid:description>


        <xosid:method xosid:name="getRegistryId">
            <xosid:description>
                Gets the <xosid:token>Registry</xosid:token>
                <xosid:token>Id</xosid:token> associated with this
                session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Registry</xosid:token>
                    <xosid:token>Id</xosid:token> associated with this
                    session
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistry">
            <xosid:description>
                Gets the <xosid:token>Registry</xosid:token> associated
                with this session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Registry"/>
                <xosid:description>
                    the <xosid:token>Registry</xosid:token> associated
                    with this session
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canSearchParameters">
            <xosid:description>
                Tests if this user can perform
                <xosid:token>Parameter</xosid:token> searches. A return
                of true does not guarantee successful authorization. A
                return of false indicates that it is known all methods
                in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer search operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if lookup methods
                    are not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useFederatedRegistryView">
            <xosid:description>
                Federates the view for methods in this session. A
                federated view will include parameters from parent
                configurations in the registry hierarchy.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useIsolatedRegistryView">
            <xosid:description>
                Isolates the view for methods in this session. An
                isolated view restricts searches to this configuration
                only.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterQuery">
            <xosid:description>
                Gets a paraameter query interface.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueQuery"/>
                <xosid:description>
                    the value query
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParametersByQuery">
            <xosid:description>
                Gets a list of <xosid:token>Parameters</xosid:token>
                matching the given query interface. Each element in the
                array is OR'd.
            </xosid:description>
            <xosid:parameter xosid:name="parameterQueries">
                <xosid:interfaceType xosid:type="osid.configuration.ValueQuery" xosid:array="true"/>
                <xosid:description>
                    the search query array
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterList"/>
                <xosid:description>
                    the returned
                    <xosid:token>ParameterList</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterQueries</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    a query form is not of this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterSearch">
            <xosid:description>
                Gets a parameter search interface. The returned query
                only makes available the core
                <xosid:token>Paraneter</xosid:token> interface and does
                not support additional interface types.
               
                <xosid:token>getParameterSearchForInterfaceType()</xosid:token>
                should be used if additional interface types are
                required.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterSearch"/>
                <xosid:description>
                    the paraneter search interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueSearchForInterfaceType">
            <xosid:description>
                Gets a parameter search interface of the specified
                type. The returned query contains the search interface
                extension corresponding to the specified
                <xosid:token>Type.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="parameterSearchInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type of search interface to retrieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterSearch"/>
                <xosid:description>
                    the search results
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>

                                        <xosid:token>parameterSearchInterfaceType</xosid:token>
                    is <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>ConfigurationManager.supportsParameterType(parameterSearchInterfaceType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParametersBySearch">
            <xosid:description>
                Gets a list of <xosid:token>Values</xosid:token>
                matching the given search query using the given search
                interface. Each element in the array is OR'd.
            </xosid:description>
            <xosid:parameter xosid:name="parameterQueries">
                <xosid:interfaceType xosid:type="osid.configuration.ParameterQuery" xosid:array="true"/>
                <xosid:description>
                    the search query array
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="parameterSearch">
                <xosid:interfaceType xosid:type="osid.configuration.ValueSearch"/>
                <xosid:description>
                    the search options
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterSearchResults"/>
                <xosid:description>
                    the results
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterQueries
                   </xosid:token>or <xosid:token>
                    parameterSearch</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>parameterSearch</xosid:token> or a
                    query form is not of this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ParameterAdminSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session creates, updates and removes parameters from a
            registry. The data for create and update is provided by the
            consumer via the form object. The parameter type specifies
            the format for associated values.
        </xosid:description>


        <xosid:method xosid:name="getRegistryId">
            <xosid:description>
                Gets the <xosid:token>Registry</xosid:token>
                <xosid:token>Id</xosid:token> associated with this
                session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Registry Id</xosid:token>
                    associated with this session
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistry">
            <xosid:description>
                Gets the <xosid:token>Registry</xosid:token> associated
                with this session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Registry"/>
                <xosid:description>
                    the <xosid:token>Registry</xosid:token> associated
                    with this session
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterFormForCreate">
            <xosid:description>
                Gets the paramater form for creating new parameters.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterForm"/>
                <xosid:description>
                    the parameter form
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="createParamater">
            <xosid:description>
                Creates a new <xosid:token>Parameter.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="parameterForm">
                <xosid:interfaceType xosid:type="osid.configuration.ParameterForm"/>
                <xosid:description>
                    the form for this
                    <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Parameter"/>
                <xosid:description>
                    the new <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ALREADY_EXISTS" xosid:category="User">
                <xosid:description>
                    attempt at duplicating a property the underlying
                    system is enforcing to be unique
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    one or more of the form elements is invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterForm</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>parameterForm</xosid:token> is not
                    supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canUpdateParameters">
            <xosid:description>
                Tests if this user can update
                <xosid:token>Parameters.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known updating a
                <xosid:token>Parameter</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer update operations to an unauthorized user.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Parameter</xosid:token> modification
                    is not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canUpdateParameter">
            <xosid:description>
                Tests if this user can update a specified
                <xosid:token>Parameter.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known updating the
                <xosid:token>Parameter</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer update operations to an unauthoirzed user.
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if parameter
                    modification is not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                If the <xosid:token>parameterId</xosid:token> is not
                found, then it is acceptable to return false to
                indicate the lack of an update available.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="getParameterFormForUpdate">
            <xosid:description>
                Gets the parameter form for updating an existing
                parameters.
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterForm"/>
                <xosid:description>
                    the parameter form
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="updateParameter">
            <xosid:description>
                Updates an existing parameter.
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="parameterForm">
                <xosid:interfaceType xosid:type="osid.configuration.ParameterForm"/>
                <xosid:description>
                    the form containing the elements to be updated
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    the form contains an invalid value
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId
                   </xosid:token>or <xosid:token>
                    parameterForm</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>form</xosid:token> is not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canDeleteParameters">
            <xosid:description>
                Tests if this user can delete
                <xosid:token>Parameters.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known deleting a
                <xosid:token>Parameter</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer delete operations to an unauthorized user.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Parameter</xosid:token> deletion is
                    not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canDeleteParameter">
            <xosid:description>
                Tests if this user can delete a specified
                <xosid:token>Parameter.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known deleting the
                <xosid:token>Parameter</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer delete operations to an unauthorized user.
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Parameter</xosid:token> deletion is
                    not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                If the <xosid:token>parameterId</xosid:token> is not
                found, then it is acceptable to return false to
                indicate the lack of an delete available.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="deleteParameter">
            <xosid:description>
                Deletes a <xosid:token>Parameter.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Parameter</xosid:token> to remove
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="addIdToParameter">
            <xosid:description>
                Adds an <xosid:token>Id</xosid:token> to a
                <xosid:token>Parameter</xosid:token> for the purpose
                of creating compatibility. The primary
                <xosid:token>Id</xosid:token> of the
                <xosid:token>Parameter</xosid:token> is determined by
                the provider. The new <xosid:token>Id</xosid:token>
                performs as an alias to the primary
                <xosid:token>Id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of a
                    <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="aliasId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the alias <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="ALREADY_EXISTS" xosid:category="User">
                <xosid:description>
                    <xosid:token>aliasId</xosid:token> is already
                    assigned
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> or
                    <xosid:token>aliasId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ParameterNotificationSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session defines methods to receive notifications on
            adds/changes to <xosid:token>Configurations</xosid:token>
            and their properties. This session is intended for adapters
            and providers needing to synchronize their state with this
            service without the use of polling. Notifications are
            cancelled when this session is closed.

            <xosid:pbreak/>

            Two views are defined;

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    federated: parameters defined in configurations
                    that are a parent of this configuration in the
                    configuration hierarchy are included for notifications
                </xosid:element>
                 <xosid:element>
                    isolated: notifications are restricted to
                    parameters are defined to within this registry
                </xosid:element>
            </xosid:outline>
            The methods
            <xosid:token>federateParameterView()</xosid:token> and
            <xosid:token>isolateParameterView()</xosid:token> behave
            as a radio group and one should be selected before invoking
            any lookup methods.
        </xosid:description>


        <xosid:method xosid:name="getRegistryId">
            <xosid:description>
                Gets the <xosid:token>Registry</xosid:token>
                <xosid:token>Id</xosid:token> associated with this
                session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Registry Id</xosid:token>
                    associated with this session
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistry">
            <xosid:description>
                Gets the <xosid:token>Registry</xosid:token> associated
                with this session.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Registry"/>
                <xosid:description>
                    the <xosid:token>Registry</xosid:token> associated
                    with this session
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canRegisterForParameterNotifications">
            <xosid:description>
                Tests if this user can register for
                <xosid:token>Parameter</xosid:token> notifications. A
                return of true does not guarantee successful
                authorization. A return of false indicates that it is
                known all methods in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer notification operations.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if notification
                    methods are not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useFederatedRegistryView">
            <xosid:description>
                Federates the view for methods in this session. A
                federated view will include parameters in registries of
                which this registries is a child in the registry
                hierarchy.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useIsolatedRegistryView">
            <xosid:description>
                Isolates the view for methods in this session. An
                isolated view restricts notifications for parameter
                values to this registry only.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForNewParameters">
            <xosid:description>
                Assigns a callback for notifications of new parameters.
               
                <xosid:token>ParameterReceiver.newParameter()</xosid:token>
                is invoked when a new
                <xosid:token>Parameter</xosid:token> is added to this
                regsitry.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForChangedParameters">
            <xosid:description>
                Assigns a callback for notification of updated
                parameters.
                <xosid:token>ParameterReceiver.changedParameter()</xosid:token>
                is invoked when a <xosid:token>Parameter</xosid:token>
                is changed in this registry.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForChangedParameter">
            <xosid:description>
                Assigns a callback for notifications of an update to a
                parameter.
                <xosid:token>ParamaterReceiver.changedParameter()</xosid:token>
                is invoked when the specified
                <xosid:token>Parameter</xosid:token> is changed in this
                registry.
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Parameter</xosid:token> to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a <xosid:token>Parameter</xosid:token> was not
                    found identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedParameters">
            <xosid:description>
                Assigns a callback for notification of deleted
                parameters.
                <xosid:token>ParameterReceiver.deletedParamater()</xosid:token>
                is invoked when a <xosid:token>Parameter</xosid:token>
                is deleted or removed from this registry.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedParameter">
            <xosid:description>
                Assigns a callback for notifications of a deleted
                parameter.
                <xosid:token>ParameterReceiver.deletedParameter()</xosid:token>
                is invoked when the specified
                <xosid:token>Parameter</xosid:token> is deleted or
                removed from this registry.
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Parameter</xosid:token> to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a <xosid:token>Parameter</xosid:token> was not
                    found identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ParameterConfigurationSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session defines methods for accessing the
            configurations of a parameter.

            <xosid:pbreak/>

            This lookup session defines two views:

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    comparative view: elements may be silently omitted
                    or re-ordered 
                </xosid:element>
                 <xosid:element>
                    plenary view: provides a complete result set or is
                    an error condition
                </xosid:element>
            </xosid:outline>
             
        </xosid:description>


        <xosid:method xosid:name="useComparativeParameterView">
            <xosid:description>
                The returns from the lookup methods may omit or
                translate elements based on this session, such as
                authorization, and not result in an error. This view is
                used when greater interoperability is desired at the
                expense of precision.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="usePlenaryParameterView">
            <xosid:description>
                A complete view of the
                <xosid:token>Parameter</xosid:token> returns is
                desired. Methods will return what is requested or
                result in an error. This view is used when greater
                precision is desired at the expense of
                interoperability.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canLookupParameterConfigurations">
            <xosid:description>
                Tests if this user can perform lookups on
                configurations of parameters. A return of true does not
                guarantee successful authorization. A return of false
                indicates that it is known all methods in this session
                will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer lookup operations.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if lookups are not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterIdsByConfiguration">
            <xosid:description>
                Gets the list of <xosid:token>Parameter</xosid:token>
                <xosid:token>Ids</xosid:token> associated with a
                <xosid:token>Configuration.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    list of matching parameter
                    <xosid:token>Ids</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParametersByConfiguration">
            <xosid:description>
                Gets the list of <xosid:token>Parameters</xosid:token>
                associated with a
                <xosid:token>Configuration.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterList"/>
                <xosid:description>
                    list of matching parameters
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterIdsByConfigurations">
            <xosid:description>
                Gets the list of <xosid:token>Parameter
                Ids</xosid:token> associated with a list of
                <xosid:token>Configurations.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="configurationIdList">
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    list of configurations
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    list of parameter <xosid:token>Ids</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationIdList</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParametersByConfigurations">
            <xosid:description>
                Gets the list of <xosid:token>Parameters</xosid:token>
                associated with a list of
                <xosid:token>Configurations.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="configurationIdList">
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    list of configurations
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterList"/>
                <xosid:description>
                    list of parameters
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationIdList</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationIdsByParameter">
            <xosid:description>
                Gets the <xosid:token>Configuration Ids</xosid:token>
                mapped to a <xosid:token>Parameter.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    <xosid:token>Id</xosid:token> of a
                    <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    list of configuration
                    <xosid:token>Ids</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationsByParameter">
            <xosid:description>
                Gets the <xosid:token>Configurations</xosid:token>
                mapped to a <xosid:token>Parameter.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    <xosid:token>Id</xosid:token> of a
                    <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationList"/>
                <xosid:description>
                    list of configurations
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ParameterConfigurationAssignmentSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods to re-assign
            <xosid:token>Parameters</xosid:token> to
            <xosid:token>Configurations.</xosid:token> A
            <xosid:token>Parameter</xosid:token> may appear in
            multiple <xosid:token>Configurations</xosid:token> and
            removing the last reference to a
            <xosid:token>Parameter</xosid:token> is the equivalent of
            deleting it which may or may not be permitted. Each
            <xosid:token>Configuration</xosid:token> may have its own
            authorizations as to who is allowed to operate on it. 

            <xosid:pbreak/>

            Moving or adding a reference of a
            <xosid:token>Parameter</xosid:token> to another
            <xosid:token>Configuration</xosid:token> is not a copy
            operation (eg: does not change its
            <xosid:token>Id</xosid:token>).
        </xosid:description>


        <xosid:method xosid:name="canManageParameterConfigurations">
            <xosid:description>
                Tests if this user can change parameter configuration
                mappings. A return of true does not guarantee
                successful authorization. A return of false indicates
                that it is known all methods in this session will
                result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may not wish
                to offer management operations.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if parameter
                    configuration management is not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="assignParameterToConfiguration">
            <xosid:description>
                Adds an existing <xosid:token>Parameter</xosid:token>
                to a <xosid:token>Configuration.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="ALREADY_EXISTS" xosid:category="User">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> and
                    <xosid:token>configurationId</xosid:token> already
                    mapped
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> or
                    <xosid:token>configurationId</xosid:token> not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId
                   </xosid:token>or <xosid:token>
                    configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="unassignParameterFromConfiguration">
            <xosid:description>
                Removes a <xosid:token>Parameter</xosid:token> from a
                <xosid:token>Configuration.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the Id of the <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the Id of the
                    <xosid:token>Configuration</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> or
                    <xosid:token>configurationId</xosid:token> not
                    found or is not mapped
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId
                   </xosid:token>or <xosid:token>
                    configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ParameterRegistrySession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session defines methods for accessing the registries
            of a parameter.

            <xosid:pbreak/>

            This lookup session defines two views:

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    comparative view: elements may be silently omitted
                    or re-ordered 
                </xosid:element>
                 <xosid:element>
                    plenary view: provides a complete result set or is
                    an error condition
                </xosid:element>
            </xosid:outline>
             
        </xosid:description>


        <xosid:method xosid:name="useComparativeParameterView">
            <xosid:description>
                The returns from the lookup methods may omit or
                translate elements based on this session, such as
                authorization, and not result in an error. This view is
                used when greater interoperability is desired at the
                expense of precision.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="usePlenaryParameterView">
            <xosid:description>
                A complete view of the
                <xosid:token>Parameter</xosid:token> returns is
                desired. Methods will return what is requested or
                result in an error. This view is used when greater
                precision is desired at the expense of
                interoperability.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canLookupParameterRegistries">
            <xosid:description>
                Tests if this user can perform lookups on registries of
                parameters. A return of true does not guarantee
                successful authorization. A return of false indicates
                that it is known all methods in this session will
                result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer lookup operations.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if lookups are not
                    authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterIdsByRegistry">
            <xosid:description>
                Gets the list of <xosid:token>Parameter</xosid:token>
                <xosid:token>Ids</xosid:token> associated with a
                <xosid:token>Registry.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    <xosid:token>Id</xosid:token> of the
                    <xosid:token>Registry</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    list of matching parameter
                    <xosid:token>Ids</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParametersByRegistry">
            <xosid:description>
                Gets the list of <xosid:token>Parameters</xosid:token>
                associated with a <xosid:token>Registry.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    <xosid:token>Id</xosid:token> of the
                    <xosid:token>Registry</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterList"/>
                <xosid:description>
                    list of matching parameters
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterIdsByRegistries">
            <xosid:description>
                Gets the list of <xosid:token>Parameter
                Ids</xosid:token> associated with a list of registries.
            </xosid:description>
            <xosid:parameter xosid:name="registryIdList">
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    list of registries
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    list of parameter <xosid:token>Ids</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterIdList</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParametersByRegistries">
            <xosid:description>
                Gets the list of <xosid:token>Parameters</xosid:token>
                associated with a list of registries.
            </xosid:description>
            <xosid:parameter xosid:name="registryIdList">
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    list of registries
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterList"/>
                <xosid:description>
                    list of parameters
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryIdList</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistryIdsByParameter">
            <xosid:description>
                Gets the <xosid:token>Registry Ids</xosid:token> mapped
                to a <xosid:token>Parameter.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    <xosid:token>Id</xosid:token> of a
                    <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    list of registry <xosid:token>Ids</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistriesByParameter">
            <xosid:description>
                Gets the registries mapped to a
                <xosid:token>Parameter.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    <xosid:token>Id</xosid:token> of a
                    <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryList"/>
                <xosid:description>
                    list of registries
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ParameterRegistryAssignmentSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods to re-assign
            <xosid:token>Parameters</xosid:token> to
            <xosid:token>Registry</xosid:token> objects.A
            <xosid:token>Parameter</xosid:token> may appear in
            multiple registries and removing the last reference to a
            <xosid:token>Parameter</xosid:token> is the equivalent of
            deleting it which may or may not be permitted. Each
            <xosid:token>Registry</xosid:token> may have its own
            authorizations as to who is allowed to operate on it. 

            <xosid:pbreak/>

            Moving or adding a reference of a
            <xosid:token>Parameter</xosid:token> to another
            <xosid:token>Registry</xosid:token> is not a copy
            operation (eg: does not change its
            <xosid:token>Id</xosid:token>).
        </xosid:description>


        <xosid:method xosid:name="canManageParameterRegistries">
            <xosid:description>
                Tests if this user can change parameter registry
                mappings. A return of true does not guarantee
                successful authorization. A return of false indicates
                that it is known all methods in this session will
                result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may not wish
                to offer management operations.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if parameter
                    registry management is not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="assignParameterToRegistry">
            <xosid:description>
                Adds an existing <xosid:token>Parameter</xosid:token>
                to a <xosid:token>Registry.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Registry</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="ALREADY_EXISTS" xosid:category="User">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> and
                    <xosid:token>registryId</xosid:token> already
                    mapped
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> or
                    <xosid:token>registryId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId
                   </xosid:token>or <xosid:token>
                    registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="unassignParameterFromRegistry">
            <xosid:description>
                Removes a <xosid:token>Parameter</xosid:token> from a
                <xosid:token>Registry.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the Id of the <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the Id of the <xosid:token>Registry</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>parameterId</xosid:token> or
                    <xosid:token>registryId</xosid:token> not found or
                    is not mapped
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterId
                   </xosid:token>or <xosid:token>
                    registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ConfigurationLookupSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods for retrieving
            <xosid:token>Configuration</xosid:token> objects. The
            <xosid:token>Configuration </xosid:token>represents a
            collection of parameter values.

            <xosid:pbreak/>

            This session defines views that offer differing behaviors
            when retrieving multiple objects.

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    comparative view: elements may be silently omitted
                    or re-ordered 
                </xosid:element>
                 <xosid:element>
                    plenary view: provides a complete set or is an
                    error condition
                </xosid:element>
            </xosid:outline>
            Generally, the comparative view should be used for most
            applications as it permits operation even if there is data
            that cannot be accessed. For example, a browsing
            application may only need to examine the
            <xosid:token>Configurations</xosid:token> it can access,
            without breaking execution. However, an assessment may only
            be useful if all <xosid:token>Configurations</xosid:token>
            referenced by it are available, and a test-taking
            applicationmay sacrifice some interoperability for the sake
            of precision.
            Configurations may have an additional interface indicated
            by their respective types. The interface extension is
            accessed via the <xosid:token>Configuration.</xosid:token>
            The returns may not be cast directly from the returns in
            the lookup methods.
        </xosid:description>


        <xosid:method xosid:name="canLookupConfigurations">
            <xosid:description>
                Tests if this user can perform
                <xosid:token>Configuration</xosid:token> lookups. A
                return of true does not guarantee successful
                authorization. A return of false indicates that it is
                known all methods in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer lookup operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if lookup methods
                    are not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useComparativeConfigurationView">
            <xosid:description>
                The returns from the lookup methods may omit or
                translate elements based on this session, such as
                authorization, and not result in an error. This view is
                used when greater interoperability is desired at the
                expense of precision.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="usePlenaryConfigurationView">
            <xosid:description>
                A complete view of the
                <xosid:token>Configuration</xosid:token> returns is
                desired. Methods will return what is requested or
                result in an error. This view is used when greater
                precision is desired at the expense of
                interoperability.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfiguration">
            <xosid:description>
                Gets the <xosid:token>Configuration</xosid:token>
                specified by its <xosid:token>Id. </xosid:token>In
                plenary mode, the exact <xosid:token>Id</xosid:token>
                is found or a <xosid:token>NOT_FOUND</xosid:token>
                results. Otherwise, the returned
                <xosid:token>Configuration</xosid:token> may have a
                different <xosid:token>Id</xosid:token> than requested,
                such as the case where a duplicate
                <xosid:token>Id</xosid:token> was assigned to a
                <xosid:token>Configuration</xosid:token> and retained
                for compatibility.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token> to
                    rerieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Configuration"/>
                <xosid:description>
                    the <xosid:token>Configuration</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    no <xosid:token>Configuration</xosid:token> found
                    with the given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationsByIds">
            <xosid:description>
                Gets a <xosid:token>ConfigurationList</xosid:token>
                corresponding to the given <xosid:token>IdList.
                </xosid:token>In plenary mode, the returned list
                contains all of the configurations specified in the
                <xosid:token>Id</xosid:token> list, in the order of
                the list, including duplicates, or an error results if
                an <xosid:token>Id</xosid:token> in the supplied list
                is not found or inaccessible. Otherwise, inaccessible
                <xosid:token>Configurations</xosid:token> may be
                omitted from the list and may present the elements in
                any order including returning a unique set.
            </xosid:description>
            <xosid:parameter xosid:name="configurationIdList">
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    the list of <xosid:token>Ids</xosid:token> to
                    rerieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationList"/>
                <xosid:description>
                    the returned <xosid:token>Configuration
                    list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    an <xosid:token>Id was</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationIdList</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationsByGenusType">
            <xosid:description>
                Gets an <xosid:token>ConfigurationList</xosid:token>
                corresponding to the given configuration genus
                <xosid:token>Type </xosid:token>which does not include
                configuration types derived from the specified
                <xosid:token>Type. </xosid:token>In plenary mode, the
                returned list contains all known configurations or an
                error results. Otherwise, the returned list may contain
                only those configurations that are accessible through
                this session. In both cases, the order of the set is
                not specified.
            </xosid:description>
            <xosid:parameter xosid:name="configurationGenusType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a configuration genus type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationList"/>
                <xosid:description>
                    the returned <xosid:token>Configuration
                    list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationGenusType</xosid:token>
                    is <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationsByParentGenusType">
            <xosid:description>
                Gets an <xosid:token>ConfigurationList</xosid:token>
                corresponding to the given configuration genus
                <xosid:token>Type </xosid:token>and include any
                additional configurations with genus types derived from
                the specified <xosid:token>Type. </xosid:token>In
                plenary mode, the returned list contains all known
                configurations or an error results. Otherwise, the
                returned list may contain only those configurations
                that are accessible through this session. In both
                cases, the order of the set is not specified.
            </xosid:description>
            <xosid:parameter xosid:name="configurationGenusType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a configuration genus type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationList"/>
                <xosid:description>
                    the returned <xosid:token>Configuration
                    list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationGenusType</xosid:token>
                    is <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationsByInterfaceType">
            <xosid:description>
                Gets a <xosid:token>ConfigurationList</xosid:token>
                corresponding to the given configuration interface
                <xosid:token>Type. </xosid:token>The set of
                repositories implementing the given interface type is
                returned. In plenary mode, the returned list contains
                all known configurations or an error results.
                Otherwise, the returned list may contain only those
                copnfigurations that are accessible through this
                session. In both cases, the order of the set is not
                specified.
            </xosid:description>
            <xosid:parameter xosid:name="configurationInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a configuration interface type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationList"/>
                <xosid:description>
                    the returned <xosid:token>Configuration
                    list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>

                                        <xosid:token>configurationInterfaceType</xosid:token>
                    is <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurations">
            <xosid:description>
                Gets all <xosid:token>Configurations,</xosid:token> In
                plenary mode, the returned list contains all known
                configurations or an error results. Otherwise, the
                returned list may contain only those configurations
                that are accessible through this session. In both
                cases, the order of the set is not specified.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationList"/>
                <xosid:description>
                    a list of <xosid:token>Configurations</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ConfigurationSearchSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods for searching among
            <xosid:token>Configuration</xosid:token> objects. The
            search query is constructed using the
            <xosid:token>ConfigurationQuery</xosid:token> interface.
            Multiple <xosid:token>ConfigurationQuery</xosid:token>
            interfaces may be submitted into a search to perform a
            boolean <xosid:token>OR.</xosid:token> If more than one
            search element is specified within a single
            <xosid:token>ConfigurationQuery,</xosid:token> these
            elements form a boolean <xosid:token>AND.</xosid:token>
            <xosid:token>getConfigurationsByQuery()</xosid:token> is
            the basic search method and returns a list of
            <xosid:token>Configuration</xosid:token> objects.A more
            advanced search may be performed with
            <xosid:token>getConfigurationsBySearch(). </xosid:token>It
            accepts a <xosid:token>ConfigurationSearch</xosid:token>
            interface in addition to the query interface for the
            purpose of specifying additional options affecting the
            entire search, such as ordering.
            <xosid:token>getConfigurationsBySearch()</xosid:token>
            returns a
            <xosid:token>ConfigurationSearchResults</xosid:token>
            interface that can be used to access the resulting
            <xosid:token>ConfigurationList</xosid:token> or be used to
            perform a search within the result set through
            <xosid:token>ConfigurationSearch.</xosid:token>

            <xosid:pbreak/>

            Configurations may have a query interface indicated by
            their respective interface types. The typed query interface
            is accessed via the
            <xosid:token>ConfigurationQuery.</xosid:token> The returns
            in this session may not be cast directly to these
            interfaces.
        </xosid:description>


        <xosid:method xosid:name="canSearchConfigurations">
            <xosid:description>
                Tests if this user can perform
                <xosid:token>Configuration</xosid:token> searches. A
                return of true does not guarantee successful
                authorization. A return of false indicates that it is
                known all methods in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer search operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if search methods
                    are not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationQuery">
            <xosid:description>
                Gets a configuration query interface. The returned
                query will not have a typed extension query.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationQuery"/>
                <xosid:description>
                    the configuration query
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationQueryForInterfaceType">
            <xosid:description>
                Gets a configuration query interface of the specified
                interface type. The returned query contains the method
                to access the query interface corresponding to the
                specified <xosid:token>Type </xosid:token>but must not
                be cast directly from this method return.
            </xosid:description>
            <xosid:parameter xosid:name="configurationInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type of query interface to retrieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationQuery"/>
                <xosid:description>
                    the configuration query
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>

                                        <xosid:token>configurationInterfaceType</xosid:token>
                    is <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>ConfigurationManager.supportsConfigurationInterfaceType(configurationInterfaceType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationsByQuery">
            <xosid:description>
                Gets a list of
                <xosid:token>Configurations</xosid:token> matching the
                given search interface. Each element in the array is
                OR'd.
            </xosid:description>
            <xosid:parameter xosid:name="configurationQueries">
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationQuery" xosid:array="true"/>
                <xosid:description>
                    the search query array
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationList"/>
                <xosid:description>
                    the returned
                    <xosid:token>ConfigurationList</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationQueries</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    a <xosid:token>configurationQuery</xosid:token> is
                    not of this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationSearch">
            <xosid:description>
                Gets a configuration search interface. The returned
                query only makes available the core
                <xosid:token>ConfigurationSearch</xosid:token>
                interface and does not support additional interface
                types.
                <xosid:token>getConfigurationSearchForInterfaceType()</xosid:token>
                should be used if additional interface types are
                required.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationSearch"/>
                <xosid:description>
                    the configuration search interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationSearchForInterfaceType">
            <xosid:description>
                Gets a configuration search interface of the specified
                type. The returned search interface provides access to
                the search interface corresponding to the specified
                <xosid:token>Type </xosid:token>but may not be cast
                directly from this method return.
            </xosid:description>
            <xosid:parameter xosid:name="configurationSearchInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type of query to retrieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationSearch"/>
                <xosid:description>
                    the configuration search options
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>

                                        <xosid:token>configurationInterfaceType</xosid:token>
                    is <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>ConfigurationManager.supportsConfigurationSearchType(configurationSearchInterfaceType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationsBySearch">
            <xosid:description>
                Gets a list of
                <xosid:token>Configurations</xosid:token> matching the
                given search interface. Each element in the array is
                OR'd.
            </xosid:description>
            <xosid:parameter xosid:name="configurationQueries">
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationQuery" xosid:array="true"/>
                <xosid:description>
                    the search query array
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="configurationSearch">
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationSearch"/>
                <xosid:description>
                    the search options
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationSearchResults"/>
                <xosid:description>
                    the search results
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationQueries
                   </xosid:token>or <xosid:token>
                    configurationSearch</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    a <xosid:token>configurationQuery</xosid:token> or
                    <xosid:token>configurationSearch</xosid:token> is
                    not of this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ConfigurationAdminSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session defines an interface to create, update and
            delete <xosid:token>Configuration</xosid:token> objects.
            The data for create and update is provided by the consumer
            via the form object.
        </xosid:description>


        <xosid:method xosid:name="canCreateConfigurations">
            <xosid:description>
                Tests if this user can create
                <xosid:token>Configurations.</xosid:token> A return of
                true does not guarantee successful authorization. A
                return of false indicates that it is known creating a
               C <xosid:token>onfiguration</xosid:token> will result
                in a <xosid:token>PERMISSION_DENIED.</xosid:token> This
                is intended as a hint to an application that may opt
                not to offer create operations to an unauthorized user.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Configuration</xosid:token> creation
                    is not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canCreateConfigurationWithInterfaceTypes">
            <xosid:description>
                Tests if this user can create a single
                <xosid:token>Configuration </xosid:token>using the
                desired interface types. A <xosid:token>Configuration
               </xosid:token>interface <xosid:token>
                Type</xosid:token> may specify the implementation of
                other more well-known <xosid:token>Types.</xosid:token>
                A provider may or may not accept the creation of a
                <xosid:token>Configuration</xosid:token> using
                anything other than the
                <xosid:token>ConfigurationForm</xosid:token> of the
                leaf interface <xosid:token>Type,</xosid:token> or may
                accept creation using one or more higher level
                interface <xosid:token>Types.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="configurationInterfaceTypes">
                <xosid:interfaceType xosid:type="osid.type.Type" xosid:array="true"/>
                <xosid:description>
                    array of types
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if
                    <xosid:token>Configuration</xosid:token> creation
                    using the specified
                    <xosid:token>Types</xosid:token> is supported,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>

                                        <xosid:token>configurationInterfaceTypes</xosid:token>
                    is <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRequiredConfigurationInterfaceTypesForCreate">
            <xosid:description>
                Gets the list of minimum required interface
                <xosid:token>Types</xosid:token> for creating a new
                <xosid:token>Configuration. </xosid:token>A new
                <xosid:token>Configuration</xosid:token> can be
                created using any one of the interface types returned
                in this list. This may be a series of leaf
                <xosid:token>Types,</xosid:token> or multiple higher
                level <xosid:token>Types</xosid:token> if creation
                requirements are more lenient. An empty list suggests
                no creates are supported as a root
                <xosid:token>Configuration</xosid:token> interface is
                always identified with its own
                <xosid:token>Type.</xosid:token>
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    one or more types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationFormForCreate">
            <xosid:description>
                Gets the configuration form for creating new
                configurations.
            </xosid:description>
            <xosid:parameter xosid:name="configurationInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a configuration interface type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationForm"/>
                <xosid:description>
                    the configuration form
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>

                                        <xosid:token>configurationInterfaceType</xosid:token>
                    is <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>canCreateConfigurationWithInterfaceTypes(configurationInterfaceType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="createConfiguration">
            <xosid:description>
                Creates a new <xosid:token>Configuration.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="configurationForms">
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationForm" xosid:array="true"/>
                <xosid:description>
                    the configuration forms
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Configuration"/>
                <xosid:description>
                    the new <xosid:token>Configuration</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ALREADY_EXISTS" xosid:category="User">
                <xosid:description>
                    attempt to add a
                    <xosid:token>Configuration</xosid:token> when one
                    by that name or unique property already exists
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    the form contains an invalid value
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationForms</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    a <xosid:token>configurationForm</xosid:token> is
                    not supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canUpdateConfigurations">
            <xosid:description>
                Tests if this user can update
                <xosid:token>Configurations.</xosid:token> A return of
                true does not guarantee successful authorization. A
                return of false indicates that it is known updating a
               C <xosid:token>onfiguration</xosid:token> will result
                in a <xosid:token>PERMISSION_DENIED.</xosid:token> This
                is intended as a hint to an application that may opt
                not to offer update operations to an unauthorized user.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Configuration</xosid:token>
                    modification is not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canUpdateConfiguration">
            <xosid:description>
                Tests if this user can update a specified
                <xosid:token>Configuration.</xosid:token> A return of
                true does not guarantee successful authorization. A
                return of false indicates that it is known updating the
                <xosid:token>Configuration</xosid:token> will result
                in a <xosid:token>PERMISSION_DENIED.</xosid:token> This
                is intended as a hint to an application that may opt
                not to offer update operations to an unauthoirzed user.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    configuration
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if configuration
                    modification is not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                If the <xosid:token>configurationId</xosid:token> is
                not found, then it is acceptable to return false to
                indicate the lack of an update available.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationFormForUpdate">
            <xosid:description>
                Gets the configuration form for updating existing
                configurations. A new configuration form should be
                requested for each update transaction.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    <xosid:token>Id</xosid:token> of a
                    <xosid:token>Configuration</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationForm"/>
                <xosid:description>
                    the configuration form
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="updateConfiguration">
            <xosid:description>
                Updates an existing
                <xosid:token>Configuration.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token> to update
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="configurationForm">
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationForm"/>
                <xosid:description>
                    the configuration form
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    the form contains an invalid value
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> or
                    <xosid:token>configurationForm</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>configurationForm</xosid:token> is not
                    supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canDeleteConfigurations">
            <xosid:description>
                Tests if this user can delete
                <xosid:token>Configurations.</xosid:token> A return of
                true does not guarantee successful authorization. A
                return of false indicates that it is known deleting a
                <xosid:token>Configuration</xosid:token> will result
                in a <xosid:token>PERMISSION_DENIED.</xosid:token> This
                is intended as a hint to an application that may opt
                not to offer delete operations to an unauthorized user.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Configuration</xosid:token> deletion
                    is not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canDeleteConfiguration">
            <xosid:description>
                Tests if this user can delete a specified
                <xosid:token>Configuration.</xosid:token> A return of
                true does not guarantee successful authorization. A
                return of false indicates that it is known deleting the
                <xosid:token>Configuration</xosid:token> will result
                in a <xosid:token>PERMISSION_DENIED.</xosid:token> This
                is intended as a hint to an application that may opt
                not to offer delete operations to an unauthorized user.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    configuration
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Configuration</xosid:token> deletion
                    is not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                If the <xosid:token>configurationId</xosid:token> is
                not found, then it is acceptable to return false to
                indicate the lack of an delete available.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="deleteConfiguration">
            <xosid:description>
                Deletes a <xosid:token>Configuration.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token> to delete
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="addIdToConfiguration">
            <xosid:description>
                Adds an <xosid:token>Id</xosid:token> to a
                <xosid:token>Configuration</xosid:token> for the
                purpose of creating compatibility. The primary
                <xosid:token>Id</xosid:token> of the
                <xosid:token>Configuration</xosid:token> is determined
                by the provider. The new <xosid:token>Id</xosid:token>
                performs as an alias to the primary
                <xosid:token>Id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of a
                    <xosid:token>Configuration</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="aliasId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the alias <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="ALREADY_EXISTS" xosid:category="User">
                <xosid:description>
                    <xosid:token>aliasId</xosid:token> is already
                    assigned
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> or
                    <xosid:token>aliasId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ConfigurationNotificationSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session defines methods to receive notifications on
            adds/changes to <xosid:token>Configurations.</xosid:token>
            Notrifications related to adding or removing of parameters
            are handled through the
            <xosid:token>ValueNotificationSession.</xosid:token> This
            session is intended for adapters and providers needing to
            synchronize their state with this service without the use
            of polling. Notifications are cancelled when this session
            is closed.
        </xosid:description>


        <xosid:method xosid:name="canRegisterForConfigurationNotifications">
            <xosid:description>
                Tests if this user can register for
                <xosid:token>Configuration</xosid:token>
                notifications. A return of true does not guarantee
                successful authorization. A return of false indicates
                that it is known all methods in this session will
                result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer notification operations.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if notification
                    methods are not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForNewConfigurations">
            <xosid:description>
                Registers for notifications of new configurations.
               
                <xosid:token>ConfigurationReceiver.newConfiguration()</xosid:token>
                is invoked when a new
                <xosid:token>Configuration</xosid:token> is created.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForNewConfigurationAncestors">
            <xosid:description>
                Registers for notification if an ancestor is added to
                the specified configuration in the configuration
                hierarchy.
                <xosid:token>ConfigurationReceiver.newConfigurationAncestor()</xosid:token>
                is invoked when the specified configuration experiences
                an addition in ancestry.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    configuration to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a configuration was not found identified by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForNewConfigurationDescendants">
            <xosid:description>
                Registers for notification if a descedant is added to
                the specified configuration in the configuration
                hierarchy.
                <xosid:token>ConfigurationReceiver.newConfigurationDescendant()</xosid:token>
                is invoked when the specified configuration experiences
                an addition in descendants.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    configuration to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a configuration was not found identified by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForChangedConfigurations">
            <xosid:description>
                Registers for notification of updated configurations.
               
                <xosid:token>ConfigurationReceiver.changedConfiguration()</xosid:token>
                is invoked when a configuration is changed.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForChangedConfiguration">
            <xosid:description>
                Registers for notifications of an update to a
                configuration.
                <xosid:token>ConfigurationReceiver.changedConfiguration()</xosid:token>
                is invoked when the specified
                <xosid:token>Configuration</xosid:token> is changed.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token> to
                    monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a <xosid:token>Configuration</xosid:token> was not
                    found identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedConfigurations">
            <xosid:description>
                Registers for notification of deleted configurations.
               
                <xosid:token>ConfigurationReceiver.deletedConfiguration()</xosid:token>
                is invoked when a
                <xosid:token>Configuration</xosid:token> is deleted.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedConfiguration">
            <xosid:description>
                Registers for notifications of a deleted configuration.
               
                <xosid:token>ConfiguratinReceiver.deletedConfiguration()</xosid:token>
                is invoked when the specified configuration is deleted.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token> to
                    monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a <xosid:token>Configuration</xosid:token> was not
                    found identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedConfigurationAncestors">
            <xosid:description>
                Registers for notification if an ancestor is removed
                from the specified configuration in the configuration
                hierarchy.
                <xosid:token>ConfigurationReceiver.deletedConfigurationAncestor()</xosid:token>
                is invoked when the specified configuration experiences
                a removal of an ancestor.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    configuration to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a configuration was not found identified by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedConfigurationDescendants">
            <xosid:description>
                Registers for notification if a descendant is removed
                from fthe specified configuration in the configuration
                hierarchy.
                <xosid:token>ConfigurationReceiver.deletedConfigurationDescednant()</xosid:token>
                is invoked when the specified configuration experiences
                a removal of one of its descdendents.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    configuration to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a configuration was not found identified by the
                    given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ConfigurationHierarchySession"> 
        <xosid:implements xosid:interface="osid.hierarchy.HierarchyTraversalSession"/>
        <xosid:description>
            This session defines methods for traversing a hiercrhy of
            <xosid:token>Configuration</xosid:token> objects. Each
            node in the hierarchy is a unique
            <xosid:token>Configuration.</xosid:token> The hierarchy may
            be traversed recursively to establish the tree structure
            through <xosid:token>getParents()</xosid:token> and
            <xosid:token>getChildren().</xosid:token> To relate these
            <xosid:token>Ids</xosid:token> to another OSID,
            <xosid:token>getAncestors()</xosid:token> and
            <xosid:token>getDescendants()</xosid:token> can be used
            for retrievals that can be used for bulk lookups in other
            OSIDs. Any <xosid:token>Configuration</xosid:token>
            available in the Configuration OSID is known to this
            hierarchy but does not appear in the hierarchy traversal
            until added as a root node or a child of another node.

            <xosid:pbreak/>

            A user may not be authorized to traverse the entire
            hierarchy. Parts of the hierarchy may be made invisible
            through omission from the returns of
            <xosid:token>getParents()</xosid:token> or
            <xosid:token>getChildren()</xosid:token> in lieu of a
            <xosid:token>PERMISSION_DENIED</xosid:token> error that
            may disrupt the traversal through authorized pathways.

            <xosid:pbreak/>

            This session defines views that offer differing behaviors
            when retrieving multiple objects.

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    comparative view: configuration elements may be
                    silently omitted or re-ordered 
                </xosid:element>
                 <xosid:element>
                    plenary view: provides a complete set or is an
                    error condition
                </xosid:element>
            </xosid:outline>
             
        </xosid:description>


        <xosid:method xosid:name="useComparativeConfigurationView">
            <xosid:description>
                The returns from the configuration methods may omit or
                translate elements based on this session, such as
                authorization, and not result in an error. This view is
                used when greater interoperability is desired at the
                expense of precision.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="usePlenaryConfigurationView">
            <xosid:description>
                A complete view of the
                <xosid:token>Configuration</xosid:token> returns is
                desired. Methods will return what is requested or
                result in an error. This view is used when greater
                precision is desired at the expense of
                interoperability.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRootConfigurations">
            <xosid:description>
                Gets the root configurations in the configuration
                hierarchy. A node with no parents is an orphan. While
                all configuration <xosid:token>Ids</xosid:token> are
                known to the hierarchy, an orphan does not appear in
                the hierarchy unless explicitly added as a root node or
                child of another node.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationList"/>
                <xosid:description>
                    the root configurations
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParentConfigurations">
            <xosid:description>
                Gets the parents of the given configuration.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> to query
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationList"/>
                <xosid:description>
                    the parents of the configuration
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAncestorConfigurations">
            <xosid:description>
                Gets the ancestors of the given configuration.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> to query
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="levels">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the maximum number of levels to include. A value of
                    1 returns the same set as
                    <xosid:token>getParentConfigurations().
                    </xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationList"/>
                <xosid:description>
                    the ancestors of the configuration
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getChildConfigurations">
            <xosid:description>
                Gets the children of the given configuration.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> to query
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationList"/>
                <xosid:description>
                    the children of the configuration
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getDescendantConfigurations">
            <xosid:description>
                Gets the descendants of the given configuration.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> to query
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="levels">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the maximum number of levels to include. A value of
                    1 returns the same set as
                    <xosid:token>getChildConfigurations().
                    </xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationList"/>
                <xosid:description>
                    the descendants of the configuration
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> not
                    found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ConfigurationHierarchyDesignSession"> 
        <xosid:implements xosid:interface="osid.hierarchy.HierarchyDesignSession"/>
        <xosid:description>
            This session defines methods for managing a hiercrhy of
            <xosid:token>Configuration</xosid:token> objects. Each
            node in the hierarchy is a unique
            <xosid:token>Configuration.</xosid:token>
        </xosid:description>

    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.RegistryLookupSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods for retrieving
            <xosid:token>Registry</xosid:token> objects. The
            <xosid:token>Registry </xosid:token>represents a
            collection of parameter definitions.

            <xosid:pbreak/>

            This session defines views that offer differing behaviors
            when retrieving multiple objects.

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    comparative view: elements may be silently omitted
                    or re-ordered 
                </xosid:element>
                 <xosid:element>
                    plenary view: provides a complete set or is an
                    error condition
                </xosid:element>
            </xosid:outline>
            Generally, the comparative view should be used for most
            applications as it permits operation even if there is data
            that cannot be accessed. For example, a browsing
            application may only need to examine the
            <xosid:token>Registry</xosid:token> elements it can
            access, without breaking execution. However, an assessment
            may only be useful if all
            <xosid:token>Registry</xosid:token> objects referenced by
            it are available, and a test-taking applicationmay
            sacrifice some interoperability for the sake of precision.
            Registries may have an additional interface indicated by
            their respective types. The interface extension is accessed
            via the <xosid:token>Registry.</xosid:token> The returns
            may not be cast directly from the returns in the lookup
            methods.
        </xosid:description>


        <xosid:method xosid:name="canLookupRegistries">
            <xosid:description>
                Tests if this user can perform
                <xosid:token>Registry</xosid:token> lookups. A return
                of true does not guarantee successful authorization. A
                return of false indicates that it is known all methods
                in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer lookup operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if lookup methods
                    are not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="useComparativeRegistryView">
            <xosid:description>
                The returns from the lookup methods may omit or
                translate elements based on this session, such as
                authorization, and not result in an error. This view is
                used when greater interoperability is desired at the
                expense of precision.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="usePlenaryRegistryView">
            <xosid:description>
                A complete view of the
                <xosid:token>Registry</xosid:token> returns is desired.
                Methods will return what is requested or result in an
                error. This view is used when greater precision is
                desired at the expense of interoperability.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistry">
            <xosid:description>
                Gets the <xosid:token>Registry</xosid:token> specified
                by its <xosid:token>Id. </xosid:token>In plenary mode,
                the exact <xosid:token>Id</xosid:token> is found or a
                <xosid:token>NOT_FOUND</xosid:token> results.
                Otherwise, the returned
                <xosid:token>Registry</xosid:token> may have a
                different <xosid:token>Id</xosid:token> than requested,
                such as the case where a duplicate
                <xosid:token>Id</xosid:token> was assigned to a
                <xosid:token>Registry</xosid:token> and retained for
                compatibility.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Registry</xosid:token> to rerieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Registry"/>
                <xosid:description>
                    the <xosid:token>Registry</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    no <xosid:token>Registry</xosid:token> found with
                    the given <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistriesByIds">
            <xosid:description>
                Gets a <xosid:token>RegistryList</xosid:token>
                corresponding to the given <xosid:token>IdList.
                </xosid:token>In plenary mode, the returned list
                contains all of the registries specified in the
                <xosid:token>Id</xosid:token> list, in the order of
                the list, including duplicates, or an error results if
                an <xosid:token>Id</xosid:token> in the supplied list
                is not found or inaccessible. Otherwise, inaccessible
                <xosid:token>Registry</xosid:token> objects may be
                omitted from the list and may present the elements in
                any order including returning a unique set.
            </xosid:description>
            <xosid:parameter xosid:name="registryIdList">
                <xosid:interfaceType xosid:type="osid.id.IdList"/>
                <xosid:description>
                    the list of <xosid:token>Ids</xosid:token> to
                    rerieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryList"/>
                <xosid:description>
                    the returned <xosid:token>Registry
                    list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    an <xosid:token>Id was</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryIdList</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistriesByGenusType">
            <xosid:description>
                Gets a <xosid:token>RegistryList</xosid:token>
                corresponding to the given registry genus
                <xosid:token>Type </xosid:token>which does not include
                registries of types derived from the specified
                <xosid:token>Type. </xosid:token>In plenary mode, the
                returned list contains all known registries or an error
                results. Otherwise, the returned list may contain only
                those registries that are accessible through this
                session. In both cases, the order of the set is not
                specified.
            </xosid:description>
            <xosid:parameter xosid:name="registryGenusType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a registry genus type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryList"/>
                <xosid:description>
                    the returned <xosid:token>Registry
                    list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryGenusType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistriesByParentGenusType">
            <xosid:description>
                Gets a <xosid:token>RegistryList</xosid:token>
                corresponding to the given registry genus
                <xosid:token>Type </xosid:token>and include any
                additional registries with genus types derived from the
                specified <xosid:token>Type. </xosid:token>In plenary
                mode, the returned list contains all known registries
                or an error results. Otherwise, the returned list may
                contain only those registries that are accessible
                through this session. In both cases, the order of the
                set is not specified.
            </xosid:description>
            <xosid:parameter xosid:name="registryGenusType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a registry genus type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryList"/>
                <xosid:description>
                    the returned <xosid:token>Registry
                    list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryGenusType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistriesByInterfaceType">
            <xosid:description>
                Gets a <xosid:token>RegistryList</xosid:token>
                corresponding to the given registry interface
                <xosid:token>Type. </xosid:token>The set of registries
                implementing the given interface type is returned. In
                plenary mode, the returned list contains all known
                registries or an error results. Otherwise, the returned
                list may contain only those registries that are
                accessible through this session. In both cases, the
                order of the set is not specified.
            </xosid:description>
            <xosid:parameter xosid:name="registryInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a registry interface type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryList"/>
                <xosid:description>
                    the returned <xosid:token>Registry
                    list</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryInterfaceType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistries">
            <xosid:description>
                Gets all <xosid:token>Registry</xosid:token> objects.
                In plenary mode, the returned list contains all known
                registries or an error results. Otherwise, the returned
                list may contain only those registries that are
                accessible through this session. In both cases, the
                order of the set is not specified.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryList"/>
                <xosid:description>
                    a list of registries
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.RegistrySearchSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session provides methods for searching among
            <xosid:token>Registry</xosid:token> objects. The search
            query is constructed using the
            <xosid:token>registryQuery</xosid:token> interface.
            Multiple <xosid:token>RegistryQuery</xosid:token>
            interfaces may be submitted into a search to perform a
            boolean <xosid:token>OR.</xosid:token> If more than one
            search element is specified within a single
            <xosid:token>RegistryQuery</xosid:token> these elements
            form a boolean <xosid:token>AND.</xosid:token>
            <xosid:token>getRegistriesByQuery()</xosid:token> is the
            basic search method and returns a list of
            <xosid:token>Registry</xosid:token> objects.A more
            advanced search may be performed with
            <xosid:token>getRegistriesBySearch(). </xosid:token>It
            accepts a <xosid:token>RegistrySearch</xosid:token>
            interface in addition to the query interface for the
            purpose of specifying additional options affecting the
            entire search, such as ordering.
            <xosid:token>getRegistriesBySearch()</xosid:token> returns
            a <xosid:token>RegistrySearchResults</xosid:token>
            interface that can be used to access the resulting
            <xosid:token>RegistryList</xosid:token> or be used to
            perform a search within the result set through
            <xosid:token>RegistrySearch.</xosid:token>

            <xosid:pbreak/>

            Registries may have a query interface indicated by their
            respective interface types. The typed query interface is
            accessed via the <xosid:token>RegistryQuery.</xosid:token>
            The returns in this session may not be cast directly to
            these interfaces.
        </xosid:description>


        <xosid:method xosid:name="canSearchRegistries">
            <xosid:description>
                Tests if this user can perform
                <xosid:token>Registry</xosid:token> searches. A return
                of true does not guarantee successful authorization. A
                return of false indicates that it is known all methods
                in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer search operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if lookup methods
                    are not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistryQuery">
            <xosid:description>
                Gets a registry query interface. The returned query
                will not have a typed extension query.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryQuery"/>
                <xosid:description>
                    the registry query
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getregistryQueryForInterfaceType">
            <xosid:description>
                Gets a registry query interface of the specified
                interface type. The returned query contains the method
                to access the query interface corresponding to the
                specified <xosid:token>Type </xosid:token>but must not
                be cast directly from this method return.
            </xosid:description>
            <xosid:parameter xosid:name="registryInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type of query interface to retrieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryQuery"/>
                <xosid:description>
                    the registry query
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryInterfaceType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>ConfigurationManager.supportsRegistryInterfaceType(registryInterfaceType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistriesByQuery">
            <xosid:description>
                Gets a list of <xosid:token>Registry</xosid:token>
                ibjects matching the given search interface. Each
                element in the array is OR'd.
            </xosid:description>
            <xosid:parameter xosid:name="registryQueries">
                <xosid:interfaceType xosid:type="osid.configuration.RegistryQuery" xosid:array="true"/>
                <xosid:description>
                    the search query array
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryList"/>
                <xosid:description>
                    the returned
                    <xosid:token>RegistryList</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryQueries</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    a <xosid:token>registryQuery</xosid:token> is not
                    of this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistrySearch">
            <xosid:description>
                Gets a registry search interface. The returned query
                only makes available the core
                <xosid:token>RegistrySearch</xosid:token> interface and
                does not support additional interface types.
               
                <xosid:token>getRegistrySearchForInterfaceType()</xosid:token>
                should be used if additional interface types are
                required.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistrySearch"/>
                <xosid:description>
                    the registry search interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistrySearchForInterfaceType">
            <xosid:description>
                Gets a registry search interface of the specified type.
                The returned search interface provides access to the
                search interface corresponding to the specified
                <xosid:token>Type </xosid:token>but may not be cast
                directly from this method return.
            </xosid:description>
            <xosid:parameter xosid:name="registrySearchInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type of query to retrieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistrySearch"/>
                <xosid:description>
                    the registry search options
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryInterfaceType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>ConfigurationManager.supportsRegistrySearchType(registrySearchInterfaceType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistriesBySearch">
            <xosid:description>
                Gets a list of <xosid:token>Registry</xosid:token>
                objects matching the given search interface. Each
                element in the array is OR'd.
            </xosid:description>
            <xosid:parameter xosid:name="registryQueries">
                <xosid:interfaceType xosid:type="osid.configuration.RegistryQuery" xosid:array="true"/>
                <xosid:description>
                    the search query array
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="registrySearch">
                <xosid:interfaceType xosid:type="osid.configuration.RegistrySearch"/>
                <xosid:description>
                    the search options
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistrySearchResults"/>
                <xosid:description>
                    the search results
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryQueries
                   </xosid:token>or <xosid:token>
                    registrySearch</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    a <xosid:token>registryQuery</xosid:token> or
                    <xosid:token>registrySearch</xosid:token> is not
                    of this service
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.RegistryAdminSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session defines an interface to create, update and
            delete <xosid:token>Registry</xosid:token> objects. The
            data for create and update is provided by the consumer via
            the form object.
        </xosid:description>


        <xosid:method xosid:name="canCreateRegistries">
            <xosid:description>
                Tests if this user can create
                <xosid:token>Registry</xosid:token> objects.A return of
                true does not guarantee successful authorization. A
                return of false indicates that it is known creating a
                <xosid:token>Registry</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may not wish
                to offer create operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Registry</xosid:token> creation is
                    not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canCreateRegistryWithInterfaceTypes">
            <xosid:description>
                Tests if this user can create a single
                <xosid:token>Registry </xosid:token>using the desired
                interface types. A <xosid:token>Registry
               </xosid:token>interface <xosid:token>
                Type</xosid:token> may specify the implementation of
                other more well-known <xosid:token>Types.</xosid:token>
                A provider may or may not accept the creation of a
                <xosid:token>Registry</xosid:token> using anything
                other than the <xosid:token>RegistryForm</xosid:token>
                of the leaf interface <xosid:token>Type,</xosid:token>
                or may accept creation using one or more higher level
                interface <xosid:token>Types.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="registryInterfaceTypes">
                <xosid:interfaceType xosid:type="osid.type.Type" xosid:array="true"/>
                <xosid:description>
                    array of types
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if
                    <xosid:token>Registry</xosid:token> creation using
                    the specified <xosid:token>Types</xosid:token> is
                    supported, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryInterfaceTypes</xosid:token>
                    is <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRequiredRegistryInterfaceTypesForCreate">
            <xosid:description>
                Gets the list of minimum required interface
                <xosid:token>Types</xosid:token> for creating a new
                <xosid:token>Registry. </xosid:token>A new
                <xosid:token>Registry</xosid:token> can be created
                using any one of the interface types returned in this
                list. This may be a series of leaf
                <xosid:token>Types,</xosid:token> or multiple higher
                level <xosid:token>Types</xosid:token> if creation
                requirements are more lenient. An empty list suggests
                no creates are supported as a root
                <xosid:token>Registry</xosid:token> interface is always
                identified with its own
                <xosid:token>Type.</xosid:token>
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    one or more types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistryFormForCreate">
            <xosid:description>
                Gets the registry form for creating new registries.
            </xosid:description>
            <xosid:parameter xosid:name="registryInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a registry interface type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryForm"/>
                <xosid:description>
                    the registry form
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryInterfaceType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>canCreateRegistryWithInterfaceTypes(registryInterfaceType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="createRegistry">
            <xosid:description>
                Creates a new <xosid:token>Registry.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="registryForms">
                <xosid:interfaceType xosid:type="osid.configuration.RegistryForm" xosid:array="true"/>
                <xosid:description>
                    the registry forms
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Registry"/>
                <xosid:description>
                    the new <xosid:token>Registry</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ALREADY_EXISTS" xosid:category="User">
                <xosid:description>
                    attempt to add a
                    <xosid:token>Registry</xosid:token> when one by
                    that name or unique property already exists
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    the form contains an invalid value
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryForms</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    a <xosid:token>registryForm</xosid:token> is not
                    supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canUpdateRegistries">
            <xosid:description>
                Tests if this user can update
                <xosid:token>Registries.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known updating a
                <xosid:token>Registry</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may not wish
                to offer update operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Registry</xosid:token> modification
                    is not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canUpdateRegistry">
            <xosid:description>
                Tests if this user can update a specified
                <xosid:token>Registry.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known updating the
                <xosid:token>Registry</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may not wish
                to offer update operations to unauthorized users.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registry
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if registry
                    modification is not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                If the <xosid:token>registryId</xosid:token> is not
                found, then it is acceptable to return false to
                indicate the lack of an update available.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="getRegistryFormForUpdate">
            <xosid:description>
                Gets the registry form for updating existing
                registries. A new registry form should be requested for
                each update transaction.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    <xosid:token>Id</xosid:token> of a
                    <xosid:token>Configuration</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryForm"/>
                <xosid:description>
                    the registry form
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="updateRegistry">
            <xosid:description>
                Updates an existing
                <xosid:token>Registry.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registry
                    to update
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="registryForm">
                <xosid:interfaceType xosid:type="osid.configuration.RegistryForm"/>
                <xosid:description>
                    the registry form
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    the form contains an invalid value
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> or
                    <xosid:token>registryForm</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>registryForm</xosid:token> is not
                    supported
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canDeleteRegistries">
            <xosid:description>
                Tests if this user can delete a specified
                <xosid:token>Registry.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known deleting the
                <xosid:token>Registry</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may not wish
                to offer delete operations to unauthorized users.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Registry</xosid:token> deletion is
                    not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="canDeleteRegistry">
            <xosid:description>
                Tests if this user can delete a specified
                <xosid:token>Registry.</xosid:token> A return of true
                does not guarantee successful authorization. A return
                of false indicates that it is known deleting the
                <xosid:token>Registry</xosid:token> will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may not wish
                to offer delete operations to unauthorized users.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registry
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if
                    <xosid:token>Registry</xosid:token> deletion is
                    not authorized, <xosid:token>true</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                If the <xosid:token>registryId</xosid:token> is not
                found, then it is acceptable to return false to
                indicate the lack of an delete available.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="deleteRegistry">
            <xosid:description>
                Deletes a <xosid:token>Registry.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Registry</xosid:token> to delete
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="addIdToRegistry">
            <xosid:description>
                Adds an <xosid:token>Id</xosid:token> to a
                <xosid:token>Registry</xosid:token> for the purpose of
                creating compatibility. The primary
                <xosid:token>Id</xosid:token> of the
                <xosid:token>Registry</xosid:token> is determined by
                the provider. The new <xosid:token>Id</xosid:token>
                performs as an alias to the primary
                <xosid:token>Id.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of a
                    <xosid:token>Registry</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="aliasId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the alias <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="ALREADY_EXISTS" xosid:category="User">
                <xosid:description>
                    <xosid:token>aliasId</xosid:token> is already
                    assigned
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> or
                    <xosid:token>aliasId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.RegistryNotificationSession"> 
        <xosid:implements xosid:interface="osid.OsidSession"/>
        <xosid:description>
            This session defines methods to receive notifications on
            adds/changes to <xosid:token>Registry</xosid:token>
            objects. Notifications pertaining to the adding or removal
            of parameters are handled through the
            <xosid:token>ParameterNotificationSession.This</xosid:token>
            session is intended for adapters and providers needing to
            synchronize their state with this service without the use
            of polling. Notifications are cancelled when this session
            is closed.
        </xosid:description>


        <xosid:method xosid:name="canRegisterForRegistryNotifications">
            <xosid:description>
                Tests if this user can register for
                <xosid:token>Registry</xosid:token> notifications. A
                return of true does not guarantee successful
                authorization. A return of false indicates that it is
                known all methods in this session will result in a
                <xosid:token>PERMISSION_DENIED.</xosid:token> This is
                intended as a hint to an application that may opt not
                to offer notification operations.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>false</xosid:token> if notification
                    methods are not authorized,
                    <xosid:token>true</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForNewRegistries">
            <xosid:description>
                Registers for notifications of new registries.
               
                <xosid:token>RegistryReceiver.newRegistry()</xosid:token>
                is invoked when a new
                <xosid:token>Registry</xosid:token> is created.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForNewRegistryAncestors">
            <xosid:description>
                Registers for notification if an ancestor is added to
                the specified registry in the registry hierarchy.
               
                <xosid:token>RegistryReceiver.newRegistryAncestor()</xosid:token>
                is invoked when the specified registry experiences an
                addition in ancestry.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registry
                    to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a registry was not found identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForNewRegistryDescendants">
            <xosid:description>
                Registers for notification if a descedant is added to
                the specified registry in the registry hierarchy.
               
                <xosid:token>RegistryReceiver.newRegistryDescendant()</xosid:token>
                is invoked when the specified registry experiences an
                addition in descendants.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registry
                    to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a registry was not found identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForChangedRegistries">
            <xosid:description>
                Registers for notification of updated registries.
               
                <xosid:token>RegistryReceiver.changedRegistry()</xosid:token>
                is invoked when a registry is changed.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForChangedRegistry">
            <xosid:description>
                Registers for notifications of an update to a registry.
               
                <xosid:token>RegistryReceiver.changedRegistry()</xosid:token>
                is invoked when the specified
                <xosid:token>Registry</xosid:token> is changed.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Registry</xosid:token> to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a <xosid:token>Registry</xosid:token> was not found
                    identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedRegistries">
            <xosid:description>
                Registers for notification of deleted registries.
               
                <xosid:token>RegistryReceiver.deletedRegistry()</xosid:token>
                is invoked when a <xosid:token>Registry</xosid:token>
                is deleted.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedRegistry">
            <xosid:description>
                Registers for notifications of a deleted registry.
               
                <xosid:token>RegistryReceiver.deletedRegistry()</xosid:token>
                is invoked when the specified registry is deleted.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Registry</xosid:token> to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a <xosid:token>Registry</xosid:token> was not found
                    identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedRegistryAncestors">
            <xosid:description>
                Registers for notification if an ancestor is removed
                from the specified registry in the registry hierarchy.
               
                <xosid:token>RegistryReceiver.deletedRegistryAncestor()</xosid:token>
                is invoked when the specified registry experiences a
                removal of an ancestor.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registry
                    to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a registry was not found identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="registerForDeletedRegistryDescendants">
            <xosid:description>
                Registers for notification if a descendant is removed
                from fthe specified registry in the registry hierarchy.
               
                <xosid:token>RegistryReceiver.deletedregistryDescednant()</xosid:token>
                is invoked when the specified registry experiences a
                removal of one of its descendants.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the registry
                    to monitor
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    a registry was not found identified by the given
                    <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.RegistryHierarchySession"> 
        <xosid:implements xosid:interface="osid.hierarchy.HierarchyTraversalSession"/>
        <xosid:description>
            This session defines methods for traversing a hiercrhy of
            <xosid:token>Registry</xosid:token> objects. Each registry
            in the hierarchy is a unique
            <xosid:token>registry.</xosid:token> The hierarchy may be
            traversed recursively to establish the tree structure
            through <xosid:token>getParents()</xosid:token> and
            <xosid:token>getChildren().</xosid:token> To relate these
            <xosid:token>Ids</xosid:token> to another OSID,
            <xosid:token>getAncestors()</xosid:token> and
            <xosid:token>getDescendants()</xosid:token> can be used
            for retrievals that can be used for bulk lookups in other
            OSIDs. Any <xosid:token>Registry</xosid:token> available in
            the Configuration OSID is known to this hierarchy but does
            not appear in the hierarchy traversal until added as a root
            node or a child of another node.

            <xosid:pbreak/>

            A user may not be authorized to traverse the entire
            hierarchy. Parts of the hierarchy may be made invisible
            through omission from the returns of
            <xosid:token>getParents()</xosid:token> or
            <xosid:token>getChildren()</xosid:token> in lieu of a
            <xosid:token>PERMISSION_DENIED</xosid:token> error that
            may disrupt the traversal through authorized pathways.

            <xosid:pbreak/>

            This session defines views that offer differing behaviors
            when retrieving multiple objects.

            <xosid:pbreak/>

            <xosid:outline>
                 <xosid:element>
                    comparative view: registries may be silently
                    omitted or re-ordered 
                </xosid:element>
                 <xosid:element>
                    plenary view: provides a complete set or is an
                    error condition
                </xosid:element>
            </xosid:outline>
             
        </xosid:description>


        <xosid:method xosid:name="useComparativeRegistryView">
            <xosid:description>
                The returns from the registry methods may omit or
                translate elements based on this session, such as
                authorization, and not result in an error. This view is
                used when greater interoperability is desired at the
                expense of precision.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="usePlenaryRegistryView">
            <xosid:description>
                A complete view of the
                <xosid:token>Registry</xosid:token> returns is desired.
                Methods will return what is requested or result in an
                error. This view is used when greater precision is
                desired at the expense of interoperability.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRootRegistries">
            <xosid:description>
                Gets the root registries in the registry hierarchy. A
                node with no parents is an orphan. While all registry
                <xosid:token>Ids</xosid:token> are known to the
                hierarchy, an orphan does not appear in the hierarchy
                unless explicitly added as a root node or child of
                another
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryList"/>
                <xosid:description>
                    the root registries
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method is must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParentRegistries">
            <xosid:description>
                Gets the parents of the given registry.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> to query
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryList"/>
                <xosid:description>
                    the parents of the registry
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getAncestorRegistries">
            <xosid:description>
                Gets the ancestors of the given registry.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> to query
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="levels">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the maximum number of levels to include. A value of
                    1 returns the same set as
                    <xosid:token>getParentregistries(). </xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryList"/>
                <xosid:description>
                    the ancestors of the registry
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getChildRegistries">
            <xosid:description>
                Gets the children of the given registry.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> to query
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryList"/>
                <xosid:description>
                    the children of the registry
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getDescendantRegistries">
            <xosid:description>
                Gets the descendants of the given registry.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> to query
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="levels">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the maximum number of levels to include. A value of
                    1 returns the same set as
                    <xosid:token>getChildregistries(). </xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryList"/>
                <xosid:description>
                    the descendants of the registry
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NOT_FOUND" xosid:category="User">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> not found
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.RegistryHierarchyDesignSession"> 
        <xosid:implements xosid:interface="osid.hierarchy.HierarchyDesignSession"/>
        <xosid:description>
            This session defines methods for managing a hiercrhy of
            <xosid:token>Registry</xosid:token> objects. Each node in
            the hierarchy is a unique
            <xosid:token>Registry.</xosid:token>
        </xosid:description>

    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.Parameter"> 
        <xosid:implements xosid:interface=""/>
        <xosid:description>
            A parameter is used to map configuration values to an
            identifier and syntax. The type of the value must be used
            across all values of the same parameter.
        </xosid:description>


        <xosid:method xosid:name="getId">
            <xosid:description>
                Gets the <xosid:token>Id</xosid:token> associated with
                this instance of this parajmeter. Persisting any
                reference to this parameter is done by persisting the
                <xosid:token>Id</xosid:token> returned from this
                method. The <xosid:token>Id</xosid:token> returned may
                be different than the <xosid:token>Id</xosid:token>
                used to query this object. In this case, the new
                <xosid:token>Id</xosid:token> should be preferred over
                the old one for future queries.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the parameter <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                The <xosid:token>Id</xosid:token> is intended to be
                constant and persistent. A consumer may at any time
                persist the <xosid:token>Id</xosid:token> for retrieval
                at any future time. Ideally, the
                <xosid:token>Id</xosid:token> should consistently
                resolve into the designated object and not be reused.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="getDisplayName">
            <xosid:description>
                Gets the preferred display name associated with this
                instance of this parameter appropriate for display to
                the user.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="string"/>
                <xosid:description>
                    the display name
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                A display name is a string used for identifying an
                object in human terms. A provider may wish to
                initialize the display name based on one or more object
                attributes. In some cases, the display name may not map
                to a specific or significant object attribute but
                simply be used as a preferred display name that can be
                modified. A provider may also wish to translate the
                display name into a specific locale using the Locale
                service. Some OSIDs define methods for more detailed
                naming.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="getDescription">
            <xosid:description>
                Gets the description associated with this instance of
                this parameter.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="string"/>
                <xosid:description>
                    the description
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
            <xosid:implNotes>
                A description is a string used for describing an object
                in human terms and may not have significance in the
                underlying system. A provider may wish to initialize
                the description based on one or more object attributes
                and/or treat it as an auxiliary piece of data that can
                be modified. A provider may also wish to translate the
                description into a specific locale using the Locale
                service.
            </xosid:implNotes>
        </xosid:method>

        <xosid:method xosid:name="getValueType">
            <xosid:description>
                Gets the type of this parameter values.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type of the values
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="implementsValueType">
            <xosid:description>
                Tests if this object supports the given interface
                <xosid:token>Type.</xosid:token> The given interface
                type may be supported by the object through
                interface/type inheritence. This method should be
                checked before retrieving the typed interface
                extension.
            </xosid:description>
            <xosid:parameter xosid:name="valueType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the values
                    associated with this parameter implement the given
                    <xosid:token>Type,</xosid:token>
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>valueType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ParameterQuery"> 
        <xosid:implements xosid:interface=""/>
        <xosid:description>
            The <xosid:token>ParameterQuery</xosid:token> is used to
            assemble search queries. A
            <xosid:token>Parameter</xosid:token> is available from a
            <xosid:token>ParameterSearchSession</xosid:token> and
            defines methods to query for a
            <xosid:token>Parameter</xosid:token> that includes setting
            a display name and a description. Once the desired
            parameters are set, the
            <xosid:token>ParameterQuery</xosid:token> is given to the
            designated search method. The same
            <xosid:token>ParameterQuery</xosid:token> returned from the
            session must be used in the search as the provider may
            utilize implementation-specific data wiithin the object.

            <xosid:pbreak/>

            If multiple data elements are set in this interface, the
            results matching all the given data (eg:
            <xosid:token>AND</xosid:token>) are returned. Search
            methods throughout the OSIDs accept multiple
            <xosid:token>OsidQuery</xosid:token> interfaces. Each
            <xosid:token>ParaneterQuery</xosid:token> in the array
            behaves like an <xosid:token>OR</xosid:token> such that
            results are returned that match any of the given
            <xosid:token>ParameterQuery</xosid:token> objects.
            Any match method inside a
            <xosid:token>ParaneterQuery</xosid:token> may be invoked
            multiple times. In the case of a match method, each
            invocation adds an element to an
            <xosid:token>OR</xosid:token> expression. Any of these
            terms may also be negated through the
            <xosid:token>match</xosid:token> flag.

            <xosid:pbreak/>

             <xosid:code>
Parameter { OsidQuery.matchDisplayName AND (ParameterQuery.matchDescription OR Parameter.matchDescription)} OR ParaneterQuery

            </xosid:code>
             
            <xosid:pbreak/>

            String searches are described using a string search Type
            that indicates the type of regular expression or
            wildcarding encoding. Compatibility with a strings search
            Type can be tested within this interface.
        </xosid:description>


        <xosid:method xosid:name="getStringMatchTypes">
            <xosid:description>
                Gets the string matching types supported. A string
                match type specifies the syntax of the string query,
                such as matching a word or including a wildcard or
                regular expression.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.type.TypeList"/>
                <xosid:description>
                    a list containing the supported string match types
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsStringMatchType">
            <xosid:description>
                Tests if the given string matching type is supported.
            </xosid:description>
            <xosid:parameter xosid:name="searchType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a <xosid:token>Type</xosid:token> indicating a
                    string match type
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if the given Type
                    is supported, <xosid:token>false</xosid:token>
                    otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="matchKeyword">
            <xosid:description>
                Adds a keyword to match. Multiple keywords can be added
                to perform a boolean <xosid:token>OR</xosid:token>
                among them. A keyword may be applied to any of the
                elements defined in this object such as the display
                name, description or any method defined in an interface
                implemented by this object.
            </xosid:description>
            <xosid:parameter xosid:name="keyword">
                <xosid:primitiveType xosid:type="string"/>
                <xosid:description>
                    keyword to match
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="stringMatchType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the string match type
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> for a positive
                    match, <xosid:token>false</xosid:token> for a
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>keyword is </xosid:token>not of
                    <xosid:token>stringMatchType</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>keyword </xosid:token>or
                    <xosid:token>stringMatchType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsStringMatchType(stringMatchType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="matchDisplayName">
            <xosid:description>
                Adds a display name to match. Multiple display name
                matches can be added to perform a boolean
                <xosid:token>OR</xosid:token> among them.
            </xosid:description>
            <xosid:parameter xosid:name="displayName">
                <xosid:primitiveType xosid:type="string"/>
                <xosid:description>
                    display name to match
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="stringMatchType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the string match type
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> for a positive
                    match, <xosid:token>false</xosid:token> for a
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>keyword is </xosid:token>not of
                    <xosid:token>stringMatchType</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>displayName </xosid:token>or
                    <xosid:token>stringMatchType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsStringMatchType(stringMatchType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="matchDescription">
            <xosid:description>
                Adds a description to match. Multiple display name
                matches can be added to perform a boolean
                <xosid:token>OR</xosid:token> among them.
            </xosid:description>
            <xosid:parameter xosid:name="description">
                <xosid:primitiveType xosid:type="string"/>
                <xosid:description>
                    description to match
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="stringMatchType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the string match type
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> for a positive
                    match, <xosid:token>false</xosid:token> for a
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>keyword is </xosid:token>not of
                    <xosid:token>stringMatchType</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>description</xosid:token> or
                    <xosid:token>stringMatchType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsStringMatchType(stringMatchType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="matchUnsetDescription">
            <xosid:description>
                Matches a description that has no value.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="matchGenusType">
            <xosid:description>
                Sets a <xosid:token>Type</xosid:token> for querying
                objects of a given genus. A genus type matches if the
                specified type is the same genus as the object genus
                type.
            </xosid:description>
            <xosid:parameter xosid:name="genusType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the object genus type
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> for a positive
                    match, <xosid:token>false</xosid:token> for a
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>genusType
                   </xosid:token>is <xosid:token> null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="matchParentGenusType">
            <xosid:description>
                Sets a <xosid:token>Type</xosid:token> for querying
                objects of a given genus. A genus type matches if the
                specified type is the same genus as the object or if
                the specified type is an ancestor of the object genus
                in a type hierarchy.
            </xosid:description>
            <xosid:parameter xosid:name="genusType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the object genus type
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> for a positive
                    match, <xosid:token>false</xosid:token> for a
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>genusType
                   </xosid:token>is <xosid:token> null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="matchUnsetGenusType">
            <xosid:description>
                Matches a genus that has no value.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="matchValueType">
            <xosid:description>
                Sets a <xosid:token>Type</xosid:token> for querying
                parameters of a given value type.
            </xosid:description>
            <xosid:parameter xosid:name="valueType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the parameter value type
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> for a positive
                    match, <xosid:token>false</xosid:token> for a
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>valueType
                   </xosid:token>is <xosid:token> null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="matchRegistryId">
            <xosid:description>
                Sets the registry <xosid:token>Id</xosid:token> for
                this query.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    a registryId <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a positive
                    match, <xosid:token>false</xosid:token> for
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsRegistryyQuery">
            <xosid:description>
                Tests if a <xosid:token>RegistryQuery</xosid:token> is
                available.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a registry query
                    interface is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistryQuery">
            <xosid:description>
                Gets the query interface for a registry.
            </xosid:description>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a positive
                    match, <xosid:token>false</xosid:token> for
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryQuery"/>
                <xosid:description>
                    the registry query
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsRegistryQuery()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsRegistryQuery()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistryQueryForInterfaceType">
            <xosid:description>
                Gets the registry query interface for the registry
                type. Supported types are defined in the
                <xosid:token>ConnfigurationManager.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="registryInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a registry type
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a positive
                    match, <xosid:token>false</xosid:token> for
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryQuery"/>
                <xosid:description>
                    the registry query
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryInterfaceType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsRegistryQuery()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>ConfigurationManager.supportsRegistryInterfaceType(registryInterfaceType)
                    is false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsRegistryQuery()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ParameterSearch"> 
        <xosid:implements xosid:interface=""/>
        <xosid:description>
            <xosid:token>ParameterSearch</xosid:token> specifies the
            interface for specifying parameter search options.
        </xosid:description>


        <xosid:method xosid:name="limitResultSet">
            <xosid:description>
                By default, searches return all matching results. This
                method restricts the number of results by setting the
                start and end of the result set, starting from 1. The
                starting and ending results can be used for paging
                results when a certain ordering is requested. The
                ending position must be greater than the starting
                position.
            </xosid:description>
            <xosid:parameter xosid:name="start">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the start of the result set
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="end">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the end of the result set
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>end </xosid:token>is less than or
                    equal to <xosid:token>start</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="searchWithinParameterResults">
            <xosid:description>
                Executes this search using a previous search result.
            </xosid:description>
            <xosid:parameter xosid:name="results">
                <xosid:interfaceType xosid:type="osid.configuration.ParameterSearchResults"/>
                <xosid:description>
                    results from a query
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>results</xosid:token> is not valid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>results</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="searchAmongParameters">
            <xosid:description>
                Executes this search among a given list of parameters.
            </xosid:description>
            <xosid:parameter xosid:name="paraneterIds">
                <xosid:interfaceType xosid:type="osid.id.Id" xosid:array="true"/>
                <xosid:description>
                    list of subjects
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>parameterIds</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="orderByDisplayName">
            <xosid:description>
                Specifies a preference for ordering the results by
                display name.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="orderByGenusType">
            <xosid:description>
                Specifies a preference for ordering the results by
                genus type.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="orderByValueType">
            <xosid:description>
                Specifies a preference for ordering the results by
                value type.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="orderByRegistry">
            <xosid:description>
                Specifies a preference for ordering the results by
                registry.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ParameterSearchResults"> 
        <xosid:implements xosid:interface="osid.OsidSearchResults"/>
        <xosid:description>
            This interface provides a means to capture results of a
            search and is used as a vehicle to perform a search within
            a previous result set.
        </xosid:description>


        <xosid:method xosid:name="getParameters">
            <xosid:description>
                Gets the parameter list resulting from a search.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterList"/>
                <xosid:description>
                    the parameter list
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterSearchResultsInterface">
            <xosid:description>
                Gets the parameter search results interface
                corresponding to the
                <xosid:token>searchType</xosid:token> used in
                retrieving the
                <xosid:token>ParameterSearch</xosid:token> interface. A
                <xosid:token>ParameterSearchResults</xosid:token>
                returned from the search session is only required to
                implement the root
                <xosid:token>ParameterSearchResults</xosid:token>
                interface. This method must be used to retrieve a
                search results object implementing the interface
                specified when retrieving the
                <xosid:token>ParameterSearch</xosid:token> from the
                search session along with all of its ancestor
                interfaces, including the core
                <xosid:token>ParameterSearchResults</xosid:token>
                interface.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterSearchResults"/>
                <xosid:description>
                    the parameter results interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ParameterForm"> 
        <xosid:implements xosid:interface=""/>
        <xosid:description>
            This is the form for creating and updating Parameters.
            Various data elements may be set here for use in the create
            and update methods in the ParameterAdminSession. For each
            data element that may be set, metadata may be examined to
            provide display hints or data constraints.
        </xosid:description>


        <xosid:method xosid:name="getCommentMetadata">
            <xosid:description>
                Gets the metadata for the comment corresponding to this
                form submission. The comment is used for describing the
                nature of the change to the corresponding object for
                the purposes of logging and auditing.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.Metadata"/>
                <xosid:description>
                    metadata for the comment
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="setComment">
            <xosid:description>
                Sets a comment.
            </xosid:description>
            <xosid:parameter xosid:name="comment">
                <xosid:primitiveType xosid:type="string"/>
                <xosid:description>
                    the new comment
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>comment</xosid:token> is invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NO_ACCESS" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>comment</xosid:token> cannot be
                    modified
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>comment</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="validate">
            <xosid:description>
                Performs a validation of the data set in this form.
                This method returns nothing if validation is not
                performed or validation is successful. An transaction
                is returned if the form is invalid.
            </xosid:description>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    attempt to perform validation failed
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="TRANSACTION_FAILURE" xosid:category="Operational">
                <xosid:description>
                    form is invalid
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getDisplayNameMetadata">
            <xosid:description>
                Gets the metadtaa for the display name.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.Metadata"/>
                <xosid:description>
                    metadata for the display name
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="setDisplayName">
            <xosid:description>
                Sets a display name. A display name is required and if
                not set, will be set by the provider.
            </xosid:description>
            <xosid:parameter xosid:name="displayName">
                <xosid:primitiveType xosid:type="string"/>
                <xosid:description>
                    the new display name
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>displayName</xosid:token> is invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NO_ACCESS" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>displayName</xosid:token> cannot be
                    modified
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>displayName</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getDescriptionMetadata">
            <xosid:description>
                Gets the metadata for the description.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.Metadata"/>
                <xosid:description>
                    metadata for the description
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="setDescription">
            <xosid:description>
                Sets a description.
            </xosid:description>
            <xosid:parameter xosid:name="description">
                <xosid:primitiveType xosid:type="string"/>
                <xosid:description>
                    the new description
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>description</xosid:token> is invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NO_ACCESS" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>description</xosid:token> cannot be
                    modified
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>description</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="clearDescription">
            <xosid:description>
                Clears the description.
            </xosid:description>
            <xosid:error xosid:type="NO_ACCESS" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>description</xosid:token> cannot be
                    modified
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getGenusMetadata">
            <xosid:description>
                Gets the metadata for the genus type.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.Metadata"/>
                <xosid:description>
                    metadata for the genus
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="setGenus">
            <xosid:description>
                Sets a genus. A genus cannot be cleared because all
                objects have at minimum a root genus.
            </xosid:description>
            <xosid:parameter xosid:name="genusType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the new genus
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>genusType</xosid:token> is invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NO_ACCESS" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>genusType</xosid:token> cannot be
                    modified
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>genusType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueTypeMetadata">
            <xosid:description>
                Gets the metadata for the value type.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.Metadata"/>
                <xosid:description>
                    metadata for the value type
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="setValueType">
            <xosid:description>
                Sets a value type.
            </xosid:description>
            <xosid:parameter xosid:name="valueType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the new value type
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>valueType</xosid:token> is invalid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NO_ACCESS" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>valueType</xosid:token> cannot be
                    modified
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>valueType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ParameterReceiver"> 
        <xosid:implements xosid:interface="osid.OsidReceiver"/>
        <xosid:description>
            The parameter receiver is the consumer supplied interface
            for receiving notifications pertaining to new, updated or
            deleted <xosid:token>Parameter</xosid:token> objects.
        </xosid:description>


        <xosid:method xosid:name="newParameter">
            <xosid:description>
                The callback for notifications of new parameters.
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the new
                    <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="changedParameter">
            <xosid:description>
                The callback for notification of updated parameters.
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the updated
                    <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="deletedParameter">
            <xosid:description>
                the callback for notification of deleted parameters.
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the deleted
                    <xosid:token>Parameter</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ParameterList"> 
        <xosid:implements xosid:interface="osid.OsidList"/>
        <xosid:description>
            Like all <xosid:token>OsidLists,</xosid:token>
            <xosid:token>ParameterList</xosid:token> provides a means
            for accessing <xosid:token>Parameter</xosid:token> elements
            sequentially either one at a time or many at a time. Examples:

            <xosid:pbreak/>

             <xosid:code>
while (pl.hasNext()) {
     Parameter parameter = pl.getNextParameter();
}


            </xosid:code>
             or
            <xosid:code>


while (pl.hasNext()) {
     Parameter[] parameters = pl.getNextParameters(pl.available());
}
            </xosid:code>
             
        </xosid:description>


        <xosid:method xosid:name="getNextParameter">
            <xosid:description>
                Gets the next <xosid:token>Parameter</xosid:token> in
                this list.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Parameter"/>
                <xosid:description>
                    the next <xosid:token>Parameter</xosid:token> in
                    this list. The <xosid:token>hasNext()</xosid:token>
                    method should be used to test that a next
                    <xosid:token>Parameter</xosid:token> is available
                    before calling this method.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getNextParameters">
            <xosid:description>
                Gets the next set of
                <xosid:token>Parameters</xosid:token> in this list
                which must be less than or equal to the return from
                <xosid:token>available().</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="n">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the number of <xosid:token>Parameter
                    </xosid:token>elements requested which must be less
                    than or equal to
                    <xosid:token>available()</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Parameter" xosid:array="true"/>
                <xosid:description>
                    an array of <xosid:token>Parameter
                   </xosid:token>elements. <xosid:token>
                    </xosid:token>The length of the array is less than
                    or equal to the number specified.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.Value"> 
        <xosid:implements xosid:interface="osid.configuration.Parameter"/>
        <xosid:description>
            This interface specifies the value portion of a
            configuration parameter.
        </xosid:description>


        <xosid:method xosid:name="getIndex">
            <xosid:description>
                Gets the index of this value.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the index of this value
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValue">
            <xosid:description>
                Gets the value object. This returns the object
                corresponding to the value
                <xosid:token>Type.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="valueType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type of the object to retrieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:primitiveType xosid:type="object"/>
                <xosid:description>
                    the object corresponding to the value
                    <xosid:token>Type</xosid:token>
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>valueType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>implementsValueType(valueType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ValueQuery"> 
        <xosid:implements xosid:interface="osid.configuration.ParameterQuery"/>
        <xosid:description>
            The interface to query a value.
        </xosid:description>


        <xosid:method xosid:name="matchConfigurationId">
            <xosid:description>
                Sets a configuration <xosid:token>Id</xosid:token> for
                this query.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    a configuration <xosid:token>Id</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a positive
                    match, <xosid:token>false</xosid:token> for
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationId</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="supportsConfigurationQuery">
            <xosid:description>
                Tests if a configuration query is available.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a configuration
                    query interface is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationQuery">
            <xosid:description>
                Gets the query interface for a configuration.
            </xosid:description>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a positive
                    match, <xosid:token>false</xosid:token> for
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationQuery"/>
                <xosid:description>
                    the configuration query
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsConfigurationQuery()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsConfigurationQuery()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationQueryForInterfaceType">
            <xosid:description>
                Gets the configuration query interface for the
                repository type. Supported types are defined in the
                <xosid:token>ConfigurationManager.</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="configurationInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    a configuration interface type
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a positive
                    match, <xosid:token>false</xosid:token> for
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationQuery"/>
                <xosid:description>
                    the configuration query
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>

                                        <xosid:token>configurationInterfaceType</xosid:token>
                    is <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>supportsConfigurationQuery()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>ConfigurationManager.supportsConfigurationInterfaceType(configurationInterfaceType)
                    is false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsConfigurationQuery()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="matchValue">
            <xosid:description>
                Sets the value for this query.
            </xosid:description>
            <xosid:parameter xosid:name="value">
                <xosid:primitiveType xosid:type="object"/>
                <xosid:description>
                    a value
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a positive
                    match, <xosid:token>false</xosid:token> for
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>value</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ValueSearch"> 
        <xosid:implements xosid:interface="osid.configuration.ParameterSearch"/>
        <xosid:description>
            Search options for values.
        </xosid:description>


        <xosid:method xosid:name="orderByConfiguration">
            <xosid:description>
                Specifies a preference for ordering the search results
                by configuration.
            </xosid:description>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ValueSearchResults"> 
        <xosid:implements xosid:interface="osid.OsidSearchResults"/>
        <xosid:description>
            This interface provides a means to capture results of a
            search and is used as a vehicle to perform a search within
            a previous result set.
        </xosid:description>


        <xosid:method xosid:name="getValues">
            <xosid:description>
                Gets the vakue list resulting from a search.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueList"/>
                <xosid:description>
                    the value list
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueSearchResultsInterface">
            <xosid:description>
                Gets the value search results interface corresponding
                to the <xosid:token>searchType</xosid:token> used in
                retrieving the <xosid:token>ValueSearch</xosid:token>
                interface. A
                <xosid:token>ValueSearchResults</xosid:token> returned
                from the search session is only required to implement
                the root <xosid:token>ValueSearchResults</xosid:token>
                interface. This method must be used to retrieve a
                search results object implementing the interface
                specified when retrieving the
                <xosid:token>ValueSearch</xosid:token> from the search
                session along with all of its ancestor interfaces,
                including the core
                <xosid:token>ValueSearchResults</xosid:token>
                interface.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueSearchResults"/>
                <xosid:description>
                    the value results interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ValueReceiver"> 
        <xosid:implements xosid:interface="osid.OsidReceiver"/>
        <xosid:description>
            The value receiver is the consumer supplied interface for
            receiving notifications pertaining to new, updated or
            deleted <xosid:token>Values</xosid:token>. A
            <xosid:token>Value</xosid:token> is associated with a
            <xosid:token>Parameter</xosid:token> so that notifications
            of new, updated or changed values are notified with
            <xosid:token>changedParamatere(paramaterId).</xosid:token>
        </xosid:description>


        <xosid:method xosid:name="changedValue">
            <xosid:description>
                The callback for notification of changed values.
            </xosid:description>
            <xosid:parameter xosid:name="parameterId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Parameter </xosid:token>with new
                    values
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ValueList"> 
        <xosid:implements xosid:interface="osid.OsidList"/>
        <xosid:description>
            Like all <xosid:token>OsidLists,</xosid:token>
            <xosid:token>ValueList</xosid:token> provides a means for
            accessing <xosid:token>Value</xosid:token> elements
            sequentially either one at a time or many at a time. Examples:

            <xosid:pbreak/>

             <xosid:code>
while (vl.hasNext()) {
     Value value = vl.getNextParameter();
}


            </xosid:code>
             or
            <xosid:code>


while (vl.hasNext()) {
     Value[] values = vl.getNextParameters(vl.available());
}
            </xosid:code>
             
        </xosid:description>


        <xosid:method xosid:name="getNextValue">
            <xosid:description>
                Gets the next <xosid:token>Value</xosid:token> in this
                list.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Value"/>
                <xosid:description>
                    the next <xosid:token>Value</xosid:token> in this
                    list. The <xosid:token>hasNext()</xosid:token>
                    method should be used to test that a next
                    <xosid:token>Value</xosid:token> is available
                    before calling this method.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getNextValues">
            <xosid:description>
                Gets the next set of <xosid:token>Values</xosid:token>
                in this list which must be less than or equal to the
                return from <xosid:token>available().</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="n">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the number of <xosid:token>Value
                    </xosid:token>elements requested which must be less
                    than or equal to
                    <xosid:token>available()</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Value" xosid:array="true"/>
                <xosid:description>
                    an array of <xosid:token>Value
                   </xosid:token>elements. <xosid:token>
                    </xosid:token>The length of the array is less than
                    or equal to the number specified.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.Configuration"> 
        <xosid:implements xosid:interface="osid.OsidCatalog"/>
        <xosid:description>
            <xosid:token>Configuration</xosid:token> represents a
            configuration object. It contains a name, description and a
            set of properties that describe a configuration data set.
        </xosid:description>


        <xosid:method xosid:name="getConfigurationInterface">
            <xosid:description>
                Gets the <xosid:token>Configuration</xosid:token>
                interface corresponding to the given
                <xosid:token>Configuration</xosid:token> interface
                <xosid:token>Type. </xosid:token>A
                <xosid:token>Configuration</xosid:token> returned from
                another method is only required to implement the root
                <xosid:token>Configuration</xosid:token> interface and
                this method must be used to retrieve a configuration
                object implementing the requested interface along with
                all of its ancestor interfaces, including the core
                <xosid:token>Configuration</xosid:token> interface.
                The
                <xosid:token>configurationInterfaceType</xosid:token>
                may be the <xosid:token>Type</xosid:token> returned by
                <xosid:token>getInterfaceType()</xosid:token> or any
                parent of <xosid:token>getInterfaceType()</xosid:token>
                in the <xosid:token>Type</xosid:token> hierarchy where
               
                <xosid:token>implementsInterfaceType(configurationInterfaceType)</xosid:token>
                is <xosid:token>true</xosid:token>.
            </xosid:description>
            <xosid:parameter xosid:name="rconfigurationInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type of the interface to retrieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Configuration"/>
                <xosid:description>
                    the configuration with the specified interface
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>

                                        <xosid:token>configurationInterfaceType</xosid:token>
                    is <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>implementsInterfaceType(configurationInterfaceType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ConfigurationQuery"> 
        <xosid:implements xosid:interface="osid.OsidCatalogQuery"/>
        <xosid:description>
            This is the query interface for searching configurations.
            Each method match request produces an
            <xosid:token>AND</xosid:token> term while multiple
            invocations of a method produces a nested
            <xosid:token>OR,</xosid:token> except for accessing the
            <xosid:token>ConfigurationQuery</xosid:token>
            subinterface.
        </xosid:description>


        <xosid:method xosid:name="supportsValueQuery">
            <xosid:description>
                Tests if a <xosid:token>ValueQuery</xosid:token> is
                available.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a value query
                    interface is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getValueQuery">
            <xosid:description>
                Gets the query interface for a value.
            </xosid:description>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> for a positive
                    match, <xosid:token>false</xosid:token> for
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ValueQuery"/>
                <xosid:description>
                    the value query
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportsValueQuery()</xosid:token> is
                    <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                    <xosid:token>supportsValueQuery()</xosid:token> is
                    <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationQueryInterface">
            <xosid:description>
                Gets the <xosid:token>ConfigurationQuery</xosid:token>
                interface corresponding to the
                <xosid:token>Configuration</xosid:token> interface
                <xosid:token>Type</xosid:token> provided in the search
                session. A
                <xosid:token>ConfigurationQuery</xosid:token> returned
                from the search session is only required to implement
                the root <xosid:token>ConfigurationQuery</xosid:token>
                interface. This method must be used to retrieve a query
                object implementing the interface specified when
                retrieving this object from the search session along
                with all of its ancestor interfaces, including the core
                <xosid:token>ConfigurationQuery</xosid:token>
                interface.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationQuery"/>
                <xosid:description>
                    the configuration query interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ConfigurationSearch"> 
        <xosid:implements xosid:interface="osid.OsidSearch"/>
        <xosid:description>
            The search interface to query a configuration.
        </xosid:description>


        <xosid:method xosid:name="searchWithinConfigurationResults">
            <xosid:description>
                Execute this search using a previous search result.
            </xosid:description>
            <xosid:parameter xosid:name="results">
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationSearchResults"/>
                <xosid:description>
                    results from a query
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>results</xosid:token> is not valid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>results</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="searchAmongConfigurations">
            <xosid:description>
                Execute this search among the given list of
                configurations.
            </xosid:description>
            <xosid:parameter xosid:name="configurationIds">
                <xosid:interfaceType xosid:type="osid.id.Id" xosid:array="true"/>
                <xosid:description>
                    list of configurations
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>configurationIds</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationSearchInterface">
            <xosid:description>
                Gets the <xosid:token>ConfigurationSearch</xosid:token>
                interface corresponding to the configuration search
                interface <xosid:token>Type</xosid:token> provided in
                the search session<xosid:token>. </xosid:token>A
                <xosid:token>ConfigurationSearch</xosid:token>
                returned from the search session is only required to
                implement the root
                <xosid:token>ConfigurationSearch</xosid:token>
                interface. This method must be used to retrieve a query
                object implementing the interface specified when
                retrieving this object from the search session along
                with all of its ancestor interfaces, including the core
                <xosid:token>ConfigurationSearch</xosid:token>
                interface.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationSearch"/>
                <xosid:description>
                    the configuration search interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ConfigurationSearchResults"> 
        <xosid:implements xosid:interface="osid.OsidSearchResults"/>
        <xosid:description>
            This interface provides a means to capture results of a
            search and is used as a vehicle to perform a search within
            a previous result set.
        </xosid:description>


        <xosid:method xosid:name="getConfigurations">
            <xosid:description>
                Gets the configuration list resulting from a search.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationList"/>
                <xosid:description>
                    the configuration list
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getConfigurationSearchResultsInterface">
            <xosid:description>
                Gets the configuration search results interface
                corresponding to the
                <xosid:token>searchType</xosid:token> used in
                retrieving the
                <xosid:token>ConfigurationSearch</xosid:token>
                interface. A
                <xosid:token>ConfigurationSearchResults</xosid:token>
                returned from the search session is only required to
                implement the root
                <xosid:token>ConfigurationSearchResults</xosid:token>
                interface. This method must be used to retrieve a
                search results object implementing the interface
                specified when retrieving the
                <xosid:token>ConfigurationSearch</xosid:token> from the
                search session along with all of its ancestor
                interfaces, including the core
                <xosid:token>ConfigurationSearchResults</xosid:token>
                interface.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationSearchResults"/>
                <xosid:description>
                    the configuration search results interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ConfigurationForm"> 
        <xosid:implements xosid:interface="osid.OsidCatalogForm"/>
        <xosid:description>
            This is the form for creating and updating configuration
           objects. <xosid:token> </xosid:token>Like all
            <xosid:token>OsidForm</xosid:token> objects, various data
            elements may be set here for use in the create and update
            methods in the
            <xosid:token>ConfigurationAdminSession.</xosid:token> For
            each data element that may be set, metadata may be examined
            to provide display hints or data constraints.
        </xosid:description>


        <xosid:method xosid:name="getConfigurationFormInterface">
            <xosid:description>
                Gets the <xosid:token>ConfigurationForm</xosid:token>
                interface corresponding to the
                <xosid:token>Configuration</xosid:token> interface
                <xosid:token>Type</xosid:token> provided in the admin
               session <xosid:token>. </xosid:token>A
                <xosid:token>ConfigurationForm</xosid:token> returned
                from the admin session is only required to implement
                the root <xosid:token>ConfigurationForm</xosid:token>
                interface. This method must be used to retrieve a query
                object implementing the interface specified when
                retrieving this object from the admin session along
                with all of its ancestor interfaces, including the core
                <xosid:token>ConfigurationForm</xosid:token>
                interface.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ConfigurationForm"/>
                <xosid:description>
                    the configuration form interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ConfigurationReceiver"> 
        <xosid:implements xosid:interface="osid.OsidReceiver"/>
        <xosid:description>
            The configuration receiver is the consumer supplied
            interface for receiving notifications pertaining to new,
            updated or deleted <xosid:token>Configuration</xosid:token>
            objects.
        </xosid:description>


        <xosid:method xosid:name="newConfiguration">
            <xosid:description>
                The callback for notifications of new configurations.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the new
                    <xosid:token>Configuration</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="newAncestorConfiguration">
            <xosid:description>
                The callback for notifications of new configuration
                ancestors.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="ancestorId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the new
                    <xosid:token>Configuration </xosid:token>ancestor
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="newDescendantConfiguration">
            <xosid:description>
                The callback for notifications of new configuration
                descendants.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="descendantId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the new
                    <xosid:token>Configuration
                    </xosid:token>descendant
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="changedConfiguration">
            <xosid:description>
                The callback for notification of updated
                configurations.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the updated
                    <xosid:token>Configuration</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="deletedConfiguration">
            <xosid:description>
                The callback for notification of deleted
                configurations.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the deleted
                    <xosid:token>Configuration</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="deletedAncestorConfiguration">
            <xosid:description>
                The callback for notifications of deleted configuration
                ancestors.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="ancestorId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the removed
                    <xosid:token>Configuration </xosid:token>ancestor
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="deletedDescendantConfiguration">
            <xosid:description>
                The callback for notifications of deleted configuration
                descendants.
            </xosid:description>
            <xosid:parameter xosid:name="configurationId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Configuration</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="descendantId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the removed
                    <xosid:token>Configuration
                    </xosid:token>descendant
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.ConfigurationList"> 
        <xosid:implements xosid:interface="osid.OsidList"/>
        <xosid:description>
            Like all <xosid:token>OsidLists,</xosid:token>
            <xosid:token>ConfigurationList</xosid:token> provides a
            means for accessing
            <xosid:token>Configuration</xosid:token> elements
            sequentially either one at a time or many at a time. Examples:

            <xosid:pbreak/>

             <xosid:code>
while (cl.hasNext()) {
     Configuration config = cl.getNextConfiguration();
}


            </xosid:code>
             or
            <xosid:code>


while (cl.hasNext()) {
     Configuration[] configs = cl.getNextConfigurations(cl.available());
}
            </xosid:code>
             
        </xosid:description>


        <xosid:method xosid:name="getNextConfiguration">
            <xosid:description>
                Gets the next <xosid:token>Configuration</xosid:token>
                in this list.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Configuration"/>
                <xosid:description>
                    the next <xosid:token>Configuration</xosid:token>
                    in this list. The
                    <xosid:token>hasNext()</xosid:token> method should
                    be used to test that a next
                    <xosid:token>Configuration</xosid:token> is
                    available before calling this method.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getNextConfigurations">
            <xosid:description>
                Gets the next set of
                <xosid:token>Configuration</xosid:token> objects in
                this lis which must be less than or equal to whst is
                returned from <xosid:token>available().</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="n">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the number of <xosid:token>Configuration
                    </xosid:token>elements requested which should be
                    less than or equal to
                    <xosid:token>available()</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Configuration" xosid:array="true"/>
                <xosid:description>
                    an array of <xosid:token>Configuration
                   </xosid:token>elements. <xosid:token>
                    </xosid:token>The length of the array is less than
                    or equal to the number specified.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.Registry"> 
        <xosid:implements xosid:interface="osid.OsidCatalog"/>
        <xosid:description>
            The configuration registry defines a place where parameter
            definitions are defined and managed.
        </xosid:description>


        <xosid:method xosid:name="getRegistryInterface">
            <xosid:description>
                Gets the <xosid:token>Registry</xosid:token> interface
                corresponding to the given
                <xosid:token>Registry</xosid:token> interface
                <xosid:token>Type. </xosid:token>A
                <xosid:token>Registry</xosid:token> returned from
                another method is only required to implement the root
                <xosid:token>Registry</xosid:token> interface and this
                method must be used to retrieve a registry object
                implementing the requested interface along with all of
                its ancestor interfaces, including the core
                <xosid:token>Registry</xosid:token> interface. The
                <xosid:token>registryInterfaceType</xosid:token> may
                be the <xosid:token>Type</xosid:token> returned by
                <xosid:token>getInterfaceType()</xosid:token> or any
                parent of <xosid:token>getInterfaceType()</xosid:token>
                in the <xosid:token>Type</xosid:token> hierarchy where
               
                <xosid:token>implementsInterfaceType(registryInterfaceType)</xosid:token>
                is <xosid:token>true</xosid:token>.
            </xosid:description>
            <xosid:parameter xosid:name="registryInterfaceType">
                <xosid:interfaceType xosid:type="osid.type.Type"/>
                <xosid:description>
                    the type of the interface to retrieve
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Registry"/>
                <xosid:description>
                    the registry with the specified interface
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryInterfaceType</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="PERMISSION_DENIED" xosid:category="User">
                <xosid:description>
                    authorization failure occurred
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="UNSUPPORTED" xosid:category="Integration">
                <xosid:description>

                                        <xosid:token>implementsInterfaceType(registryInterfaceType)</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.RegistryQuery"> 
        <xosid:implements xosid:interface="osid.OsidCatalogQuery"/>
        <xosid:description>
            This is the query interface for searching registries. Each
            method match request produces an
            <xosid:token>AND</xosid:token> term while multiple
            invocations of a method produces a nested
            <xosid:token>OR,</xosid:token> except for accessing the
            <xosid:token>RegistryQuery</xosid:token> subinterface.
        </xosid:description>


        <xosid:method xosid:name="supportsParameterQuery">
            <xosid:description>
                Tests if a <xosid:token>Parameter</xosid:token> is
                available.
            </xosid:description>
            <xosid:return>
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> if a parameter
                    query interface is available,
                    <xosid:token>false</xosid:token> otherwise
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getParameterQuery">
            <xosid:description>
                Gets the query interface for a parameter.
            </xosid:description>
            <xosid:parameter xosid:name="match">
                <xosid:primitiveType xosid:type="boolean"/>
                <xosid:description>
                    <xosid:token>true</xosid:token> for a positive
                    match, <xosid:token>false</xosid:token> for
                    negative match
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.ParameterQuery"/>
                <xosid:description>
                    the parameter query
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="UNIMPLEMENTED" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>supportParameterQuery()</xosid:token>
                    is <xosid:token>false</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="optional">
                <xosid:description>
                    This method must be implemented if
                   
                    <xosid:token>supportsParametrerQuery()</xosid:token>
                    is <xosid:token>true.</xosid:token>
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistryQueryInterface">
            <xosid:description>
                Gets the <xosid:token>RegistryQuery</xosid:token>
                interface corresponding to the
                <xosid:token>Registry</xosid:token> interface
                <xosid:token>Type</xosid:token> provided in the search
                session. A <xosid:token>RegistryQuery</xosid:token>
                returned from the search session is only required to
                implement the root
                <xosid:token>RegistryQuery</xosid:token> interface.
                This method must be used to retrieve a query object
                implementing the interface specified when retrieving
                this object from the search session along with all of
                its ancestor interfaces, including the core
                <xosid:token>RegistryQuery</xosid:token> interface.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryQuery"/>
                <xosid:description>
                    the registry query interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.RegistrySearch"> 
        <xosid:implements xosid:interface="osid.OsidSearch"/>
        <xosid:description>
            The interface to registry search options.
        </xosid:description>


        <xosid:method xosid:name="searchWithinRegistryResults">
            <xosid:description>
                Execute this search using a previous search result.
            </xosid:description>
            <xosid:parameter xosid:name="results">
                <xosid:interfaceType xosid:type="osid.configuration.RegistrySearchResults"/>
                <xosid:description>
                    results from a query
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="INVALID_ARGUMENT" xosid:category="Integration">
                <xosid:description>
                    <xosid:token>results</xosid:token> is not valid
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>results</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="searchAmongRegistries">
            <xosid:description>
                Execute this search among the given list of registries.
            </xosid:description>
            <xosid:parameter xosid:name="registryIds">
                <xosid:interfaceType xosid:type="osid.id.Id" xosid:array="true"/>
                <xosid:description>
                    list of registries
                </xosid:description>
            </xosid:parameter>
            <xosid:error xosid:type="NULL_ARGUMENT" xosid:category="Programming">
                <xosid:description>
                    <xosid:token>registryIds</xosid:token> is
                    <xosid:token>null</xosid:token>
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistrySearchInterface">
            <xosid:description>
                Gets the <xosid:token>RegistrySearch</xosid:token>
                interface corresponding to the registry search
                interface <xosid:token>Type</xosid:token> provided in
                the search session<xosid:token>. </xosid:token>A
                <xosid:token>RegistrySearch</xosid:token> returned
                from the search session is only required to implement
                the root <xosid:token>RegistrySearch</xosid:token>
                interface. This method must be used to retrieve a query
                object implementing the interface specified when
                retrieving this object from the search session along
                with all of its ancestor interfaces, including the core
                <xosid:token>RegistrySearch</xosid:token> interface.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistrySearch"/>
                <xosid:description>
                    the registry search interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.RegistrySearchResults"> 
        <xosid:implements xosid:interface="osid.OsidSearchResults"/>
        <xosid:description>
            This interface provides a means to capture results of a
            search and is used as a vehicle to perform a search within
            a previous result set.
        </xosid:description>


        <xosid:method xosid:name="getRegistries">
            <xosid:description>
                Gets the registry list resulting from a search.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryList"/>
                <xosid:description>
                    the registry list
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getRegistrySearchResultsInterface">
            <xosid:description>
                Gets the regustry search results interface
                corresponding to the
                <xosid:token>searchType</xosid:token> used in
                retrieving the
                <xosid:token>RegistrySearch</xosid:token> interface. A
                <xosid:token>RegistrySearchResults</xosid:token>
                returned from the search session is only required to
                implement the root
                <xosid:token>RegistrySearchResults</xosid:token>
                interface. This method must be used to retrieve a
                search results object implementing the interface
                specified when retrieving the
                <xosid:token>RegistrySearch</xosid:token> from the
                search session along with all of its ancestor
                interfaces, including the core
                <xosid:token>RegistrySearchResults</xosid:token>
                interface.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistrySearchResults"/>
                <xosid:description>
                    the registry search results interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.RegistryForm"> 
        <xosid:implements xosid:interface="osid.OsidCatalogForm"/>
        <xosid:description>
            This is the form for creating and updating
           registries. <xosid:token> </xosid:token>Like all
            <xosid:token>OsidForm</xosid:token> objects, various data
            elements may be set here for use in the create and update
            methods in the
            <xosid:token>RegistryAdminSession.</xosid:token> For each
            data element that may be set, metadata may be examined to
            provide display hints or data constraints.
        </xosid:description>


        <xosid:method xosid:name="getRegistryFormInterface">
            <xosid:description>
                Gets the <xosid:token>RegistryForm</xosid:token>
                interface corresponding to the
                <xosid:token>Registry</xosid:token> interface
                <xosid:token>Type</xosid:token> provided in the admin
               session <xosid:token>. </xosid:token>A
                <xosid:token>RegistryForm</xosid:token> returned from
                the admin session is only required to implement the
                root <xosid:token>RegistryForm</xosid:token> interface.
                This method must be used to retrieve a query object
                implementing the interface specified when retrieving
                this object from the admin session along with all of
                its ancestor interfaces, including the core
                <xosid:token>RegistryForm</xosid:token> interface.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.RegistryForm"/>
                <xosid:description>
                    the registry form interface
                </xosid:description>
            </xosid:return>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.RegistryReceiver"> 
        <xosid:implements xosid:interface="osid.OsidReceiver"/>
        <xosid:description>
            The registry receiver is the consumer supplied interface
            for receiving notifications pertaining to new, updated or
            deleted <xosid:token>Registry</xosid:token> objects.
        </xosid:description>


        <xosid:method xosid:name="newRegistry">
            <xosid:description>
                The callback for notifications of new registries.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the new
                    <xosid:token>Registry</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="newAncestorRegistry">
            <xosid:description>
                The callback for notifications of new registry
                ancestors.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Registry</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="ancestorId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the new
                    <xosid:token>Registry </xosid:token>ancestor
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="newDescendantRegistry">
            <xosid:description>
                The callback for notifications of new registry
                descendants.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Registry</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="descendantId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the new
                    <xosid:token>Registry </xosid:token>descendant
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="changedRegistry">
            <xosid:description>
                The callback for notification of updated registries.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the updated
                    <xosid:token>Registry</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="deletedRegistry">
            <xosid:description>
                The callback for notification of deleted registries.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the deleted
                    <xosid:token>Registry</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="deletedAncestorRegistry">
            <xosid:description>
                The callback for notifications of deleted registry
                ancestors.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Registry</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="ancestorId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the removed
                    <xosid:token>Registry </xosid:token>ancestor
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="deletedDescendantRegistry">
            <xosid:description>
                The callback for notifications of deleted registry
                descendants.
            </xosid:description>
            <xosid:parameter xosid:name="registryId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the
                    <xosid:token>Registry</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:parameter xosid:name="descendantId">
                <xosid:interfaceType xosid:type="osid.id.Id"/>
                <xosid:description>
                    the <xosid:token>Id</xosid:token> of the removed
                    <xosid:token>Registry </xosid:token>descendant
                </xosid:description>
            </xosid:parameter>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>


    <xosid:interface xosid:name="osid.configuration.RegistryList"> 
        <xosid:implements xosid:interface="osid.OsidList"/>
        <xosid:description>
            Like all <xosid:token>OsidLists,</xosid:token>
            <xosid:token>RegistryList</xosid:token> provides a means
            for accessing <xosid:token>Registry</xosid:token> elements
            sequentially either one at a time or many at a time. Examples:

            <xosid:pbreak/>

             <xosid:code>
while (rl.hasNext()) {
     Registry registry = rl.getNextRegistry();
}


            </xosid:code>
             or
            <xosid:code>


while (rl.hasNext()) {
     Registry[] registries = rl.getNextRegistries(rl.available());
}
            </xosid:code>
             
        </xosid:description>


        <xosid:method xosid:name="getNextRegistry">
            <xosid:description>
                Gets the next <xosid:token>Registry</xosid:token> in
                this list.
            </xosid:description>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Registry"/>
                <xosid:description>
                    the next <xosid:token>Registry</xosid:token> in
                    this list. The <xosid:token>hasNext()</xosid:token>
                    method should be used to test that a next
                    <xosid:token>Registry</xosid:token> is available
                    before calling this method.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>

        <xosid:method xosid:name="getNextRegistries">
            <xosid:description>
                Gets the next set of
                <xosid:token>Registry</xosid:token> objects in this lis
                which must be less than or equal to whst is returned
                from <xosid:token>available().</xosid:token>
            </xosid:description>
            <xosid:parameter xosid:name="n">
                <xosid:primitiveType xosid:type="cardinal"/>
                <xosid:description>
                    the number of <xosid:token>Registry
                    </xosid:token>elements requested which should be
                    less than or equal to
                    <xosid:token>available()</xosid:token>
                </xosid:description>
            </xosid:parameter>
            <xosid:return>
                <xosid:interfaceType xosid:type="osid.configuration.Registry" xosid:array="true"/>
                <xosid:description>
                    an array of <xosid:token>Registry
                   </xosid:token>elements. <xosid:token>
                    </xosid:token>The length of the array is less than
                    or equal to the number specified.
                </xosid:description>
            </xosid:return>
            <xosid:error xosid:type="ILLEGAL_STATE" xosid:category="Programming">
                <xosid:description>
                    no more elements available in this list
                </xosid:description>
            </xosid:error>
            <xosid:error xosid:type="OPERATION_FAILED" xosid:category="Operational">
                <xosid:description>
                    unable to complete request
                </xosid:description>
            </xosid:error>
            <xosid:compliance xosid:type="mandatory">
                <xosid:description>
                    This method must be implemented.
                </xosid:description>
            </xosid:compliance>
        </xosid:method>
    </xosid:interface>

</xosid:osid>
